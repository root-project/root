diff --git a/src/interpreter/cling/lib/Utils/AST.cpp b/src/interpreter/cling/lib/Utils/AST.cpp
index da3b0724e5..f7ba7623aa 100644
--- a/src/interpreter/cling/lib/Utils/AST.cpp
+++ b/src/interpreter/cling/lib/Utils/AST.cpp
@@ -708,7 +708,12 @@ namespace utils {
                                 const llvm::SmallSet<const Decl*, 4>& ToSkip)
   {
     // Return true, if we should keep this typedef rather than desugaring it.
-
+    QualType qt = TT->getDecl()->getUnderlyingType();
+    CXXRecordDecl* decl = qt->getAsCXXRecordDecl();
+    if (decl && (decl->getAccess() == AS_private || decl->getAccess() == AS_protected)) {
+        // desugaring would result in an inaccessible type, so leave it alone
+        return true;
+    }
     return 0 != ToSkip.count(TT->getDecl()->getCanonicalDecl());
   }
 
@@ -1140,6 +1145,10 @@ namespace utils {
         dyn_cast_or_null<UsingType>(QT.getTypePtr());
       if (typedeftype) {
         decl = typedeftype->getDecl();
+        if (decl && (decl->getAccess() == AS_private || decl->getAccess() == AS_protected)) {
+          // desugaring would result in an inaccessible type, so leave it alone
+          return QT;
+         }
       } else if (usingtype) {
         decl = usingtype->getFoundDecl();
       } else {
         // There are probably other cases ...
         const TagType* tagdecltype = dyn_cast_or_null<TagType>(QT.getTypePtr());
