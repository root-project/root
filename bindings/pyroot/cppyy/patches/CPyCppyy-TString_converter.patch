From 0afef7c8570b39a0145395f7436d217599d79ee5 Mon Sep 17 00:00:00 2001
From: Jonas Rembser <jonas.rembser@cern.ch>
Date: Tue, 29 Jul 2025 17:41:27 +0200
Subject: [PATCH] [CPyCppyy] Add `TString` converters

---
 bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx      | 4 ++++
 bindings/pyroot/cppyy/CPyCppyy/src/DeclareConverters.h | 4 ++++
 2 files changed, 8 insertions(+)

diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
index d14c8bc2892..a9461eba659 100644
--- a/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
+++ b/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx
@@ -1942,6 +1942,7 @@ bool CPyCppyy::name##Converter::ToMemory(                                    \
     return InstanceConverter::ToMemory(value, address, ctxt);                \
 }
 
+CPPYY_IMPL_STRING_AS_PRIMITIVE_CONVERTER(TString, TString, Data, Length)
 CPPYY_IMPL_STRING_AS_PRIMITIVE_CONVERTER(STLString, std::string, c_str, size)
 
 
@@ -3606,6 +3607,9 @@ public:
         gf[CCOMPLEX_D " ptr"] =             gf["std::complex<double> ptr"];
 
     // factories for special cases
+        gf["TString"] =                     (cf_t)+[](cdims_t) { return new TStringConverter{}; };
+        gf["TString&"] =                    gf["TString"];
+        gf["const TString&"] =              gf["TString"];
         gf["nullptr_t"] =                   (cf_t)+[](cdims_t) { static NullptrConverter c{};        return &c;};
         gf["const char*"] =                 (cf_t)+[](cdims_t) { return new CStringConverter{}; };
         gf["const signed char*"] =          gf["const char*"];
diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/DeclareConverters.h b/bindings/pyroot/cppyy/CPyCppyy/src/DeclareConverters.h
index 1757f5070c1..5ca1c26cd78 100644
--- a/bindings/pyroot/cppyy/CPyCppyy/src/DeclareConverters.h
+++ b/bindings/pyroot/cppyy/CPyCppyy/src/DeclareConverters.h
@@ -9,6 +9,9 @@
 #include <complex>
 #include <string>
 
+// ROOT
+#include "ROOT/RStringView.hxx"
+#include "TString.h"
 
 namespace CPyCppyy {
 
@@ -381,6 +384,7 @@ protected:                                                                   \
     strtype fBuffer;                                                         \
 }
 
+CPPYY_DECLARE_STRING_CONVERTER(TString, TString);
 CPPYY_DECLARE_STRING_CONVERTER(STLString, std::string);
 CPPYY_DECLARE_STRING_CONVERTER(STLWString, std::wstring);
 #if (__cplusplus > 201402L) || (defined(_MSC_VER) && _MSVC_LANG > 201402L)
-- 
2.50.1

