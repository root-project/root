From 8f54f8c5434ff593b5a3acc3f97e4cd5f0310fdd Mon Sep 17 00:00:00 2001
From: Jonas Rembser <jonas.rembser@cern.ch>
Date: Thu, 7 Nov 2024 10:19:04 +0100
Subject: [PATCH] [CPyCppyy] Don't attempt to expose protected data members in
 dispatcher

This mechanism crashes in Python 3.13, and it also didn't work before
with previous Python 3 versions:

```python
import cppyy

cppyy.cppdef("""

class MyBaseClass {
public:
   virtual ~MyBaseClass() = default;
protected:
   int protectedFunc() { return 5; }
   int _protectedData = 4;
};

""")

class MyDerivedClass(cppyy.gbl.MyBaseClass):
    pass

my_obj = MyDerivedClass()

print(my_obj.protectedFunc()) # works!
print(my_obj._protectedData) # doesn't work!
```

Here is the output with Python 3.8 on lxplus for example:

```txt
5
Traceback (most recent call last):
  File "/afs/cern.ch/user/r/rembserj/repro.py", line 21, in <module>
    print(my_obj._protectedData) # doesn't work!
AttributeError: 'MyDerivedClass' object has no attribute '_protectedData'
```

It actually worked in the past before the cppyy upgrade in ROOT 6.32.

Therefore, there is still a regression that should be fixed.

However, commenting out the code that now doesn't work anyway still
helps to avoid the crashes in Python 3.13, so this commit suggests to do
this.
---
 bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
index cdef2b8c7b..0fd1705966 100644
--- a/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
+++ b/bindings/pyroot/cppyy/CPyCppyy/src/Dispatcher.cxx
@@ -407,6 +407,7 @@ bool CPyCppyy::InsertDispatcher(CPPScope* klass, PyObject* bases, PyObject* dct,
 
 // destructor: default is fine
 
+#if 0 // doesn't work
 // pull in data members that are protected
     bool setPublic = false;
     for (const auto& binfo : base_infos) {
@@ -426,6 +427,7 @@ bool CPyCppyy::InsertDispatcher(CPPScope* klass, PyObject* bases, PyObject* dct,
             }
         }
     }
+#endif
 
 // initialize the dispatch pointer for all direct bases that have one
     BaseInfos_t::size_type disp_inited = 0;
-- 
2.47.0

