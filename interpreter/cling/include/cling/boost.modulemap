module boost_accumulators [system] {
  export *
  module "accumulators__accumulators_fwd" { header "accumulators/accumulators_fwd.hpp" export * }
  module "accumulators__accumulators" { header "accumulators/accumulators.hpp" export * }
  module "accumulators__framework__accumulator_base" { header "accumulators/framework/accumulator_base.hpp" export * }
  module "accumulators__framework__accumulator_concept" { header "accumulators/framework/accumulator_concept.hpp" export * }
  module "accumulators__framework__accumulators__droppable_accumulator" { header "accumulators/framework/accumulators/droppable_accumulator.hpp" export * }
  module "accumulators__framework__accumulator_set" { header "accumulators/framework/accumulator_set.hpp" export * }
  module "accumulators__framework__accumulators__external_accumulator" { header "accumulators/framework/accumulators/external_accumulator.hpp" export * }
  module "accumulators__framework__accumulators__reference_accumulator" { header "accumulators/framework/accumulators/reference_accumulator.hpp" export * }
  module "accumulators__framework__accumulators__value_accumulator" { header "accumulators/framework/accumulators/value_accumulator.hpp" export * }
  module "accumulators__framework__depends_on" { header "accumulators/framework/depends_on.hpp" export * }
  module "accumulators__framework__external" { header "accumulators/framework/external.hpp" export * }
  module "accumulators__framework__extractor" { header "accumulators/framework/extractor.hpp" export * }
  module "accumulators__framework__features" { header "accumulators/framework/features.hpp" export * }
  module "accumulators__framework__parameters__accumulator" { header "accumulators/framework/parameters/accumulator.hpp" export * }
  module "accumulators__framework__parameters__sample" { header "accumulators/framework/parameters/sample.hpp" export * }
  module "accumulators__framework__parameters__weight" { header "accumulators/framework/parameters/weight.hpp" export * }
  module "accumulators__framework__parameters__weights" { header "accumulators/framework/parameters/weights.hpp" export * }
  module "accumulators__numeric__detail__function1" { header "accumulators/numeric/detail/function1.hpp" export * }
  module "accumulators__numeric__detail__function2" { header "accumulators/numeric/detail/function2.hpp" export * }
  module "accumulators__numeric__detail__function3" { header "accumulators/numeric/detail/function3.hpp" export * }
  module "accumulators__numeric__detail__function4" { header "accumulators/numeric/detail/function4.hpp" export * }
  module "accumulators__numeric__detail__pod_singleton" { header "accumulators/numeric/detail/pod_singleton.hpp" export * }
  module "accumulators__numeric__functional__complex" { header "accumulators/numeric/functional/complex.hpp" export * }
  module "accumulators__numeric__functional_fwd" { header "accumulators/numeric/functional_fwd.hpp" export * }
  module "accumulators__numeric__functional" { header "accumulators/numeric/functional.hpp" export * }
  module "accumulators__numeric__functional__valarray" { header "accumulators/numeric/functional/valarray.hpp" export * }
  module "accumulators__numeric__functional__vector" { header "accumulators/numeric/functional/vector.hpp" export * }
  module "accumulators__statistics__count" { header "accumulators/statistics/count.hpp" export * }
  module "accumulators__statistics__covariance" { header "accumulators/statistics/covariance.hpp" export * }
  module "accumulators__statistics__density" { header "accumulators/statistics/density.hpp" export * }
  module "accumulators__statistics__error_of" { header "accumulators/statistics/error_of.hpp" export * }
  module "accumulators__statistics__error_of_mean" { header "accumulators/statistics/error_of_mean.hpp" export * }
  module "accumulators__statistics_fwd" { header "accumulators/statistics_fwd.hpp" export * }
  module "accumulators__statistics__kurtosis" { header "accumulators/statistics/kurtosis.hpp" export * }
  module "accumulators__statistics__max" { header "accumulators/statistics/max.hpp" export * }
  module "accumulators__statistics__mean" { header "accumulators/statistics/mean.hpp" export * }
  module "accumulators__statistics__median" { header "accumulators/statistics/median.hpp" export * }
  module "accumulators__statistics__min" { header "accumulators/statistics/min.hpp" export * }
  module "accumulators__statistics__moment" { header "accumulators/statistics/moment.hpp" export * }
  module "accumulators__statistics__parameters__quantile_probability" { header "accumulators/statistics/parameters/quantile_probability.hpp" export * }
  module "accumulators__statistics__peaks_over_threshold" { header "accumulators/statistics/peaks_over_threshold.hpp" export * }
  module "accumulators__statistics__pot_quantile" { header "accumulators/statistics/pot_quantile.hpp" export * }
  module "accumulators__statistics__pot_tail_mean" { header "accumulators/statistics/pot_tail_mean.hpp" export * }
  module "accumulators__statistics__p_square_cumul_dist" { header "accumulators/statistics/p_square_cumul_dist.hpp" export * }
  module "accumulators__statistics__p_square_quantile" { header "accumulators/statistics/p_square_quantile.hpp" export * }
  module "accumulators__statistics__rolling_count" { header "accumulators/statistics/rolling_count.hpp" export * }
  module "accumulators__statistics__rolling_mean" { header "accumulators/statistics/rolling_mean.hpp" export * }
  module "accumulators__statistics__rolling_moment" { header "accumulators/statistics/rolling_moment.hpp" export * }
  module "accumulators__statistics__rolling_sum" { header "accumulators/statistics/rolling_sum.hpp" export * }
  module "accumulators__statistics__rolling_variance" { header "accumulators/statistics/rolling_variance.hpp" export * }
  module "accumulators__statistics__rolling_window" { header "accumulators/statistics/rolling_window.hpp" export * }
  module "accumulators__statistics__skewness" { header "accumulators/statistics/skewness.hpp" export * }
  module "accumulators__statistics__stats" { header "accumulators/statistics/stats.hpp" export * }
  module "accumulators__statistics__sum" { header "accumulators/statistics/sum.hpp" export * }
  module "accumulators__statistics__sum_kahan" { header "accumulators/statistics/sum_kahan.hpp" export * }
  module "accumulators__statistics__tail" { header "accumulators/statistics/tail.hpp" export * }
  module "accumulators__statistics__tail_mean" { header "accumulators/statistics/tail_mean.hpp" export * }
  module "accumulators__statistics__tail_quantile" { header "accumulators/statistics/tail_quantile.hpp" export * }
  module "accumulators__statistics__tail_variate" { header "accumulators/statistics/tail_variate.hpp" export * }
  module "accumulators__statistics__tail_variate_means" { header "accumulators/statistics/tail_variate_means.hpp" export * }
  module "accumulators__statistics__variance" { header "accumulators/statistics/variance.hpp" export * }
  module "accumulators__statistics__variates__covariate" { header "accumulators/statistics/variates/covariate.hpp" export * }
  module "accumulators__statistics__weighted_covariance" { header "accumulators/statistics/weighted_covariance.hpp" export * }
  module "accumulators__statistics__weighted_density" { header "accumulators/statistics/weighted_density.hpp" export * }
  module "accumulators__statistics__weighted_kurtosis" { header "accumulators/statistics/weighted_kurtosis.hpp" export * }
  module "accumulators__statistics__weighted_mean" { header "accumulators/statistics/weighted_mean.hpp" export * }
  module "accumulators__statistics__weighted_median" { header "accumulators/statistics/weighted_median.hpp" export * }
  module "accumulators__statistics__weighted_moment" { header "accumulators/statistics/weighted_moment.hpp" export * }
  module "accumulators__statistics__weighted_peaks_over_threshold" { header "accumulators/statistics/weighted_peaks_over_threshold.hpp" export * }
  module "accumulators__statistics__weighted_p_square_cumul_dist" { header "accumulators/statistics/weighted_p_square_cumul_dist.hpp" export * }
  module "accumulators__statistics__weighted_p_square_quantile" { header "accumulators/statistics/weighted_p_square_quantile.hpp" export * }
  module "accumulators__statistics__weighted_skewness" { header "accumulators/statistics/weighted_skewness.hpp" export * }
  module "accumulators__statistics__weighted_sum" { header "accumulators/statistics/weighted_sum.hpp" export * }
  module "accumulators__statistics__weighted_sum_kahan" { header "accumulators/statistics/weighted_sum_kahan.hpp" export * }
  module "accumulators__statistics__weighted_tail_mean" { header "accumulators/statistics/weighted_tail_mean.hpp" export * }
  module "accumulators__statistics__weighted_tail_quantile" { header "accumulators/statistics/weighted_tail_quantile.hpp" export * }
  module "accumulators__statistics__weighted_tail_variate_means" { header "accumulators/statistics/weighted_tail_variate_means.hpp" export * }
  module "accumulators__statistics__weighted_variance" { header "accumulators/statistics/weighted_variance.hpp" export * }
  module "accumulators__statistics__with_error" { header "accumulators/statistics/with_error.hpp" export * }
}
module boost_align {
  export *
  module align_align { export * header "align.hpp" }
}
module boost_any { export * module "any" { header "any.hpp" export * } }
module boost_array { export * module "array" { header "array.hpp" export * } }
module boost_asio {
  export *
  module "asio" { header "asio.hpp" export * }
  module "asio__async_result" { header "asio/async_result.hpp" export * }
  module "asio__basic_streambuf_fwd" { header "asio/basic_streambuf_fwd.hpp" export * }
  module "asio__basic_streambuf" { header "asio/basic_streambuf.hpp" export * }
  module "asio__buffered_read_stream_fwd" { header "asio/buffered_read_stream_fwd.hpp" export * }
  module "asio__buffered_stream_fwd" { header "asio/buffered_stream_fwd.hpp" export * }
  module "asio__buffered_write_stream_fwd" { header "asio/buffered_write_stream_fwd.hpp" export * }
  module "asio__buffer" { header "asio/buffer.hpp" export * }
  module "asio__buffers_iterator" { header "asio/buffers_iterator.hpp" export * }
  module "asio__completion_condition" { header "asio/completion_condition.hpp" export * }
  module "asio__coroutine" { header "asio/coroutine.hpp" export * }
  module "asio__detail__array_fwd" { header "asio/detail/array_fwd.hpp" export * }
  module "asio__detail__array" { header "asio/detail/array.hpp" export * }
  module "asio__detail__assert" { header "asio/detail/assert.hpp" export * }
  module "asio__detail__atomic_count" { header "asio/detail/atomic_count.hpp" export * }
  module "asio__detail__bind_handler" { header "asio/detail/bind_handler.hpp" export * }
  module "asio__detail__buffered_stream_storage" { header "asio/detail/buffered_stream_storage.hpp" export * }
  module "asio__detail__buffer_resize_guard" { header "asio/detail/buffer_resize_guard.hpp" export * }
  module "asio__detail__buffer_sequence_adapter" { header "asio/detail/buffer_sequence_adapter.hpp" export * }
  module "asio__detail__call_stack" { header "asio/detail/call_stack.hpp" export * }
  module "asio__detail__chrono_time_traits" { header "asio/detail/chrono_time_traits.hpp" export * }
  module "asio__detail__config" { header "asio/detail/config.hpp" export * }
  module "asio__detail__consuming_buffers" { header "asio/detail/consuming_buffers.hpp" export * }
  module "asio__detail__cstdint" { header "asio/detail/cstdint.hpp" export * }
  module "asio__detail__date_time_fwd" { header "asio/detail/date_time_fwd.hpp" export * }
  module "asio__detail__dependent_type" { header "asio/detail/dependent_type.hpp" export * }
  module "asio__detail__dev_poll_reactor" { header "asio/detail/dev_poll_reactor.hpp" export * }
  module "asio__detail__fenced_block" { header "asio/detail/fenced_block.hpp" export * }
  module "asio__detail__gcc_arm_fenced_block" { header "asio/detail/gcc_arm_fenced_block.hpp" export * }
  module "asio__detail__gcc_hppa_fenced_block" { header "asio/detail/gcc_hppa_fenced_block.hpp" export * }
  module "asio__detail__handler_alloc_helpers" { header "asio/detail/handler_alloc_helpers.hpp" export * }
  module "asio__detail__handler_cont_helpers" { header "asio/detail/handler_cont_helpers.hpp" export * }
  module "asio__detail__handler_invoke_helpers" { header "asio/detail/handler_invoke_helpers.hpp" export * }
  module "asio__detail__handler_tracking" { header "asio/detail/handler_tracking.hpp" export * }
  module "asio__detail__handler_type_requirements" { header "asio/detail/handler_type_requirements.hpp" export * }
  module "asio__detail__hash_map" { header "asio/detail/hash_map.hpp" export * }
  module "asio__detail__impl__dev_poll_reactor" { header "asio/detail/impl/dev_poll_reactor.hpp" export * }
  module "asio__detail__impl__epoll_reactor" { header "asio/detail/impl/epoll_reactor.hpp" export * }
  module "asio__detail__impl__kqueue_reactor" { header "asio/detail/impl/kqueue_reactor.hpp" export * }
  module "asio__detail__impl__select_reactor" { header "asio/detail/impl/select_reactor.hpp" export * }
  module "asio__detail__impl__winrt_timer_scheduler" { header "asio/detail/impl/winrt_timer_scheduler.hpp" export * }
  module "asio__detail__io_control" { header "asio/detail/io_control.hpp" export * }
  module "asio__detail__keyword_tss_ptr" { header "asio/detail/keyword_tss_ptr.hpp" export * }
  module "asio__detail__kqueue_reactor" { header "asio/detail/kqueue_reactor.hpp" export * }
  module "asio__detail__limits" { header "asio/detail/limits.hpp" export * }
  module "asio__detail__local_free_on_block_exit" { header "asio/detail/local_free_on_block_exit.hpp" export * }
  module "asio__detail__macos_fenced_block" { header "asio/detail/macos_fenced_block.hpp" export * }
  module "asio__detail__memory" { header "asio/detail/memory.hpp" export * }
  module "asio__detail__noncopyable" { header "asio/detail/noncopyable.hpp" export * }
  module "asio__detail__null_event" { header "asio/detail/null_event.hpp" export * }
  module "asio__detail__null_mutex" { header "asio/detail/null_mutex.hpp" export * }
  module "asio__detail__null_reactor" { header "asio/detail/null_reactor.hpp" export * }
  module "asio__detail__null_signal_blocker" { header "asio/detail/null_signal_blocker.hpp" export * }
  module "asio__detail__null_socket_service" { header "asio/detail/null_socket_service.hpp" export * }
  module "asio__detail__null_static_mutex" { header "asio/detail/null_static_mutex.hpp" export * }
  module "asio__detail__null_thread" { header "asio/detail/null_thread.hpp" export * }
  module "asio__detail__null_tss_ptr" { header "asio/detail/null_tss_ptr.hpp" export * }
  module "asio__detail__object_pool" { header "asio/detail/object_pool.hpp" export * }
  module "asio__detail__old_win_sdk_compat" { header "asio/detail/old_win_sdk_compat.hpp" export * }
  module "asio__detail__op_queue" { header "asio/detail/op_queue.hpp" export * }
  module "asio__detail__pipe_select_interrupter" { header "asio/detail/pipe_select_interrupter.hpp" export * }
  module "asio__detail__posix_signal_blocker" { header "asio/detail/posix_signal_blocker.hpp" export * }
  module "asio__detail__posix_static_mutex" { header "asio/detail/posix_static_mutex.hpp" export * }
  // Can't push options inside a module, so pop_options would be broke if this is a module.
  //module "asio__detail__push_options" { header "asio/detail/push_options.hpp" export * }
  module "asio__detail__reactor_fwd" { header "asio/detail/reactor_fwd.hpp" export * }
/* This regex_fwd.hpp was doing ifdef thing
In file included from /home/travis/build/Teemperor/boost-compile/compile.cpp:9:
In file included from /home/travis/build/Teemperor/boost-compile/inc/boost/asio.hpp:91:
/home/travis/build/Teemperor/boost-compile/inc/boost/asio/read_until.hpp:304:62: error:
      missing '#include "boost/regex/v4/regex_fwd.hpp"'; declaration of 'regex'
      must be imported from module 'boost_regex.regex__v4__regex_fwd' before it
      is required
    boost::asio::basic_streambuf<Allocator>& b, const boost::regex& expr);
                                                             ^
*/
  // module "asio__detail__regex_fwd" { header "asio/detail/regex_fwd.hpp" export * }
  module "asio__detail__scoped_lock" { header "asio/detail/scoped_lock.hpp" export * }
  module "asio__detail__scoped_ptr" { header "asio/detail/scoped_ptr.hpp" export * }
  module "asio__detail__select_reactor" { header "asio/detail/select_reactor.hpp" export * }
  module "asio__detail__signal_blocker" { header "asio/detail/signal_blocker.hpp" export * }
  module "asio__detail__signal_init" { header "asio/detail/signal_init.hpp" export * }
  module "asio__detail__socket_option" { header "asio/detail/socket_option.hpp" export * }
  module "asio__detail__socket_select_interrupter" { header "asio/detail/socket_select_interrupter.hpp" export * }
  module "asio__detail__socket_types" { header "asio/detail/socket_types.hpp" export * }
  module "asio__detail__solaris_fenced_block" { header "asio/detail/solaris_fenced_block.hpp" export * }
  module "asio__detail__static_mutex" { header "asio/detail/static_mutex.hpp" export * }
  module "asio__detail__std_event" { header "asio/detail/std_event.hpp" export * }
  module "asio__detail__std_fenced_block" { header "asio/detail/std_fenced_block.hpp" export * }
  module "asio__detail__std_mutex" { header "asio/detail/std_mutex.hpp" export * }
  module "asio__detail__std_static_mutex" { header "asio/detail/std_static_mutex.hpp" export * }
  module "asio__detail__std_thread" { header "asio/detail/std_thread.hpp" export * }
  module "asio__detail__thread_info_base" { header "asio/detail/thread_info_base.hpp" export * }
  module "asio__detail__throw_exception" { header "asio/detail/throw_exception.hpp" export * }
  module "asio__detail__timer_scheduler_fwd" { header "asio/detail/timer_scheduler_fwd.hpp" export * }
  module "asio__detail__tss_ptr" { header "asio/detail/tss_ptr.hpp" export * }
  module "asio__detail__type_traits" { header "asio/detail/type_traits.hpp" export * }
  module "asio__detail__variadic_templates" { header "asio/detail/variadic_templates.hpp" export * }
  module "asio__detail__win_event" { header "asio/detail/win_event.hpp" export * }
  module "asio__detail__win_fd_set_adapter" { header "asio/detail/win_fd_set_adapter.hpp" export * }
  module "asio__detail__win_fenced_block" { header "asio/detail/win_fenced_block.hpp" export * }
  module "asio__detail__win_iocp_handle_read_op" { header "asio/detail/win_iocp_handle_read_op.hpp" export * }
  module "asio__detail__win_iocp_handle_service" { header "asio/detail/win_iocp_handle_service.hpp" export * }
  module "asio__detail__win_iocp_handle_write_op" { header "asio/detail/win_iocp_handle_write_op.hpp" export * }
  module "asio__detail__win_iocp_null_buffers_op" { header "asio/detail/win_iocp_null_buffers_op.hpp" export * }
  module "asio__detail__win_iocp_operation" { header "asio/detail/win_iocp_operation.hpp" export * }
  module "asio__detail__win_iocp_overlapped_op" { header "asio/detail/win_iocp_overlapped_op.hpp" export * }
  module "asio__detail__win_iocp_overlapped_ptr" { header "asio/detail/win_iocp_overlapped_ptr.hpp" export * }
  module "asio__detail__win_iocp_serial_port_service" { header "asio/detail/win_iocp_serial_port_service.hpp" export * }
  module "asio__detail__win_iocp_socket_accept_op" { header "asio/detail/win_iocp_socket_accept_op.hpp" export * }
  module "asio__detail__win_iocp_socket_connect_op" { header "asio/detail/win_iocp_socket_connect_op.hpp" export * }
  module "asio__detail__win_iocp_socket_recvfrom_op" { header "asio/detail/win_iocp_socket_recvfrom_op.hpp" export * }
  module "asio__detail__win_iocp_socket_recvmsg_op" { header "asio/detail/win_iocp_socket_recvmsg_op.hpp" export * }
  module "asio__detail__win_iocp_socket_recv_op" { header "asio/detail/win_iocp_socket_recv_op.hpp" export * }
  module "asio__detail__win_iocp_socket_send_op" { header "asio/detail/win_iocp_socket_send_op.hpp" export * }
  module "asio__detail__win_iocp_socket_service_base" { header "asio/detail/win_iocp_socket_service_base.hpp" export * }
  module "asio__detail__win_iocp_socket_service" { header "asio/detail/win_iocp_socket_service.hpp" export * }
  module "asio__detail__win_iocp_thread_info" { header "asio/detail/win_iocp_thread_info.hpp" export * }
  module "asio__detail__win_mutex" { header "asio/detail/win_mutex.hpp" export * }
  module "asio__detail__win_object_handle_service" { header "asio/detail/win_object_handle_service.hpp" export * }
  module "asio__detail__winrt_async_manager" { header "asio/detail/winrt_async_manager.hpp" export * }
  module "asio__detail__winrt_resolve_op" { header "asio/detail/winrt_resolve_op.hpp" export * }
  module "asio__detail__winrt_resolver_service" { header "asio/detail/winrt_resolver_service.hpp" export * }
  module "asio__detail__winrt_socket_connect_op" { header "asio/detail/winrt_socket_connect_op.hpp" export * }
  module "asio__detail__winrt_socket_recv_op" { header "asio/detail/winrt_socket_recv_op.hpp" export * }
  module "asio__detail__winrt_socket_send_op" { header "asio/detail/winrt_socket_send_op.hpp" export * }
  module "asio__detail__winrt_ssocket_service_base" { header "asio/detail/winrt_ssocket_service_base.hpp" export * }
  module "asio__detail__winrt_ssocket_service" { header "asio/detail/winrt_ssocket_service.hpp" export * }
  module "asio__detail__winrt_timer_scheduler" { header "asio/detail/winrt_timer_scheduler.hpp" export * }
  module "asio__detail__winrt_utils" { header "asio/detail/winrt_utils.hpp" export * }
  module "asio__detail__winsock_init" { header "asio/detail/winsock_init.hpp" export * }
  module "asio__detail__win_static_mutex" { header "asio/detail/win_static_mutex.hpp" export * }
  module "asio__detail__win_thread" { header "asio/detail/win_thread.hpp" export * }
  module "asio__detail__win_tss_ptr" { header "asio/detail/win_tss_ptr.hpp" export * }
  module "asio__detail__wrapped_handler" { header "asio/detail/wrapped_handler.hpp" export * }
  module "asio__handler_alloc_hook" { header "asio/handler_alloc_hook.hpp" export * }
  module "asio__handler_continuation_hook" { header "asio/handler_continuation_hook.hpp" export * }
  module "asio__handler_invoke_hook" { header "asio/handler_invoke_hook.hpp" export * }
  module "asio__ip__basic_resolver_entry" { header "asio/ip/basic_resolver_entry.hpp" export * }
  module "asio__ip__resolver_query_base" { header "asio/ip/resolver_query_base.hpp" export * }
  module "asio__ip__v6_only" { header "asio/ip/v6_only.hpp" export * }
  module "asio__is_read_buffered" { header "asio/is_read_buffered.hpp" export * }
  module "asio__is_write_buffered" { header "asio/is_write_buffered.hpp" export * }
  module "asio__placeholders" { header "asio/placeholders.hpp" export * }
  module "asio__posix__descriptor_base" { header "asio/posix/descriptor_base.hpp" export * }
  module "asio__socket_base" { header "asio/socket_base.hpp" export * }
  module "asio__ssl__context_base" { header "asio/ssl/context_base.hpp" export * }
  module "asio__ssl__detail__openssl_types" { header "asio/ssl/detail/openssl_types.hpp" export * }
  module "asio__ssl__detail__password_callback" { header "asio/ssl/detail/password_callback.hpp" export * }
  module "asio__ssl__detail__verify_callback" { header "asio/ssl/detail/verify_callback.hpp" export * }
  module "asio__ssl__stream_base" { header "asio/ssl/stream_base.hpp" export * }
  module "asio__ssl__verify_context" { header "asio/ssl/verify_context.hpp" export * }
  module "asio__ssl__verify_mode" { header "asio/ssl/verify_mode.hpp" export * }
  module "asio__streambuf" { header "asio/streambuf.hpp" export * }
  module "asio__time_traits" { header "asio/time_traits.hpp" export * }
  module "asio__unyield" { header "asio/unyield.hpp" export * }
  module "asio__version" { header "asio/version.hpp" export * }
  module "asio__wait_traits" { header "asio/wait_traits.hpp" export * }
  module "asio__windows__basic_object_handle" { header "asio/windows/basic_object_handle.hpp" export * }
  module "asio__windows__basic_random_access_handle" { header "asio/windows/basic_random_access_handle.hpp" export * }
  module "asio__windows__basic_stream_handle" { header "asio/windows/basic_stream_handle.hpp" export * }
  module "asio__windows__object_handle" { header "asio/windows/object_handle.hpp" export * }
  module "asio__windows__overlapped_ptr" { header "asio/windows/overlapped_ptr.hpp" export * }
  module "asio__windows__random_access_handle" { header "asio/windows/random_access_handle.hpp" export * }
  module "asio__windows__stream_handle" { header "asio/windows/stream_handle.hpp" export * }
  module "asio__yield" { header "asio/yield.hpp" export * }
}
module boost_assert { export * module "assert" { textual header "assert.hpp" export * } }
module boost_assign {
  export *
  module "assign__assignment_exception" { header "assign/assignment_exception.hpp" export * }
  module "assign" { header "assign.hpp" export * }
  module "assign__list_inserter" { header "assign/list_inserter.hpp" export * }
  module "assign__list_of" { header "assign/list_of.hpp" export * }
  module "assign__ptr_list_inserter" { header "assign/ptr_list_inserter.hpp" export * }
  module "assign__ptr_list_of" { header "assign/ptr_list_of.hpp" export * }
  module "assign__ptr_map_inserter" { header "assign/ptr_map_inserter.hpp" export * }
  module "assign__std__deque" { header "assign/std/deque.hpp" export * }
  module "assign__std" { header "assign/std.hpp" export * }
  module "assign__std__list" { header "assign/std/list.hpp" export * }
  module "assign__std__map" { header "assign/std/map.hpp" export * }
  module "assign__std__queue" { header "assign/std/queue.hpp" export * }
  module "assign__std__set" { header "assign/std/set.hpp" export * }
  module "assign__std__slist" { header "assign/std/slist.hpp" export * }
  module "assign__std__stack" { header "assign/std/stack.hpp" export * }
  module "assign__std__vector" { header "assign/std/vector.hpp" export * }
}
module boost_atomic {
  export *
  module "atomic__atomic_flag" { header "atomic/atomic_flag.hpp" export * }
  module "atomic__atomic" { header "atomic/atomic.hpp" export * }
  module "atomic__capabilities" { header "atomic/capabilities.hpp" export * }
  module "atomic__detail__bitwise_cast" { header "atomic/detail/bitwise_cast.hpp" export * }
  module "atomic__detail__caps_gcc_atomic" { header "atomic/detail/caps_gcc_atomic.hpp" export * }
  module "atomic__detail__caps_gcc_sync" { header "atomic/detail/caps_gcc_sync.hpp" export * }
  module "atomic__detail__caps_linux_arm" { header "atomic/detail/caps_linux_arm.hpp" export * }
  module "atomic__detail__caps_windows" { header "atomic/detail/caps_windows.hpp" export * }
  module "atomic__detail__config" { header "atomic/detail/config.hpp" export * }
  module "atomic__detail__int_sizes" { header "atomic/detail/int_sizes.hpp" export * }
  module "atomic__detail__link" { header "atomic/detail/link.hpp" export * }

  /*
  /home/teemperor/boost-compile/inc/boost/atomic/detail/ops_gcc_atomic.hpp:17:10: remark: finished building module 'boost_memory_order' [-Rmodule-build]
While building module 'boost_asio' imported from /home/teemperor/boost-compile/inc/boost/asio.hpp:20:
While building module 'boost_date_time' imported from /home/teemperor/boost-compile/inc/boost/asio/time_traits.hpp:23:
While building module 'boost_algorithm' imported from /home/teemperor/boost-compile/inc/boost/date_time/date_facet.hpp:17:
While building module 'wrapper' imported from /home/teemperor/boost-compile/inc/boost/algorithm/clamp.hpp:26:
While building module 'boost_spirit' imported from /home/teemperor/boost-compile/inc/boost/archive/impl/basic_xml_grammar.hpp:53:
While building module 'boost_thread' imported from /home/teemperor/boost-compile/inc/boost/spirit/home/classic/core/non_terminal/impl/static.hpp:18:
While building module 'boost_atomic' imported from /home/teemperor/boost-compile/inc/boost/thread/pthread/once_atomic.hpp:20:
In file included from <module-includes>:27:
/home/teemperor/boost-compile/inc/boost/atomic/detail/ops_gcc_alpha.hpp:351:8: error: explicit specialization of 'boost::atomics::detail::operations<1, false>' after instantiation
struct operations< 1u, false > :
       ^~~~~~~~~~~~~~~~~~~~~~~
/home/teemperor/boost-compile/inc/boost/atomic/detail/atomic_flag.hpp:43:13: note: implicit instantiation first required here
    typedef operations::storage_type storage_type;
            ^

  */
  // Removed to fix above error:
  // module "atomic__detail__ops_msvc_common" { header "atomic/detail/ops_msvc_common.hpp" export * }
  module "atomic__detail__pause" { header "atomic/detail/pause.hpp" export * }
  module "atomic__detail__platform" { header "atomic/detail/platform.hpp" export * }
  module "atomic__fences" { header "atomic/fences.hpp" export * }
  module "atomic" { header "atomic.hpp" export * }
}
module boost_bimap {
  export *
  module "bimap__bimap" { header "bimap/bimap.hpp" export * }
  module "bimap__container_adaptor__associative_container_adaptor" { header "bimap/container_adaptor/associative_container_adaptor.hpp" export * }
  module "bimap__container_adaptor__container_adaptor" { header "bimap/container_adaptor/container_adaptor.hpp" export * }
  module "bimap__container_adaptor__detail__comparison_adaptor" { header "bimap/container_adaptor/detail/comparison_adaptor.hpp" export * }
  module "bimap__container_adaptor__detail__functor_bag" { header "bimap/container_adaptor/detail/functor_bag.hpp" export * }
  module "bimap__container_adaptor__detail__identity_converters" { header "bimap/container_adaptor/detail/identity_converters.hpp" export * }
  module "bimap__container_adaptor__detail__key_extractor" { header "bimap/container_adaptor/detail/key_extractor.hpp" export * }
  module "bimap__container_adaptor__detail__non_unique_container_helper" { header "bimap/container_adaptor/detail/non_unique_container_helper.hpp" export * }
  module "bimap__container_adaptor__list_adaptor" { header "bimap/container_adaptor/list_adaptor.hpp" export * }
  module "bimap__container_adaptor__list_map_adaptor" { header "bimap/container_adaptor/list_map_adaptor.hpp" export * }
  module "bimap__container_adaptor__map_adaptor" { header "bimap/container_adaptor/map_adaptor.hpp" export * }
  module "bimap__container_adaptor__multimap_adaptor" { header "bimap/container_adaptor/multimap_adaptor.hpp" export * }
  module "bimap__container_adaptor__multiset_adaptor" { header "bimap/container_adaptor/multiset_adaptor.hpp" export * }
  module "bimap__container_adaptor__ordered_associative_container_adaptor" { header "bimap/container_adaptor/ordered_associative_container_adaptor.hpp" export * }
  module "bimap__container_adaptor__sequence_container_adaptor" { header "bimap/container_adaptor/sequence_container_adaptor.hpp" export * }
  module "bimap__container_adaptor__set_adaptor" { header "bimap/container_adaptor/set_adaptor.hpp" export * }
  module "bimap__container_adaptor__support__iterator_facade_converters" { header "bimap/container_adaptor/support/iterator_facade_converters.hpp" export * }
  module "bimap__container_adaptor__unordered_associative_container_adaptor" { header "bimap/container_adaptor/unordered_associative_container_adaptor.hpp" export * }
  module "bimap__container_adaptor__unordered_map_adaptor" { header "bimap/container_adaptor/unordered_map_adaptor.hpp" export * }
  module "bimap__container_adaptor__unordered_multimap_adaptor" { header "bimap/container_adaptor/unordered_multimap_adaptor.hpp" export * }
  module "bimap__container_adaptor__unordered_multiset_adaptor" { header "bimap/container_adaptor/unordered_multiset_adaptor.hpp" export * }
  module "bimap__container_adaptor__unordered_set_adaptor" { header "bimap/container_adaptor/unordered_set_adaptor.hpp" export * }
  module "bimap__container_adaptor__vector_adaptor" { header "bimap/container_adaptor/vector_adaptor.hpp" export * }
  module "bimap__container_adaptor__vector_map_adaptor" { header "bimap/container_adaptor/vector_map_adaptor.hpp" export * }
  module "bimap__detail__bimap_core" { header "bimap/detail/bimap_core.hpp" export * }
  module "bimap__detail__concept_tags" { header "bimap/detail/concept_tags.hpp" export * }
  module "bimap__detail__debug__static_error" { header "bimap/detail/debug/static_error.hpp" export * }
  module "bimap__detail__generate_index_binder" { header "bimap/detail/generate_index_binder.hpp" export * }
  module "bimap__detail__generate_relation_binder" { header "bimap/detail/generate_relation_binder.hpp" export * }
  module "bimap__detail__generate_view_binder" { header "bimap/detail/generate_view_binder.hpp" export * }
  module "bimap__detail__is_set_type_of" { header "bimap/detail/is_set_type_of.hpp" export * }
  module "bimap__detail__manage_additional_parameters" { header "bimap/detail/manage_additional_parameters.hpp" export * }
  module "bimap__detail__manage_bimap_key" { header "bimap/detail/manage_bimap_key.hpp" export * }
  module "bimap__detail__map_view_base" { header "bimap/detail/map_view_base.hpp" export * }
  module "bimap__detail__modifier_adaptor" { header "bimap/detail/modifier_adaptor.hpp" export * }
  module "bimap__detail__non_unique_views_helper" { header "bimap/detail/non_unique_views_helper.hpp" export * }
  module "bimap__detail__set_view_base" { header "bimap/detail/set_view_base.hpp" export * }
  module "bimap__detail__set_view_iterator" { header "bimap/detail/set_view_iterator.hpp" export * }
  module "bimap__detail__test__check_metadata" { header "bimap/detail/test/check_metadata.hpp" export * }
  module "bimap__detail__user_interface_config" { header "bimap/detail/user_interface_config.hpp" export * }
  module "bimap" { header "bimap.hpp" export * }
  module "bimap__list_of" { header "bimap/list_of.hpp" export * }
  module "bimap__multiset_of" { header "bimap/multiset_of.hpp" export * }
  module "bimap__property_map__set_support" { header "bimap/property_map/set_support.hpp" export * }
  module "bimap__property_map__unordered_set_support" { header "bimap/property_map/unordered_set_support.hpp" export * }
  module "bimap__relation__detail__access_builder" { header "bimap/relation/detail/access_builder.hpp" export * }
  module "bimap__relation__detail__metadata_access_builder" { header "bimap/relation/detail/metadata_access_builder.hpp" export * }
  module "bimap__relation__detail__mutant" { header "bimap/relation/detail/mutant.hpp" export * }
  module "bimap__relation__detail__static_access_builder" { header "bimap/relation/detail/static_access_builder.hpp" export * }
  module "bimap__relation__detail__to_mutable_relation_functor" { header "bimap/relation/detail/to_mutable_relation_functor.hpp" export * }
  module "bimap__relation__member_at" { header "bimap/relation/member_at.hpp" export * }
  module "bimap__relation__mutant_relation" { header "bimap/relation/mutant_relation.hpp" export * }
  module "bimap__relation__pair_layout" { header "bimap/relation/pair_layout.hpp" export * }
  module "bimap__relation__structured_pair" { header "bimap/relation/structured_pair.hpp" export * }
  module "bimap__relation__support__data_extractor" { header "bimap/relation/support/data_extractor.hpp" export * }
  module "bimap__relation__support__get" { header "bimap/relation/support/get.hpp" export * }
  module "bimap__relation__support__get_pair_functor" { header "bimap/relation/support/get_pair_functor.hpp" export * }
  module "bimap__relation__support__is_tag_of_member_at" { header "bimap/relation/support/is_tag_of_member_at.hpp" export * }
  module "bimap__relation__support__member_with_tag" { header "bimap/relation/support/member_with_tag.hpp" export * }
  module "bimap__relation__support__opposite_tag" { header "bimap/relation/support/opposite_tag.hpp" export * }
  module "bimap__relation__support__pair_by" { header "bimap/relation/support/pair_by.hpp" export * }
  module "bimap__relation__support__pair_type_by" { header "bimap/relation/support/pair_type_by.hpp" export * }
  module "bimap__relation__support__value_type_of" { header "bimap/relation/support/value_type_of.hpp" export * }
  module "bimap__relation__symmetrical_base" { header "bimap/relation/symmetrical_base.hpp" export * }
  module "bimap__set_of" { header "bimap/set_of.hpp" export * }
  module "bimap__support__data_type_by" { header "bimap/support/data_type_by.hpp" export * }
  module "bimap__support__iterator_type_by" { header "bimap/support/iterator_type_by.hpp" export * }
  module "bimap__support__key_type_by" { header "bimap/support/key_type_by.hpp" export * }
  module "bimap__support__lambda" { header "bimap/support/lambda.hpp" export * }
  module "bimap__support__map_by" { header "bimap/support/map_by.hpp" export * }
  module "bimap__support__map_type_by" { header "bimap/support/map_type_by.hpp" export * }
  module "bimap__support__value_type_by" { header "bimap/support/value_type_by.hpp" export * }
  module "bimap__tags__support__apply_to_value_type" { header "bimap/tags/support/apply_to_value_type.hpp" export * }
  module "bimap__tags__support__default_tagged" { header "bimap/tags/support/default_tagged.hpp" export * }
  module "bimap__tags__support__is_tagged" { header "bimap/tags/support/is_tagged.hpp" export * }
  module "bimap__tags__support__overwrite_tagged" { header "bimap/tags/support/overwrite_tagged.hpp" export * }
  module "bimap__tags__support__tag_of" { header "bimap/tags/support/tag_of.hpp" export * }
  module "bimap__tags__support__value_type_of" { header "bimap/tags/support/value_type_of.hpp" export * }
  module "bimap__tags__tagged" { header "bimap/tags/tagged.hpp" export * }
  module "bimap__unconstrained_set_of" { header "bimap/unconstrained_set_of.hpp" export * }
  module "bimap__unordered_multiset_of" { header "bimap/unordered_multiset_of.hpp" export * }
  module "bimap__unordered_set_of" { header "bimap/unordered_set_of.hpp" export * }
  module "bimap__vector_of" { header "bimap/vector_of.hpp" export * }
  module "bimap__views__list_map_view" { header "bimap/views/list_map_view.hpp" export * }
  module "bimap__views__list_set_view" { header "bimap/views/list_set_view.hpp" export * }
  module "bimap__views__map_view" { header "bimap/views/map_view.hpp" export * }
  module "bimap__views__multimap_view" { header "bimap/views/multimap_view.hpp" export * }
  module "bimap__views__multiset_view" { header "bimap/views/multiset_view.hpp" export * }
  module "bimap__views__set_view" { header "bimap/views/set_view.hpp" export * }
  module "bimap__views__unconstrained_map_view" { header "bimap/views/unconstrained_map_view.hpp" export * }
  module "bimap__views__unconstrained_set_view" { header "bimap/views/unconstrained_set_view.hpp" export * }
  module "bimap__views__unordered_map_view" { header "bimap/views/unordered_map_view.hpp" export * }
  module "bimap__views__unordered_multimap_view" { header "bimap/views/unordered_multimap_view.hpp" export * }
  module "bimap__views__unordered_multiset_view" { header "bimap/views/unordered_multiset_view.hpp" export * }
  module "bimap__views__unordered_set_view" { header "bimap/views/unordered_set_view.hpp" export * }
  module "bimap__views__vector_map_view" { header "bimap/views/vector_map_view.hpp" export * }
  module "bimap__views__vector_set_view" { header "bimap/views/vector_set_view.hpp" export * }
}
module boost_bind {
  export *
  module bind_bind { export * header "bind.hpp" }

  // included in a namespace
  exclude header "bind/bind_cc.hpp"
  exclude header "bind/bind_template.hpp"
  exclude header "bind/bind_mf_cc.hpp"
  exclude header "bind/bind_mf2_cc.hpp"
  exclude header "bind/mem_fn_cc.hpp"
  exclude header "bind/mem_fn_template.hpp"
  exclude header "bind/mem_fn_vw.hpp"
  umbrella "bind"
  module * { export * }
}
module boost_blank_fwd { export * module "blank_fwd" { header "blank_fwd.hpp" export * } }
module boost_blank { export * module "blank" { header "blank.hpp" export * } }
module boost_cerrno { export * module "cerrno" { header "cerrno.hpp" export * } }
module boost_checked_delete { export * module "checked_delete" { header "checked_delete.hpp" export * } }
module boost_chrono {
  export *
  module "chrono" { header "chrono.hpp" export * }
  module "chrono__ceil" { header "chrono/ceil.hpp" export * }
  module "chrono__clock_string" { header "chrono/clock_string.hpp" export * }
  module "chrono__config" { header "chrono/config.hpp" export * }
  module "chrono__detail__no_warning__signed_unsigned_cmp" { header "chrono/detail/no_warning/signed_unsigned_cmp.hpp" export * }
  module "chrono__detail__scan_keyword" { header "chrono/detail/scan_keyword.hpp" export * }
  module "chrono__detail__static_assert" { header "chrono/detail/static_assert.hpp" export * }
  module "chrono__duration" { header "chrono/duration.hpp" export * }
  module "chrono__floor" { header "chrono/floor.hpp" export * }
  module "chrono__io__duration_style" { header "chrono/io/duration_style.hpp" export * }
  module "chrono__io__duration_units" { header "chrono/io/duration_units.hpp" export * }
  module "chrono__io__ios_base_state" { header "chrono/io/ios_base_state.hpp" export * }
  module "chrono__io__timezone" { header "chrono/io/timezone.hpp" export * }
  module "chrono__io__utility__manip_base" { header "chrono/io/utility/manip_base.hpp" export * }
  module "chrono__io__utility__to_string" { header "chrono/io/utility/to_string.hpp" export * }
  module "chrono__round" { header "chrono/round.hpp" export * }
  module "chrono__time_point" { header "chrono/time_point.hpp" export * }
  module "chrono__typeof__boost__ratio" { header "chrono/typeof/boost/ratio.hpp" export * }
}
module boost_circular_buffer {
  export *
  module "circular_buffer__debug" { header "circular_buffer/debug.hpp" export * }
  module "circular_buffer__details" { header "circular_buffer/details.hpp" export * }
  module "circular_buffer" { header "circular_buffer.hpp" export * }
}
module boost_circular_buffer_fwd { export * module "circular_buffer_fwd" { header "circular_buffer_fwd.hpp" export * } }
module boost_compressed_pair { export * module "compressed_pair" { header "compressed_pair.hpp" export * } }
module boost_compute {
  export *
  module "compute__async__wait_guard" { header "compute/async/wait_guard.hpp" export * }
  module "compute__detail__assert_cl_success" { header "compute/detail/assert_cl_success.hpp" export * }
  module "compute__detail__diagnostic" { header "compute/detail/diagnostic.hpp" export * }
  module "compute__detail__duration" { header "compute/detail/duration.hpp" export * }
  module "compute__detail__getenv" { header "compute/detail/getenv.hpp" export * }
  module "compute__detail__is_buffer_iterator" { header "compute/detail/is_buffer_iterator.hpp" export * }
  module "compute__detail__is_contiguous_iterator" { header "compute/detail/is_contiguous_iterator.hpp" export * }
  module "compute__detail__iterator_plus_distance" { header "compute/detail/iterator_plus_distance.hpp" export * }
  module "compute__detail__iterator_range_size" { header "compute/detail/iterator_range_size.hpp" export * }
  module "compute__detail__iterator_traits" { header "compute/detail/iterator_traits.hpp" export * }
  module "compute__detail__lru_cache" { header "compute/detail/lru_cache.hpp" export * }
  module "compute__detail__sha1" { header "compute/detail/sha1.hpp" export * }
  module "compute__detail__variadic_macros" { header "compute/detail/variadic_macros.hpp" export * }
  module "compute__detail__work_size" { header "compute/detail/work_size.hpp" export * }
  module "compute__exception__context_error" { header "compute/exception/context_error.hpp" export * }
  module "compute__exception__no_device_found" { header "compute/exception/no_device_found.hpp" export * }
  module "compute__exception__unsupported_extension_error" { header "compute/exception/unsupported_extension_error.hpp" export * }
  module "compute__functional__as" { header "compute/functional/as.hpp" export * }
  module "compute__functional__convert" { header "compute/functional/convert.hpp" export * }
  module "compute__functional__field" { header "compute/functional/field.hpp" export * }
  module "compute__functional__identity" { header "compute/functional/identity.hpp" export * }
  module "compute__interop__opengl__gl" { header "compute/interop/opengl/gl.hpp" export * }
  module "compute__lambda__placeholder" { header "compute/lambda/placeholder.hpp" export * }
  module "compute__source" { header "compute/source.hpp" export * }
  module "compute__type_traits__is_device_iterator" { header "compute/type_traits/is_device_iterator.hpp" export * }
  module "compute__type_traits__result_of" { header "compute/type_traits/result_of.hpp" export * }
  module "compute__type_traits__type_definition" { header "compute/type_traits/type_definition.hpp" export * }
  module "compute__utility__source" { header "compute/utility/source.hpp" export * }
  module "compute__version" { header "compute/version.hpp" export * }
}
module boost_concept {
  export *
  module "concept__assert" { header "concept/assert.hpp" export * }
  module "concept__detail__backward_compatibility" { header "concept/detail/backward_compatibility.hpp" export * }
  module "concept__detail__borland" { header "concept/detail/borland.hpp" export * }
  //module "concept__detail__concept_def" { header "concept/detail/concept_def.hpp" export * }
  //module "concept__detail__concept_undef" { header "concept/detail/concept_undef.hpp" export * }
/* Textual header:
    /home/travis/build/Teemperor/boost-compile/inc/boost/property_map/property_map.hpp:60:17: error:
          declaration of 'if_' must be imported from module 'boost_mpl.mpl__bind'
          before it is required
        boost::mpl::if_<is_property_map<PA>,

*/
  //module "concept__detail__general" { header "concept/detail/general.hpp" export * }
  module "concept__detail__has_constraints" { header "concept/detail/has_constraints.hpp" export * }
  module "concept__requires" { header "concept/requires.hpp" export * }
  module "concept__usage" { header "concept/usage.hpp" export * }
}
module boost_concept_check {
  export *
  module "concept_check__borland" { header "concept_check/borland.hpp" export * }
  module "concept_check__general" { header "concept_check/general.hpp" export * }
  module "concept_check" { header "concept_check.hpp" export * }
}
/*
FIXME: This SHOULD be textual, but people really like to include it form inside
classes etc. because it's only macros in here. We should fix all of those things
in the source, but for now we just make this textual.
See for example this error:
/home/travis/build/Teemperor/boost-compile/inc/boost/multi_index/detail/ignore_wstrict_aliasing.hpp:9:1: error:
      redundant #include of module 'boost_config.config' appears within
      'index_node_base<Value, Allocator>' [-Wmodules-import-nested-redundant]
#include <boost/config.hpp>
^
module boost_config { export * module "config" { header "config.hpp" export * } }
*/
module boost_container {
  export *
  module "container__adaptive_pool" { header "container/adaptive_pool.hpp" export * }
  module "container__allocator" { header "container/allocator.hpp" export * }
  module "container__allocator_traits" { header "container/allocator_traits.hpp" export * }
  module "container__container_fwd" { header "container/container_fwd.hpp" export * }
  module "container__deque" { header "container/deque.hpp" export * }
  module "container__detail__adaptive_node_pool" { header "container/detail/adaptive_node_pool.hpp" export * }
  module "container__detail__adaptive_node_pool_impl" { header "container/detail/adaptive_node_pool_impl.hpp" export * }
  module "container__detail__advanced_insert_int" { header "container/detail/advanced_insert_int.hpp" export * }
  module "container__detail__algorithm" { header "container/detail/algorithm.hpp" export * }
  module "container__detail__allocation_type" { header "container/detail/allocation_type.hpp" export * }
  module "container__detail__allocator_version_traits" { header "container/detail/allocator_version_traits.hpp" export * }
  module "container__detail__auto_link" { header "container/detail/auto_link.hpp" export * }
  module "container__detail__block_list" { header "container/detail/block_list.hpp" export * }
  module "container__detail__block_slist" { header "container/detail/block_slist.hpp" export * }
  module "container__detail__compare_functors" { header "container/detail/compare_functors.hpp" export * }
  module "container__detail__config_begin" { header "container/detail/config_begin.hpp" export * }
  module "container__detail__config_end" { header "container/detail/config_end.hpp" export * }
  module "container__detail__construct_in_place" { header "container/detail/construct_in_place.hpp" export * }
  module "container__detail__copy_move_algo" { header "container/detail/copy_move_algo.hpp" export * }
  module "container__detail__destroyers" { header "container/detail/destroyers.hpp" export * }
  module "container__detail__dispatch_uses_allocator" { header "container/detail/dispatch_uses_allocator.hpp" export * }
  module "container__detail__dlmalloc" { header "container/detail/dlmalloc.hpp" export * }
  module "container__detail__flat_tree" { header "container/detail/flat_tree.hpp" export * }
  module "container__detail__function_detector" { header "container/detail/function_detector.hpp" export * }
  module "container__detail__is_sorted" { header "container/detail/is_sorted.hpp" export * }
  module "container__detail__iterator" { header "container/detail/iterator.hpp" export * }
  module "container__detail__iterators" { header "container/detail/iterators.hpp" export * }
  module "container__detail__iterator_to_raw_pointer" { header "container/detail/iterator_to_raw_pointer.hpp" export * }
  module "container__detail__math_functions" { header "container/detail/math_functions.hpp" export * }
  module "container__detail__minimal_char_traits_header" { header "container/detail/minimal_char_traits_header.hpp" export * }
  module "container__detail__min_max" { header "container/detail/min_max.hpp" export * }
  module "container__detail__mpl" { header "container/detail/mpl.hpp" export * }
  module "container__detail__multiallocation_chain" { header "container/detail/multiallocation_chain.hpp" export * }
  module "container__detail__mutex" { header "container/detail/mutex.hpp" export * }
  module "container__detail__next_capacity" { header "container/detail/next_capacity.hpp" export * }
  module "container__detail__node_alloc_holder" { header "container/detail/node_alloc_holder.hpp" export * }
  module "container__detail__node_pool_impl" { header "container/detail/node_pool_impl.hpp" export * }
  module "container__detail__pair" { header "container/detail/pair.hpp" export * }
  module "container__detail__placement_new" { header "container/detail/placement_new.hpp" export * }
  module "container__detail__pool_resource" { header "container/detail/pool_resource.hpp" export * }
  module "container__detail__singleton" { header "container/detail/singleton.hpp" export * }
  module "container__detail__std_fwd" { header "container/detail/std_fwd.hpp" export * }
  module "container__detail__transform_iterator" { header "container/detail/transform_iterator.hpp" export * }
  module "container__detail__tree" { header "container/detail/tree.hpp" export * }
  module "container__detail__type_traits" { header "container/detail/type_traits.hpp" export * }
  module "container__detail__value_init" { header "container/detail/value_init.hpp" export * }
  module "container__detail__variadic_templates_tools" { header "container/detail/variadic_templates_tools.hpp" export * }
  module "container__detail__version_type" { header "container/detail/version_type.hpp" export * }
  module "container__detail__workaround" { header "container/detail/workaround.hpp" export * }
  module "container__flat_map" { header "container/flat_map.hpp" export * }
  module "container__flat_set" { header "container/flat_set.hpp" export * }
  module "container__list" { header "container/list.hpp" export * }
  module "container__map" { header "container/map.hpp" export * }
  module "container__new_allocator" { header "container/new_allocator.hpp" export * }
  module "container__node_handle" { header "container/node_handle.hpp" export * }
  module "container__options" { header "container/options.hpp" export * }
  module "container__pmr__deque" { header "container/pmr/deque.hpp" export * }
  module "container__pmr__flat_map" { header "container/pmr/flat_map.hpp" export * }
  module "container__pmr__flat_set" { header "container/pmr/flat_set.hpp" export * }
  module "container__pmr__global_resource" { header "container/pmr/global_resource.hpp" export * }
  module "container__pmr__list" { header "container/pmr/list.hpp" export * }
  module "container__pmr__map" { header "container/pmr/map.hpp" export * }
  module "container__pmr__memory_resource" { header "container/pmr/memory_resource.hpp" export * }
  module "container__pmr__monotonic_buffer_resource" { header "container/pmr/monotonic_buffer_resource.hpp" export * }
  module "container__pmr__polymorphic_allocator" { header "container/pmr/polymorphic_allocator.hpp" export * }
  module "container__pmr__pool_options" { header "container/pmr/pool_options.hpp" export * }
  module "container__pmr__resource_adaptor" { header "container/pmr/resource_adaptor.hpp" export * }
  module "container__pmr__set" { header "container/pmr/set.hpp" export * }
  module "container__pmr__slist" { header "container/pmr/slist.hpp" export * }
  module "container__pmr__small_vector" { header "container/pmr/small_vector.hpp" export * }
  module "container__pmr__stable_vector" { header "container/pmr/stable_vector.hpp" export * }
  module "container__pmr__string" { header "container/pmr/string.hpp" export * }
  module "container__pmr__synchronized_pool_resource" { header "container/pmr/synchronized_pool_resource.hpp" export * }
  module "container__pmr__unsynchronized_pool_resource" { header "container/pmr/unsynchronized_pool_resource.hpp" export * }
  module "container__pmr__vector" { header "container/pmr/vector.hpp" export * }
  module "container__scoped_allocator_fwd" { header "container/scoped_allocator_fwd.hpp" export * }
  module "container__scoped_allocator" { header "container/scoped_allocator.hpp" export * }
  module "container__set" { header "container/set.hpp" export * }
  module "container__slist" { header "container/slist.hpp" export * }
  module "container__small_vector" { header "container/small_vector.hpp" export * }
  module "container__stable_vector" { header "container/stable_vector.hpp" export * }
  module "container__static_vector" { header "container/static_vector.hpp" export * }
  module "container__string" { header "container/string.hpp" export * }
  module "container__throw_exception" { header "container/throw_exception.hpp" export * }
  module "container__uses_allocator_fwd" { header "container/uses_allocator_fwd.hpp" export * }
  module "container__uses_allocator" { header "container/uses_allocator.hpp" export * }
  module "container__vector" { header "container/vector.hpp" export * }
}
module boost_context {
  export *
  module "context__continuation" { header "context/continuation.hpp" export * }
  module "context__detail__apply" { header "context/detail/apply.hpp" export * }
  module "context__detail__config" { header "context/detail/config.hpp" export * }
  module "context__detail__disable_overload" { header "context/detail/disable_overload.hpp" export * }
  module "context__detail__exception" { header "context/detail/exception.hpp" export * }
  module "context__detail__exchange" { header "context/detail/exchange.hpp" export * }
  module "context__detail__fcontext" { header "context/detail/fcontext.hpp" export * }
  module "context__detail__index_sequence" { header "context/detail/index_sequence.hpp" export * }
  module "context__detail__invoke" { header "context/detail/invoke.hpp" export * }
  module "context__detail__tuple" { header "context/detail/tuple.hpp" export * }
  module "context__fixedsize_stack" { header "context/fixedsize_stack.hpp" export * }
  module "context__flags" { header "context/flags.hpp" export * }
  module "context__posix__protected_fixedsize_stack" { header "context/posix/protected_fixedsize_stack.hpp" export * }
  module "context__protected_fixedsize_stack" { header "context/protected_fixedsize_stack.hpp" export * }
  module "context__segmented_stack" { header "context/segmented_stack.hpp" export * }
  module "context__stack_context" { header "context/stack_context.hpp" export * }
  module "context__stack_traits" { header "context/stack_traits.hpp" export * }
}
module boost_convert {
  export *
  module "convert__detail__char" { header "convert/detail/char.hpp" export * }
  module "convert__detail__has_member" { header "convert/detail/has_member.hpp" export * }
  module "convert__detail__is_callable" { header "convert/detail/is_callable.hpp" export * }
  module "convert__detail__is_fun" { header "convert/detail/is_fun.hpp" export * }
  module "convert" { header "convert.hpp" export * }
  module "convert__parameters" { header "convert/parameters.hpp" export * }
}
module boost_core {
  export *
  module "core__checked_delete" { header "core/checked_delete.hpp" export * }
  module "core__demangle" { header "core/demangle.hpp" export * }
  module "core__enable_if" { header "core/enable_if.hpp" export * }
  module "core__explicit_operator_bool" { header "core/explicit_operator_bool.hpp" export * }
  module "core__ignore_unused" { header "core/ignore_unused.hpp" export * }
  module "core__is_same" { header "core/is_same.hpp" export * }
  module "core__lightweight_test" { header "core/lightweight_test.hpp" export * }
  module "core__lightweight_test_trait" { header "core/lightweight_test_trait.hpp" export * }
  module "core__no_exceptions_support" { header "core/no_exceptions_support.hpp" export * }
  module "core__noncopyable" { header "core/noncopyable.hpp" export * }
  module "core__null_deleter" { header "core/null_deleter.hpp" export * }
  module "core__ref" { header "core/ref.hpp" export * }
  module "core__scoped_enum" { header "core/scoped_enum.hpp" export * }
  module "core__swap" { header "core/swap.hpp" export * }
  module "core__typeinfo" { header "core/typeinfo.hpp" export * }
  module "core__underlying_type" { header "core/underlying_type.hpp" export * }
}
module "boost_core__addressof" { header "core/addressof.hpp" export * }
module boost_coroutine2 {
  export *
  module "coroutine2__all" { header "coroutine2/all.hpp" export * }
  module "coroutine2__coroutine" { header "coroutine2/coroutine.hpp" export * }
  module "coroutine2__detail__config" { header "coroutine2/detail/config.hpp" export * }
  module "coroutine2__detail__coroutine" { header "coroutine2/detail/coroutine.hpp" export * }
  module "coroutine2__detail__decay_copy" { header "coroutine2/detail/decay_copy.hpp" export * }
  module "coroutine2__detail__disable_overload" { header "coroutine2/detail/disable_overload.hpp" export * }
  module "coroutine2__detail__pull_coroutine" { header "coroutine2/detail/pull_coroutine.hpp" export * }
  module "coroutine2__detail__push_coroutine" { header "coroutine2/detail/push_coroutine.hpp" export * }
  module "coroutine2__detail__state" { header "coroutine2/detail/state.hpp" export * }
  module "coroutine2__detail__wrap" { header "coroutine2/detail/wrap.hpp" export * }
  module "coroutine2__protected_fixedsize_stack" { header "coroutine2/protected_fixedsize_stack.hpp" export * }
  module "coroutine2__segmented_stack" { header "coroutine2/segmented_stack.hpp" export * }
}
module boost_coroutine {
  export *
  module "coroutine__detail__flags" { header "coroutine/detail/flags.hpp" export * }
  module "coroutine__detail__parameters" { header "coroutine/detail/parameters.hpp" export * }
  module "coroutine__flags" { header "coroutine/flags.hpp" export * }
  module "coroutine__segmented_stack_allocator" { header "coroutine/segmented_stack_allocator.hpp" export * }
}
module boost_crc { export *  module "crc" { header "crc.hpp" export * } }
module boost_cregex { export * module "cregex" { header "cregex.hpp" export * } }
module boost_cstdfloat { export * module "cstdfloat" { header "cstdfloat.hpp" export * } }
module boost_cstdint { export * module "cstdint" { header "cstdint.hpp" export * } }
module boost_cstdlib { export * module "cstdlib" { header "cstdlib.hpp" export * } }
module boost_current_function { export * module "current_function" { header "current_function.hpp" export * } }
module boost_cxx11_char_types { export * module "cxx11_char_types" { header "cxx11_char_types.hpp" export * } }

// Causes cyclic dependency between range <-> detail
module "boost_detail__algorithm" { export * header "detail/algorithm.hpp" export * }

module "boost_detail__workaround" { export * header "detail/workaround.hpp" export * }
module "boost_detail__lightweight_test" { export * header "detail/lightweight_test.hpp" export * }
module boost_dll {
  export *
  module "dll" { header "dll.hpp" export * }
  module "dll__alias" { header "dll/alias.hpp" export * }
  module "dll__detail__aggressive_ptr_cast" { header "dll/detail/aggressive_ptr_cast.hpp" export * }
  module "dll__detail__demangling__demangle_symbol" { header "dll/detail/demangling/demangle_symbol.hpp" export * }
  module "dll__detail__get_mem_fn_type" { header "dll/detail/get_mem_fn_type.hpp" export * }
  module "dll__detail__type_info" { header "dll/detail/type_info.hpp" export * }
  module "dll__shared_library_load_mode" { header "dll/shared_library_load_mode.hpp" export * }
}
module boost_dynamic_bitset {
  export *
  module "dynamic_bitset__config" { header "dynamic_bitset/config.hpp" export * }
  module "dynamic_bitset__dynamic_bitset" { header "dynamic_bitset/dynamic_bitset.hpp" export * }
  module "dynamic_bitset" { header "dynamic_bitset.hpp" export * }
  module "dynamic_bitset__serialization" { header "dynamic_bitset/serialization.hpp" export * }
}
module boost_dynamic_bitset_fwd { export * module "dynamic_bitset_fwd" { header "dynamic_bitset_fwd.hpp" export * } }
module boost_endian {
  export *
  exclude header "endian/endian.hpp"
  umbrella "endian"
  module * { export * }
}
module boost_fiber {
  export *
  module "fiber__algo__algorithm" { header "fiber/algo/algorithm.hpp" export * }
  module "fiber__algo__round_robin" { header "fiber/algo/round_robin.hpp" export * }
  module "fiber__algo__shared_work" { header "fiber/algo/shared_work.hpp" export * }
  module "fiber__algo__work_stealing" { header "fiber/algo/work_stealing.hpp" export * }
  module "fiber__all" { header "fiber/all.hpp" export * }
  module "fiber__barrier" { header "fiber/barrier.hpp" export * }
  module "fiber__buffered_channel" { header "fiber/buffered_channel.hpp" export * }
  module "fiber__channel_op_status" { header "fiber/channel_op_status.hpp" export * }
  module "fiber__condition_variable" { header "fiber/condition_variable.hpp" export * }
  module "fiber__context" { header "fiber/context.hpp" export * }
  module "fiber__detail__config" { header "fiber/detail/config.hpp" export * }
  module "fiber__detail__context_spinlock_queue" { header "fiber/detail/context_spinlock_queue.hpp" export * }
  module "fiber__detail__context_spmc_queue" { header "fiber/detail/context_spmc_queue.hpp" export * }
  module "fiber__detail__convert" { header "fiber/detail/convert.hpp" export * }
  module "fiber__detail__cpu_relax" { header "fiber/detail/cpu_relax.hpp" export * }
  module "fiber__detail__data" { header "fiber/detail/data.hpp" export * }
  module "fiber__detail__decay_copy" { header "fiber/detail/decay_copy.hpp" export * }
  module "fiber__detail__disable_overload" { header "fiber/detail/disable_overload.hpp" export * }
  module "fiber__detail__fss" { header "fiber/detail/fss.hpp" export * }
  module "fiber__detail__spinlock" { header "fiber/detail/spinlock.hpp" export * }
  module "fiber__detail__spinlock_ttas_adaptive_futex" { header "fiber/detail/spinlock_ttas_adaptive_futex.hpp" export * }
  module "fiber__detail__spinlock_ttas_adaptive" { header "fiber/detail/spinlock_ttas_adaptive.hpp" export * }
  module "fiber__detail__spinlock_ttas_futex" { header "fiber/detail/spinlock_ttas_futex.hpp" export * }
  module "fiber__detail__spinlock_ttas" { header "fiber/detail/spinlock_ttas.hpp" export * }
  module "fiber__exceptions" { header "fiber/exceptions.hpp" export * }
  module "fiber__fiber" { header "fiber/fiber.hpp" export * }
  module "fiber__fixedsize_stack" { header "fiber/fixedsize_stack.hpp" export * }
  module "fiber__fss" { header "fiber/fss.hpp" export * }
  module "fiber__future__async" { header "fiber/future/async.hpp" export * }
  module "fiber__future__detail__shared_state" { header "fiber/future/detail/shared_state.hpp" export * }
  module "fiber__future__detail__shared_state_object" { header "fiber/future/detail/shared_state_object.hpp" export * }
  module "fiber__future__detail__task_base" { header "fiber/future/detail/task_base.hpp" export * }
  module "fiber__future__detail__task_object" { header "fiber/future/detail/task_object.hpp" export * }
  module "fiber__future__future" { header "fiber/future/future.hpp" export * }
  module "fiber__future__future_status" { header "fiber/future/future_status.hpp" export * }
  module "fiber__future" { header "fiber/future.hpp" export * }
  module "fiber__future__packaged_task" { header "fiber/future/packaged_task.hpp" export * }
  module "fiber__future__promise" { header "fiber/future/promise.hpp" export * }
  module "fiber__mutex" { header "fiber/mutex.hpp" export * }
  module "fiber__operations" { header "fiber/operations.hpp" export * }
  module "fiber__policy" { header "fiber/policy.hpp" export * }
  module "fiber__properties" { header "fiber/properties.hpp" export * }
  module "fiber__protected_fixedsize_stack" { header "fiber/protected_fixedsize_stack.hpp" export * }
  module "fiber__recursive_mutex" { header "fiber/recursive_mutex.hpp" export * }
  module "fiber__recursive_timed_mutex" { header "fiber/recursive_timed_mutex.hpp" export * }
  module "fiber__scheduler" { header "fiber/scheduler.hpp" export * }
  module "fiber__segmented_stack" { header "fiber/segmented_stack.hpp" export * }
  module "fiber__timed_mutex" { header "fiber/timed_mutex.hpp" export * }
  module "fiber__type" { header "fiber/type.hpp" export * }
  module "fiber__unbuffered_channel" { header "fiber/unbuffered_channel.hpp" export * }
}
module boost_filesystem {
  export *
  module "filesystem__config" { header "filesystem/config.hpp" export * }
  module "filesystem__detail__utf8_codecvt_facet" { header "filesystem/detail/utf8_codecvt_facet.hpp" export * }
  module "filesystem__exception" { header "filesystem/exception.hpp" export * }
}
module boost_flyweight {
  export *
  module "flyweight__assoc_container_factory_fwd" { header "flyweight/assoc_container_factory_fwd.hpp" export * }
  module "flyweight__assoc_container_factory" { header "flyweight/assoc_container_factory.hpp" export * }
  module "flyweight__detail__default_value_policy" { header "flyweight/detail/default_value_policy.hpp" export * }
  module "flyweight__detail__dyn_perfect_fwd" { header "flyweight/detail/dyn_perfect_fwd.hpp" export * }
  module "flyweight__detail__flyweight_core" { header "flyweight/detail/flyweight_core.hpp" export * }
  module "flyweight__detail__is_placeholder_expr" { header "flyweight/detail/is_placeholder_expr.hpp" export * }
  module "flyweight__detail__nested_xxx_if_not_ph" { header "flyweight/detail/nested_xxx_if_not_ph.hpp" export * }
  module "flyweight__detail__not_placeholder_expr" { header "flyweight/detail/not_placeholder_expr.hpp" export * }
  module "flyweight__detail__perfect_fwd" { header "flyweight/detail/perfect_fwd.hpp" export * }
  module "flyweight__detail__pp_perfect_fwd" { header "flyweight/detail/pp_perfect_fwd.hpp" export * }
  module "flyweight__detail__recursive_lw_mutex" { header "flyweight/detail/recursive_lw_mutex.hpp" export * }
  module "flyweight__detail__serialization_helper" { header "flyweight/detail/serialization_helper.hpp" export * }
  module "flyweight__detail__value_tag" { header "flyweight/detail/value_tag.hpp" export * }
  module "flyweight__factory_tag" { header "flyweight/factory_tag.hpp" export * }
  module "flyweight__flyweight_fwd" { header "flyweight/flyweight_fwd.hpp" export * }
  module "flyweight__flyweight" { header "flyweight/flyweight.hpp" export * }
  module "flyweight__hashed_factory_fwd" { header "flyweight/hashed_factory_fwd.hpp" export * }
  module "flyweight__hashed_factory" { header "flyweight/hashed_factory.hpp" export * }
  module "flyweight__holder_tag" { header "flyweight/holder_tag.hpp" export * }
  module "flyweight" { header "flyweight.hpp" export * }
  module "flyweight__intermodule_holder_fwd" { header "flyweight/intermodule_holder_fwd.hpp" export * }
  module "flyweight__intermodule_holder" { header "flyweight/intermodule_holder.hpp" export * }
  module "flyweight__key_value_fwd" { header "flyweight/key_value_fwd.hpp" export * }
  module "flyweight__key_value" { header "flyweight/key_value.hpp" export * }
  module "flyweight__locking_tag" { header "flyweight/locking_tag.hpp" export * }
  module "flyweight__no_locking_fwd" { header "flyweight/no_locking_fwd.hpp" export * }
  module "flyweight__no_locking" { header "flyweight/no_locking.hpp" export * }
  module "flyweight__no_tracking_fwd" { header "flyweight/no_tracking_fwd.hpp" export * }
  module "flyweight__no_tracking" { header "flyweight/no_tracking.hpp" export * }
  module "flyweight__refcounted_fwd" { header "flyweight/refcounted_fwd.hpp" export * }
  module "flyweight__refcounted" { header "flyweight/refcounted.hpp" export * }
  module "flyweight__set_factory_fwd" { header "flyweight/set_factory_fwd.hpp" export * }
  module "flyweight__set_factory" { header "flyweight/set_factory.hpp" export * }
  module "flyweight__simple_locking_fwd" { header "flyweight/simple_locking_fwd.hpp" export * }
  module "flyweight__simple_locking" { header "flyweight/simple_locking.hpp" export * }
  module "flyweight__static_holder_fwd" { header "flyweight/static_holder_fwd.hpp" export * }
  module "flyweight__static_holder" { header "flyweight/static_holder.hpp" export * }
  module "flyweight__tag" { header "flyweight/tag.hpp" export * }
  module "flyweight__tracking_tag" { header "flyweight/tracking_tag.hpp" export * }
}
module boost_format {
  export *
  module "format__alt_sstream" { header "format/alt_sstream.hpp" export * }
  module "format__detail__compat_workarounds" { header "format/detail/compat_workarounds.hpp" export * }
  module "format__detail__config_macros" { header "format/detail/config_macros.hpp" export * }
  module "format__detail__unset_macros" { header "format/detail/unset_macros.hpp" export * }
  module "format__detail__workarounds_stlport" { header "format/detail/workarounds_stlport.hpp" export * }
  module "format__exceptions" { header "format/exceptions.hpp" export * }
  module "format__feed_args" { header "format/feed_args.hpp" export * }
  module "format__format_class" { header "format/format_class.hpp" export * }
  module "format__format_fwd" { header "format/format_fwd.hpp" export * }
  module "format" { header "format.hpp" export * }
  module "format__internals_fwd" { header "format/internals_fwd.hpp" export * }
  module "format__parsing" { header "format/parsing.hpp" export * }
}
module boost_functional {
  export *
  //FIXME: Imports itself non-modular: module "functional__factory" { header "functional/factory.hpp" export * }
  //FIXME: Imports itself non-modular: module "functional__forward_adapter" { header "functional/forward_adapter.hpp" export * }
  module "functional__hash__extensions" { header "functional/hash/extensions.hpp" export * }
  module "functional__hash_fwd" { header "functional/hash_fwd.hpp" export * }
  module "functional__hash__hash_fwd" { header "functional/hash/hash_fwd.hpp" export * }
  module "functional__hash__hash" { header "functional/hash/hash.hpp" export * }
  module "functional__hash" { header "functional/hash.hpp" export * }
  module "functional" { header "functional.hpp" export * }
  //FIXME: Imports itself non-modular: module "functional__lightweight_forward_adapter" { header "functional/lightweight_forward_adapter.hpp" export * }
  module "functional__overloaded_function__config" { header "functional/overloaded_function/config.hpp" export * }
  //FIXME: Imports itself non-modular: module "functional__overloaded_function__detail__base" { header "functional/overloaded_function/detail/base.hpp" export * }
  module "functional__overloaded_function__detail__function_type" { header "functional/overloaded_function/detail/function_type.hpp" export * }
  module "functional__overloaded_function" { header "functional/overloaded_function.hpp" export * }
  //FIXME: Imports itself non-modular: module "functional__value_factory" { header "functional/value_factory.hpp" export * }
}
module boost_function {
  export *
  module "function__detail__prologue" { header "function/detail/prologue.hpp" export * }
  module "function__function0" { header "function/function0.hpp" export * }
  module "function__function10" { header "function/function10.hpp" export * }
  module "function__function1" { header "function/function1.hpp" export * }
  module "function__function2" { header "function/function2.hpp" export * }
  module "function__function3" { header "function/function3.hpp" export * }
  module "function__function4" { header "function/function4.hpp" export * }
  module "function__function5" { header "function/function5.hpp" export * }
  module "function__function6" { header "function/function6.hpp" export * }
  module "function__function7" { header "function/function7.hpp" export * }
  module "function__function8" { header "function/function8.hpp" export * }
  module "function__function9" { header "function/function9.hpp" export * }
  module "function__function_base" { header "function/function_base.hpp" export * }
  module "function__function_fwd" { header "function/function_fwd.hpp" export * }
  module "function__function_typeof" { header "function/function_typeof.hpp" export * }
  module "function" { header "function.hpp" export * }
}
module boost_function_equal {
  export *
  module "function_equal" { header "function_equal.hpp" export * }
}
module boost_function_output_iterator { export * module "function_output_iterator" { header "function_output_iterator.hpp" export * } }
module boost_function_types {
  export *
  module "function_types__components" { header "function_types/components.hpp" export * }
  module "function_types__config__cc_names" { header "function_types/config/cc_names.hpp" export * }
  module "function_types__config__compiler" { header "function_types/config/compiler.hpp" export * }
  module "function_types__config__config" { header "function_types/config/config.hpp" export * }
  module "function_types__detail__classifier" { header "function_types/detail/classifier.hpp" export * }
  module "function_types__detail__class_transform" { header "function_types/detail/class_transform.hpp" export * }
  module "function_types__detail__cv_traits" { header "function_types/detail/cv_traits.hpp" export * }
  // is textually included: module "function_types__detail__encoding__aliases_def" { header "function_types/detail/encoding/aliases_def.hpp" export * }
  // is textually included: module "function_types__detail__encoding__aliases_undef" { header "function_types/detail/encoding/aliases_undef.hpp" export * }
  // is textually included: module "function_types__detail__encoding__def" { header "function_types/detail/encoding/def.hpp" export * }
  // is textually included:  module "function_types__detail__encoding__undef" { header "function_types/detail/encoding/undef.hpp" export * }
  // is textually included: module "function_types__detail__pp_arity_loop" { header "function_types/detail/pp_arity_loop.hpp" export * }
  // is textually included: module "function_types__detail__pp_variate_loop__preprocessed" { header "function_types/detail/pp_variate_loop/preprocessed.hpp" export * }
  module "function_types__detail__retag_default_cc" { header "function_types/detail/retag_default_cc.hpp" export * }
  module "function_types__detail__synthesize" { header "function_types/detail/synthesize.hpp" export * }
  module "function_types__detail__to_sequence" { header "function_types/detail/to_sequence.hpp" export * }
  module "function_types__function_arity" { header "function_types/function_arity.hpp" export * }
  module "function_types__function_pointer" { header "function_types/function_pointer.hpp" export * }
  module "function_types__function_reference" { header "function_types/function_reference.hpp" export * }
  module "function_types__function_type" { header "function_types/function_type.hpp" export * }
  module "function_types__is_callable_builtin" { header "function_types/is_callable_builtin.hpp" export * }
  module "function_types__is_function" { header "function_types/is_function.hpp" export * }
  module "function_types__is_function_pointer" { header "function_types/is_function_pointer.hpp" export * }
  module "function_types__is_function_reference" { header "function_types/is_function_reference.hpp" export * }
  module "function_types__is_member_function_pointer" { header "function_types/is_member_function_pointer.hpp" export * }
  module "function_types__is_member_object_pointer" { header "function_types/is_member_object_pointer.hpp" export * }
  module "function_types__is_member_pointer" { header "function_types/is_member_pointer.hpp" export * }
  module "function_types__is_nonmember_callable_builtin" { header "function_types/is_nonmember_callable_builtin.hpp" export * }
  module "function_types__member_function_pointer" { header "function_types/member_function_pointer.hpp" export * }
  module "function_types__member_object_pointer" { header "function_types/member_object_pointer.hpp" export * }
  module "function_types__parameter_types" { header "function_types/parameter_types.hpp" export * }
  module "function_types__property_tags" { header "function_types/property_tags.hpp" export * }
  module "function_types__result_type" { header "function_types/result_type.hpp" export * }
}
/*
module boost_fusion {
  export *
  module "fusion__adapted__adt__adapt_adt" { header "fusion/adapted/adt/adapt_adt.hpp" export * }
  module "fusion__adapted__adt__adapt_adt_named" { header "fusion/adapted/adt/adapt_adt_named.hpp" export * }
  module "fusion__adapted__adt__adapt_assoc_adt" { header "fusion/adapted/adt/adapt_assoc_adt.hpp" export * }
  module "fusion__adapted__adt__adapt_assoc_adt_named" { header "fusion/adapted/adt/adapt_assoc_adt_named.hpp" export * }
  module "fusion__adapted__adt__detail__adapt_base_assoc_attr_filler" { header "fusion/adapted/adt/detail/adapt_base_assoc_attr_filler.hpp" export * }
  module "fusion__adapted__adt__detail__adapt_base_attr_filler" { header "fusion/adapted/adt/detail/adapt_base_attr_filler.hpp" export * }
  module "fusion__adapted__adt__detail__adapt_base" { header "fusion/adapted/adt/detail/adapt_base.hpp" export * }
  module "fusion__adapted__adt__detail__extension" { header "fusion/adapted/adt/detail/extension.hpp" export * }
  module "fusion__adapted__adt" { header "fusion/adapted/adt.hpp" export * }
  module "fusion__adapted__array" { header "fusion/adapted/array.hpp" export * }
  module "fusion__adapted__array__tag_of" { header "fusion/adapted/array/tag_of.hpp" export * }
  module "fusion__adapted__boost_array__array_iterator" { header "fusion/adapted/boost_array/array_iterator.hpp" export * }
  module "fusion__adapted__boost_array__detail__at_impl" { header "fusion/adapted/boost_array/detail/at_impl.hpp" export * }
  module "fusion__adapted__boost_array__detail__begin_impl" { header "fusion/adapted/boost_array/detail/begin_impl.hpp" export * }
  module "fusion__adapted__boost_array__detail__category_of_impl" { header "fusion/adapted/boost_array/detail/category_of_impl.hpp" export * }
  module "fusion__adapted__boost_array__detail__end_impl" { header "fusion/adapted/boost_array/detail/end_impl.hpp" export * }
  module "fusion__adapted__boost_array__detail__is_sequence_impl" { header "fusion/adapted/boost_array/detail/is_sequence_impl.hpp" export * }
  module "fusion__adapted__boost_array__detail__is_view_impl" { header "fusion/adapted/boost_array/detail/is_view_impl.hpp" export * }
  module "fusion__adapted__boost_array__detail__value_at_impl" { header "fusion/adapted/boost_array/detail/value_at_impl.hpp" export * }
  module "fusion__adapted__boost_array" { header "fusion/adapted/boost_array.hpp" export * }
  module "fusion__adapted__boost_array__tag_of" { header "fusion/adapted/boost_array/tag_of.hpp" export * }
  module "fusion__adapted__boost_tuple__boost_tuple_iterator" { header "fusion/adapted/boost_tuple/boost_tuple_iterator.hpp" export * }
  module "fusion__adapted__boost_tuple__detail__at_impl" { header "fusion/adapted/boost_tuple/detail/at_impl.hpp" export * }
  module "fusion__adapted__boost_tuple__detail__begin_impl" { header "fusion/adapted/boost_tuple/detail/begin_impl.hpp" export * }
  module "fusion__adapted__boost_tuple__detail__build_cons" { header "fusion/adapted/boost_tuple/detail/build_cons.hpp" export * }
  module "fusion__adapted__boost_tuple__detail__category_of_impl" { header "fusion/adapted/boost_tuple/detail/category_of_impl.hpp" export * }
  module "fusion__adapted__boost_tuple__detail__convert_impl" { header "fusion/adapted/boost_tuple/detail/convert_impl.hpp" export * }
  module "fusion__adapted__boost_tuple__detail__end_impl" { header "fusion/adapted/boost_tuple/detail/end_impl.hpp" export * }
  module "fusion__adapted__boost_tuple__detail__is_sequence_impl" { header "fusion/adapted/boost_tuple/detail/is_sequence_impl.hpp" export * }
  module "fusion__adapted__boost_tuple__detail__is_view_impl" { header "fusion/adapted/boost_tuple/detail/is_view_impl.hpp" export * }
  module "fusion__adapted__boost_tuple__detail__size_impl" { header "fusion/adapted/boost_tuple/detail/size_impl.hpp" export * }
  module "fusion__adapted__boost_tuple__detail__value_at_impl" { header "fusion/adapted/boost_tuple/detail/value_at_impl.hpp" export * }
  module "fusion__adapted__boost_tuple" { header "fusion/adapted/boost_tuple.hpp" export * }
  module "fusion__adapted__boost_tuple__tag_of" { header "fusion/adapted/boost_tuple/tag_of.hpp" export * }
  module "fusion__adapted" { header "fusion/adapted.hpp" export * }
  module "fusion__adapted__mpl__detail__at_impl" { header "fusion/adapted/mpl/detail/at_impl.hpp" export * }
  module "fusion__adapted__mpl__detail__begin_impl" { header "fusion/adapted/mpl/detail/begin_impl.hpp" export * }
  module "fusion__adapted__mpl__detail__category_of_impl" { header "fusion/adapted/mpl/detail/category_of_impl.hpp" export * }
  module "fusion__adapted__mpl__detail__empty_impl" { header "fusion/adapted/mpl/detail/empty_impl.hpp" export * }
  module "fusion__adapted__mpl__detail__end_impl" { header "fusion/adapted/mpl/detail/end_impl.hpp" export * }
  module "fusion__adapted__mpl__detail__has_key_impl" { header "fusion/adapted/mpl/detail/has_key_impl.hpp" export * }
  module "fusion__adapted__mpl__detail__is_sequence_impl" { header "fusion/adapted/mpl/detail/is_sequence_impl.hpp" export * }
  module "fusion__adapted__mpl__detail__is_view_impl" { header "fusion/adapted/mpl/detail/is_view_impl.hpp" export * }
  module "fusion__adapted__mpl__detail__size_impl" { header "fusion/adapted/mpl/detail/size_impl.hpp" export * }
  module "fusion__adapted__mpl__detail__value_at_impl" { header "fusion/adapted/mpl/detail/value_at_impl.hpp" export * }
  module "fusion__adapted__mpl" { header "fusion/adapted/mpl.hpp" export * }
  module "fusion__adapted__mpl__mpl_iterator" { header "fusion/adapted/mpl/mpl_iterator.hpp" export * }
  module "fusion__adapted__std_array__detail__array_size" { header "fusion/adapted/std_array/detail/array_size.hpp" export * }
  module "fusion__adapted__std_array__detail__at_impl" { header "fusion/adapted/std_array/detail/at_impl.hpp" export * }
  module "fusion__adapted__std_array__detail__begin_impl" { header "fusion/adapted/std_array/detail/begin_impl.hpp" export * }
  module "fusion__adapted__std_array__detail__category_of_impl" { header "fusion/adapted/std_array/detail/category_of_impl.hpp" export * }
  module "fusion__adapted__std_array__detail__end_impl" { header "fusion/adapted/std_array/detail/end_impl.hpp" export * }
  module "fusion__adapted__std_array__detail__is_sequence_impl" { header "fusion/adapted/std_array/detail/is_sequence_impl.hpp" export * }
  module "fusion__adapted__std_array__detail__is_view_impl" { header "fusion/adapted/std_array/detail/is_view_impl.hpp" export * }
  module "fusion__adapted__std_array__detail__value_at_impl" { header "fusion/adapted/std_array/detail/value_at_impl.hpp" export * }
  module "fusion__adapted__std_array" { header "fusion/adapted/std_array.hpp" export * }
  module "fusion__adapted__std_array__std_array_iterator" { header "fusion/adapted/std_array/std_array_iterator.hpp" export * }
  module "fusion__adapted__std_array__tag_of" { header "fusion/adapted/std_array/tag_of.hpp" export * }
  module "fusion__adapted__std_pair" { header "fusion/adapted/std_pair.hpp" export * }
  module "fusion__adapted__std_tuple__detail__begin_impl" { header "fusion/adapted/std_tuple/detail/begin_impl.hpp" export * }
  module "fusion__adapted__std_tuple__detail__build_std_tuple" { header "fusion/adapted/std_tuple/detail/build_std_tuple.hpp" export * }
  module "fusion__adapted__std_tuple__detail__category_of_impl" { header "fusion/adapted/std_tuple/detail/category_of_impl.hpp" export * }
  module "fusion__adapted__std_tuple__detail__convert_impl" { header "fusion/adapted/std_tuple/detail/convert_impl.hpp" export * }
  module "fusion__adapted__std_tuple__detail__end_impl" { header "fusion/adapted/std_tuple/detail/end_impl.hpp" export * }
  module "fusion__adapted__std_tuple__detail__is_sequence_impl" { header "fusion/adapted/std_tuple/detail/is_sequence_impl.hpp" export * }
  module "fusion__adapted__std_tuple__detail__is_view_impl" { header "fusion/adapted/std_tuple/detail/is_view_impl.hpp" export * }
  module "fusion__adapted__std_tuple__detail__size_impl" { header "fusion/adapted/std_tuple/detail/size_impl.hpp" export * }
  module "fusion__adapted__std_tuple__detail__value_at_impl" { header "fusion/adapted/std_tuple/detail/value_at_impl.hpp" export * }
  module "fusion__adapted__std_tuple" { header "fusion/adapted/std_tuple.hpp" export * }
  module "fusion__adapted__std_tuple__mpl__clear" { header "fusion/adapted/std_tuple/mpl/clear.hpp" export * }
  module "fusion__adapted__std_tuple__std_tuple_iterator" { header "fusion/adapted/std_tuple/std_tuple_iterator.hpp" export * }
  module "fusion__adapted__std_tuple__tag_of" { header "fusion/adapted/std_tuple/tag_of.hpp" export * }
  module "fusion__adapted__struct__adapt_assoc_struct" { header "fusion/adapted/struct/adapt_assoc_struct.hpp" export * }
  module "fusion__adapted__struct__adapt_assoc_struct_named" { header "fusion/adapted/struct/adapt_assoc_struct_named.hpp" export * }
  module "fusion__adapted__struct__adapt_struct" { header "fusion/adapted/struct/adapt_struct.hpp" export * }
  module "fusion__adapted__struct__adapt_struct_named" { header "fusion/adapted/struct/adapt_struct_named.hpp" export * }
  module "fusion__adapted__struct__define_assoc_struct" { header "fusion/adapted/struct/define_assoc_struct.hpp" export * }
  module "fusion__adapted__struct__define_struct" { header "fusion/adapted/struct/define_struct.hpp" export * }
  module "fusion__adapted__struct__define_struct_inline" { header "fusion/adapted/struct/define_struct_inline.hpp" export * }
  module "fusion__adapted__struct__detail__adapt_auto" { header "fusion/adapted/struct/detail/adapt_auto.hpp" export * }
  module "fusion__adapted__struct__detail__adapt_base_assoc_attr_filler" { header "fusion/adapted/struct/detail/adapt_base_assoc_attr_filler.hpp" export * }
  module "fusion__adapted__struct__detail__adapt_base_attr_filler" { header "fusion/adapted/struct/detail/adapt_base_attr_filler.hpp" export * }
  module "fusion__adapted__struct__detail__adapt_base" { header "fusion/adapted/struct/detail/adapt_base.hpp" export * }
  module "fusion__adapted__struct__detail__adapt_is_tpl" { header "fusion/adapted/struct/detail/adapt_is_tpl.hpp" export * }
  module "fusion__adapted__struct__detail__define_struct" { header "fusion/adapted/struct/detail/define_struct.hpp" export * }
  module "fusion__adapted__struct__detail__define_struct_inline" { header "fusion/adapted/struct/detail/define_struct_inline.hpp" export * }
  module "fusion__adapted__struct__detail__extension" { header "fusion/adapted/struct/detail/extension.hpp" export * }
  module "fusion__adapted__struct__detail__namespace" { header "fusion/adapted/struct/detail/namespace.hpp" export * }
  module "fusion__adapted__struct__detail__preprocessor__is_seq" { header "fusion/adapted/struct/detail/preprocessor/is_seq.hpp" export * }
  module "fusion__adapted__struct__detail__proxy_type" { header "fusion/adapted/struct/detail/proxy_type.hpp" export * }
  module "fusion__adapted__struct" { header "fusion/adapted/struct.hpp" export * }
  module "fusion__algorithm__auxiliary__copy" { header "fusion/algorithm/auxiliary/copy.hpp" export * }
  module "fusion__algorithm__auxiliary" { header "fusion/algorithm/auxiliary.hpp" export * }
  module "fusion__algorithm__auxiliary__move" { header "fusion/algorithm/auxiliary/move.hpp" export * }
  module "fusion__algorithm" { header "fusion/algorithm.hpp" export * }
  module "fusion__algorithm__iteration__accumulate_fwd" { header "fusion/algorithm/iteration/accumulate_fwd.hpp" export * }
  module "fusion__algorithm__iteration__accumulate" { header "fusion/algorithm/iteration/accumulate.hpp" export * }
  module "fusion__algorithm__iteration__detail__for_each" { header "fusion/algorithm/iteration/detail/for_each.hpp" export * }
  module "fusion__algorithm__iteration__fold" { header "fusion/algorithm/iteration/fold.hpp" export * }
  module "fusion__algorithm__iteration__for_each_fwd" { header "fusion/algorithm/iteration/for_each_fwd.hpp" export * }
  module "fusion__algorithm__iteration__for_each" { header "fusion/algorithm/iteration/for_each.hpp" export * }
  module "fusion__algorithm__iteration" { header "fusion/algorithm/iteration.hpp" export * }
  module "fusion__algorithm__iteration__iter_fold" { header "fusion/algorithm/iteration/iter_fold.hpp" export * }
  module "fusion__algorithm__iteration__reverse_fold" { header "fusion/algorithm/iteration/reverse_fold.hpp" export * }
  module "fusion__algorithm__iteration__reverse_iter_fold" { header "fusion/algorithm/iteration/reverse_iter_fold.hpp" export * }
  module "fusion__algorithm__query__all" { header "fusion/algorithm/query/all.hpp" export * }
  module "fusion__algorithm__query__any" { header "fusion/algorithm/query/any.hpp" export * }
  module "fusion__algorithm__query__count" { header "fusion/algorithm/query/count.hpp" export * }
  module "fusion__algorithm__query__count_if" { header "fusion/algorithm/query/count_if.hpp" export * }
  module "fusion__algorithm__query__detail__all" { header "fusion/algorithm/query/detail/all.hpp" export * }
  module "fusion__algorithm__query__detail__any" { header "fusion/algorithm/query/detail/any.hpp" export * }
  module "fusion__algorithm__query__detail__count" { header "fusion/algorithm/query/detail/count.hpp" export * }
  module "fusion__algorithm__query__detail__count_if" { header "fusion/algorithm/query/detail/count_if.hpp" export * }
  module "fusion__algorithm__query__detail__find_if" { header "fusion/algorithm/query/detail/find_if.hpp" export * }
  module "fusion__algorithm__query__detail__segmented_find" { header "fusion/algorithm/query/detail/segmented_find.hpp" export * }
  module "fusion__algorithm__query__detail__segmented_find_if" { header "fusion/algorithm/query/detail/segmented_find_if.hpp" export * }
  module "fusion__algorithm__query__find_fwd" { header "fusion/algorithm/query/find_fwd.hpp" export * }
  module "fusion__algorithm__query__find" { header "fusion/algorithm/query/find.hpp" export * }
  module "fusion__algorithm__query__find_if_fwd" { header "fusion/algorithm/query/find_if_fwd.hpp" export * }
  module "fusion__algorithm__query__find_if" { header "fusion/algorithm/query/find_if.hpp" export * }
  module "fusion__algorithm__query" { header "fusion/algorithm/query.hpp" export * }
  module "fusion__algorithm__query__none" { header "fusion/algorithm/query/none.hpp" export * }
  module "fusion__algorithm__transformation__clear" { header "fusion/algorithm/transformation/clear.hpp" export * }
  module "fusion__algorithm__transformation__detail__replace" { header "fusion/algorithm/transformation/detail/replace.hpp" export * }
  module "fusion__algorithm__transformation__erase" { header "fusion/algorithm/transformation/erase.hpp" export * }
  module "fusion__algorithm__transformation__erase_key" { header "fusion/algorithm/transformation/erase_key.hpp" export * }
  module "fusion__algorithm__transformation__filter" { header "fusion/algorithm/transformation/filter.hpp" export * }
  module "fusion__algorithm__transformation__filter_if" { header "fusion/algorithm/transformation/filter_if.hpp" export * }
  module "fusion__algorithm__transformation__flatten" { header "fusion/algorithm/transformation/flatten.hpp" export * }
  module "fusion__algorithm__transformation" { header "fusion/algorithm/transformation.hpp" export * }
  module "fusion__algorithm__transformation__insert" { header "fusion/algorithm/transformation/insert.hpp" export * }
  module "fusion__algorithm__transformation__insert_range" { header "fusion/algorithm/transformation/insert_range.hpp" export * }
  module "fusion__algorithm__transformation__join" { header "fusion/algorithm/transformation/join.hpp" export * }
  module "fusion__algorithm__transformation__pop_back" { header "fusion/algorithm/transformation/pop_back.hpp" export * }
  module "fusion__algorithm__transformation__pop_front" { header "fusion/algorithm/transformation/pop_front.hpp" export * }
  module "fusion__algorithm__transformation__push_back" { header "fusion/algorithm/transformation/push_back.hpp" export * }
  module "fusion__algorithm__transformation__push_front" { header "fusion/algorithm/transformation/push_front.hpp" export * }
  module "fusion__algorithm__transformation__remove" { header "fusion/algorithm/transformation/remove.hpp" export * }
  module "fusion__algorithm__transformation__remove_if" { header "fusion/algorithm/transformation/remove_if.hpp" export * }
  module "fusion__algorithm__transformation__replace" { header "fusion/algorithm/transformation/replace.hpp" export * }
  module "fusion__algorithm__transformation__replace_if" { header "fusion/algorithm/transformation/replace_if.hpp" export * }
  module "fusion__algorithm__transformation__reverse" { header "fusion/algorithm/transformation/reverse.hpp" export * }
  module "fusion__algorithm__transformation__transform" { header "fusion/algorithm/transformation/transform.hpp" export * }
  module "fusion__algorithm__transformation__zip" { header "fusion/algorithm/transformation/zip.hpp" export * }
  module "fusion__container__deque__back_extended_deque" { header "fusion/container/deque/back_extended_deque.hpp" export * }
  module "fusion__container__deque__convert" { header "fusion/container/deque/convert.hpp" export * }
  module "fusion__container__deque__deque_fwd" { header "fusion/container/deque/deque_fwd.hpp" export * }
  module "fusion__container__deque__deque" { header "fusion/container/deque/deque.hpp" export * }
  module "fusion__container__deque__deque_iterator" { header "fusion/container/deque/deque_iterator.hpp" export * }
  module "fusion__container__deque__detail__at_impl" { header "fusion/container/deque/detail/at_impl.hpp" export * }
  module "fusion__container__deque__detail__begin_impl" { header "fusion/container/deque/detail/begin_impl.hpp" export * }
  module "fusion__container__deque__detail__convert_impl" { header "fusion/container/deque/detail/convert_impl.hpp" export * }
  module "fusion__container__deque__detail__cpp03__as_deque" { header "fusion/container/deque/detail/cpp03/as_deque.hpp" export * }
  module "fusion__container__deque__detail__cpp03__build_deque" { header "fusion/container/deque/detail/cpp03/build_deque.hpp" export * }
  module "fusion__container__deque__detail__cpp03__deque_fwd" { header "fusion/container/deque/detail/cpp03/deque_fwd.hpp" export * }
  module "fusion__container__deque__detail__cpp03__deque_initial_size" { header "fusion/container/deque/detail/cpp03/deque_initial_size.hpp" export * }
  module "fusion__container__deque__detail__cpp03__deque_keyed_values" { header "fusion/container/deque/detail/cpp03/deque_keyed_values.hpp" export * }
  module "fusion__container__deque__detail__cpp03__limits" { header "fusion/container/deque/detail/cpp03/limits.hpp" export * }
  module "fusion__container__deque__detail__deque_keyed_values" { header "fusion/container/deque/detail/deque_keyed_values.hpp" export * }
  module "fusion__container__deque__detail__end_impl" { header "fusion/container/deque/detail/end_impl.hpp" export * }
  module "fusion__container__deque__detail__is_sequence_impl" { header "fusion/container/deque/detail/is_sequence_impl.hpp" export * }
  module "fusion__container__deque__detail__keyed_element" { header "fusion/container/deque/detail/keyed_element.hpp" export * }
  module "fusion__container__deque__detail__value_at_impl" { header "fusion/container/deque/detail/value_at_impl.hpp" export * }
  module "fusion__container__deque__front_extended_deque" { header "fusion/container/deque/front_extended_deque.hpp" export * }
  module "fusion__container__deque" { header "fusion/container/deque.hpp" export * }
  module "fusion__container__generation__cons_tie" { header "fusion/container/generation/cons_tie.hpp" export * }
  module "fusion__container__generation__deque_tie" { header "fusion/container/generation/deque_tie.hpp" export * }
  module "fusion__container__generation__detail__pp_deque_tie" { header "fusion/container/generation/detail/pp_deque_tie.hpp" export * }
  module "fusion__container__generation__detail__pp_list_tie" { header "fusion/container/generation/detail/pp_list_tie.hpp" export * }
  module "fusion__container__generation__detail__pp_make_list" { header "fusion/container/generation/detail/pp_make_list.hpp" export * }
  module "fusion__container__generation__detail__pp_make_map" { header "fusion/container/generation/detail/pp_make_map.hpp" export * }
  module "fusion__container__generation__detail__pp_make_set" { header "fusion/container/generation/detail/pp_make_set.hpp" export * }
  module "fusion__container__generation__detail__pp_make_vector" { header "fusion/container/generation/detail/pp_make_vector.hpp" export * }
  module "fusion__container__generation__detail__pp_map_tie" { header "fusion/container/generation/detail/pp_map_tie.hpp" export * }
  module "fusion__container__generation__detail__pp_vector_tie" { header "fusion/container/generation/detail/pp_vector_tie.hpp" export * }
  module "fusion__container__generation" { header "fusion/container/generation.hpp" export * }
  module "fusion__container__generation__ignore" { header "fusion/container/generation/ignore.hpp" export * }
  module "fusion__container__generation__list_tie" { header "fusion/container/generation/list_tie.hpp" export * }
  module "fusion__container__generation__make_cons" { header "fusion/container/generation/make_cons.hpp" export * }
  module "fusion__container__generation__make_deque" { header "fusion/container/generation/make_deque.hpp" export * }
  module "fusion__container__generation__make_list" { header "fusion/container/generation/make_list.hpp" export * }
  module "fusion__container__generation__make_map" { header "fusion/container/generation/make_map.hpp" export * }
  module "fusion__container__generation__make_set" { header "fusion/container/generation/make_set.hpp" export * }
  module "fusion__container__generation__make_vector" { header "fusion/container/generation/make_vector.hpp" export * }
  module "fusion__container__generation__map_tie" { header "fusion/container/generation/map_tie.hpp" export * }
  module "fusion__container__generation__pair_tie" { header "fusion/container/generation/pair_tie.hpp" export * }
  module "fusion__container" { header "fusion/container.hpp" export * }
  module "fusion__container__list__cons_fwd" { header "fusion/container/list/cons_fwd.hpp" export * }
  module "fusion__container__list__cons" { header "fusion/container/list/cons.hpp" export * }
  module "fusion__container__list__cons_iterator" { header "fusion/container/list/cons_iterator.hpp" export * }
  module "fusion__container__list__convert" { header "fusion/container/list/convert.hpp" export * }
  module "fusion__container__list__detail__at_impl" { header "fusion/container/list/detail/at_impl.hpp" export * }
  module "fusion__container__list__detail__begin_impl" { header "fusion/container/list/detail/begin_impl.hpp" export * }
  module "fusion__container__list__detail__build_cons" { header "fusion/container/list/detail/build_cons.hpp" export * }
  module "fusion__container__list__detail__convert_impl" { header "fusion/container/list/detail/convert_impl.hpp" export * }
  module "fusion__container__list__detail__cpp03__limits" { header "fusion/container/list/detail/cpp03/limits.hpp" export * }
  module "fusion__container__list__detail__cpp03__list_fwd" { header "fusion/container/list/detail/cpp03/list_fwd.hpp" export * }
  module "fusion__container__list__detail__cpp03__list_to_cons" { header "fusion/container/list/detail/cpp03/list_to_cons.hpp" export * }
  module "fusion__container__list__detail__deref_impl" { header "fusion/container/list/detail/deref_impl.hpp" export * }
  module "fusion__container__list__detail__empty_impl" { header "fusion/container/list/detail/empty_impl.hpp" export * }
  module "fusion__container__list__detail__end_impl" { header "fusion/container/list/detail/end_impl.hpp" export * }
  module "fusion__container__list__detail__equal_to_impl" { header "fusion/container/list/detail/equal_to_impl.hpp" export * }
  module "fusion__container__list__detail__list_to_cons" { header "fusion/container/list/detail/list_to_cons.hpp" export * }
  module "fusion__container__list__detail__next_impl" { header "fusion/container/list/detail/next_impl.hpp" export * }
  module "fusion__container__list__detail__reverse_cons" { header "fusion/container/list/detail/reverse_cons.hpp" export * }
  module "fusion__container__list__detail__value_of_impl" { header "fusion/container/list/detail/value_of_impl.hpp" export * }
  module "fusion__container__list" { header "fusion/container/list.hpp" export * }
  module "fusion__container__list__list_fwd" { header "fusion/container/list/list_fwd.hpp" export * }
  module "fusion__container__list__list" { header "fusion/container/list/list.hpp" export * }
  module "fusion__container__list__nil" { header "fusion/container/list/nil.hpp" export * }
  module "fusion__container__map__convert" { header "fusion/container/map/convert.hpp" export * }
  module "fusion__container__map__detail__at_key_impl" { header "fusion/container/map/detail/at_key_impl.hpp" export * }
  module "fusion__container__map__detail__cpp03__at_impl" { header "fusion/container/map/detail/cpp03/at_impl.hpp" export * }
  module "fusion__container__map__detail__cpp03__limits" { header "fusion/container/map/detail/cpp03/limits.hpp" export * }
  module "fusion__container__map__detail__cpp03__map_fwd" { header "fusion/container/map/detail/cpp03/map_fwd.hpp" export * }
  module "fusion__container__map__detail__cpp03__map" { header "fusion/container/map/detail/cpp03/map.hpp" export * }
  module "fusion__container__map__detail__cpp03__value_at_impl" { header "fusion/container/map/detail/cpp03/value_at_impl.hpp" export * }
  module "fusion__container__map__detail__map_impl" { header "fusion/container/map/detail/map_impl.hpp" export * }
  module "fusion__container__map__detail__map_index" { header "fusion/container/map/detail/map_index.hpp" export * }
  module "fusion__container__map__detail__value_at_impl" { header "fusion/container/map/detail/value_at_impl.hpp" export * }
  module "fusion__container__map__detail__value_at_key_impl" { header "fusion/container/map/detail/value_at_key_impl.hpp" export * }
  module "fusion__container__map" { header "fusion/container/map.hpp" export * }
  module "fusion__container__map__map_fwd" { header "fusion/container/map/map_fwd.hpp" export * }
  module "fusion__container__map__map" { header "fusion/container/map/map.hpp" export * }
  module "fusion__container__set__convert" { header "fusion/container/set/convert.hpp" export * }
  module "fusion__container__set__detail__as_set" { header "fusion/container/set/detail/as_set.hpp" export * }
  module "fusion__container__set__detail__convert_impl" { header "fusion/container/set/detail/convert_impl.hpp" export * }
  module "fusion__container__set__detail__cpp03__as_set" { header "fusion/container/set/detail/cpp03/as_set.hpp" export * }
  module "fusion__container__set__detail__cpp03__limits" { header "fusion/container/set/detail/cpp03/limits.hpp" export * }
  module "fusion__container__set__detail__cpp03__set_fwd" { header "fusion/container/set/detail/cpp03/set_fwd.hpp" export * }
  module "fusion__container__set" { header "fusion/container/set.hpp" export * }
  module "fusion__container__set__set_fwd" { header "fusion/container/set/set_fwd.hpp" export * }
  module "fusion__container__set__set" { header "fusion/container/set/set.hpp" export * }
  module "fusion__container__vector__convert" { header "fusion/container/vector/convert.hpp" export * }
  module "fusion__container__vector__detail__as_vector" { header "fusion/container/vector/detail/as_vector.hpp" export * }
  module "fusion__container__vector__detail__config" { header "fusion/container/vector/detail/config.hpp" export * }
  module "fusion__container__vector__detail__convert_impl" { header "fusion/container/vector/detail/convert_impl.hpp" export * }
  module "fusion__container__vector__detail__cpp03__as_vector" { header "fusion/container/vector/detail/cpp03/as_vector.hpp" export * }
  module "fusion__container__vector__detail__cpp03__limits" { header "fusion/container/vector/detail/cpp03/limits.hpp" export * }
  module "fusion__container__vector__detail__cpp03__preprocessed__vector10_fwd" { header "fusion/container/vector/detail/cpp03/preprocessed/vector10_fwd.hpp" export * }
  module "fusion__container__vector__detail__cpp03__preprocessed__vector20_fwd" { header "fusion/container/vector/detail/cpp03/preprocessed/vector20_fwd.hpp" export * }
  module "fusion__container__vector__detail__cpp03__preprocessed__vector30_fwd" { header "fusion/container/vector/detail/cpp03/preprocessed/vector30_fwd.hpp" export * }
  module "fusion__container__vector__detail__cpp03__preprocessed__vector40_fwd" { header "fusion/container/vector/detail/cpp03/preprocessed/vector40_fwd.hpp" export * }
  module "fusion__container__vector__detail__cpp03__preprocessed__vector50_fwd" { header "fusion/container/vector/detail/cpp03/preprocessed/vector50_fwd.hpp" export * }
  module "fusion__container__vector__detail__cpp03__value_at_impl" { header "fusion/container/vector/detail/cpp03/value_at_impl.hpp" export * }
  module "fusion__container__vector__detail__cpp03__vector10_fwd" { header "fusion/container/vector/detail/cpp03/vector10_fwd.hpp" export * }
  module "fusion__container__vector__detail__cpp03__vector20_fwd" { header "fusion/container/vector/detail/cpp03/vector20_fwd.hpp" export * }
  module "fusion__container__vector__detail__cpp03__vector30_fwd" { header "fusion/container/vector/detail/cpp03/vector30_fwd.hpp" export * }
  module "fusion__container__vector__detail__cpp03__vector40_fwd" { header "fusion/container/vector/detail/cpp03/vector40_fwd.hpp" export * }
  module "fusion__container__vector__detail__cpp03__vector50_fwd" { header "fusion/container/vector/detail/cpp03/vector50_fwd.hpp" export * }
  module "fusion__container__vector__detail__distance_impl" { header "fusion/container/vector/detail/distance_impl.hpp" export * }
  module "fusion__container__vector__detail__equal_to_impl" { header "fusion/container/vector/detail/equal_to_impl.hpp" export * }
  module "fusion__container__vector" { header "fusion/container/vector.hpp" export * }
  module "fusion__container__vector__vector10" { header "fusion/container/vector/vector10.hpp" export * }
  module "fusion__container__vector__vector20" { header "fusion/container/vector/vector20.hpp" export * }
  module "fusion__container__vector__vector30" { header "fusion/container/vector/vector30.hpp" export * }
  module "fusion__container__vector__vector40" { header "fusion/container/vector/vector40.hpp" export * }
  module "fusion__container__vector__vector50" { header "fusion/container/vector/vector50.hpp" export * }
  module "fusion__container__vector__vector_fwd" { header "fusion/container/vector/vector_fwd.hpp" export * }
  module "fusion__container__vector__vector" { header "fusion/container/vector/vector.hpp" export * }
  module "fusion__functional__adapter__detail__access" { header "fusion/functional/adapter/detail/access.hpp" export * }
  module "fusion__functional__adapter__fused_function_object" { header "fusion/functional/adapter/fused_function_object.hpp" export * }
  module "fusion__functional__adapter__fused" { header "fusion/functional/adapter/fused.hpp" export * }
  module "fusion__functional__adapter__fused_procedure" { header "fusion/functional/adapter/fused_procedure.hpp" export * }
  module "fusion__functional__adapter" { header "fusion/functional/adapter.hpp" export * }
  module "fusion__functional__adapter__limits" { header "fusion/functional/adapter/limits.hpp" export * }
  module "fusion__functional__adapter__unfused" { header "fusion/functional/adapter/unfused.hpp" export * }
  module "fusion__functional__adapter__unfused_typed" { header "fusion/functional/adapter/unfused_typed.hpp" export * }
  module "fusion__functional__generation" { header "fusion/functional/generation.hpp" export * }
  module "fusion__functional__generation__make_fused_function_object" { header "fusion/functional/generation/make_fused_function_object.hpp" export * }
  module "fusion__functional__generation__make_fused" { header "fusion/functional/generation/make_fused.hpp" export * }
  module "fusion__functional__generation__make_fused_procedure" { header "fusion/functional/generation/make_fused_procedure.hpp" export * }
  module "fusion__functional__generation__make_unfused" { header "fusion/functional/generation/make_unfused.hpp" export * }
  module "fusion__functional" { header "fusion/functional.hpp" export * }
  module "fusion__functional__invocation" { header "fusion/functional/invocation.hpp" export * }
  module "fusion__functional__invocation__invoke_function_object" { header "fusion/functional/invocation/invoke_function_object.hpp" export * }
  module "fusion__functional__invocation__invoke" { header "fusion/functional/invocation/invoke.hpp" export * }
  module "fusion__functional__invocation__invoke_procedure" { header "fusion/functional/invocation/invoke_procedure.hpp" export * }
  module "fusion__functional__invocation__limits" { header "fusion/functional/invocation/limits.hpp" export * }
  module "fusion__include__accumulate" { header "fusion/include/accumulate.hpp" export * }
  module "fusion__include__adapt_adt" { header "fusion/include/adapt_adt.hpp" export * }
  module "fusion__include__adapt_adt_named" { header "fusion/include/adapt_adt_named.hpp" export * }
  module "fusion__include__adapt_assoc_adt_named" { header "fusion/include/adapt_assoc_adt_named.hpp" export * }
  module "fusion__include__adapt_assoc_struct" { header "fusion/include/adapt_assoc_struct.hpp" export * }
  module "fusion__include__adapt_assoc_struct_named" { header "fusion/include/adapt_assoc_struct_named.hpp" export * }
  module "fusion__include__adapted" { header "fusion/include/adapted.hpp" export * }
  module "fusion__include__adapter" { header "fusion/include/adapter.hpp" export * }
  module "fusion__include__adapt_struct" { header "fusion/include/adapt_struct.hpp" export * }
  module "fusion__include__adapt_struct_named" { header "fusion/include/adapt_struct_named.hpp" export * }
  module "fusion__include__advance" { header "fusion/include/advance.hpp" export * }
  module "fusion__include__algorithm" { header "fusion/include/algorithm.hpp" export * }
  module "fusion__include__all" { header "fusion/include/all.hpp" export * }
  module "fusion__include__any" { header "fusion/include/any.hpp" export * }
  module "fusion__include__array" { header "fusion/include/array.hpp" export * }
  module "fusion__include__as_deque" { header "fusion/include/as_deque.hpp" export * }
  module "fusion__include__as_list" { header "fusion/include/as_list.hpp" export * }
  module "fusion__include__as_map" { header "fusion/include/as_map.hpp" export * }
  module "fusion__include__as_set" { header "fusion/include/as_set.hpp" export * }
  module "fusion__include__as_vector" { header "fusion/include/as_vector.hpp" export * }
  module "fusion__include__at_c" { header "fusion/include/at_c.hpp" export * }
  module "fusion__include__at" { header "fusion/include/at.hpp" export * }
  module "fusion__include__at_key" { header "fusion/include/at_key.hpp" export * }
  module "fusion__include__auxiliary" { header "fusion/include/auxiliary.hpp" export * }
  module "fusion__include__back" { header "fusion/include/back.hpp" export * }
  module "fusion__include__begin" { header "fusion/include/begin.hpp" export * }
  module "fusion__include__boost_array" { header "fusion/include/boost_array.hpp" export * }
  module "fusion__include__boost_tuple" { header "fusion/include/boost_tuple.hpp" export * }
  module "fusion__include__category_of" { header "fusion/include/category_of.hpp" export * }
  module "fusion__include__clear" { header "fusion/include/clear.hpp" export * }
  module "fusion__include__comparison" { header "fusion/include/comparison.hpp" export * }
  module "fusion__include__cons" { header "fusion/include/cons.hpp" export * }
  module "fusion__include__cons_tie" { header "fusion/include/cons_tie.hpp" export * }
  module "fusion__include__container" { header "fusion/include/container.hpp" export * }
  module "fusion__include__convert" { header "fusion/include/convert.hpp" export * }
  module "fusion__include__copy" { header "fusion/include/copy.hpp" export * }
  module "fusion__include__count" { header "fusion/include/count.hpp" export * }
  module "fusion__include__count_if" { header "fusion/include/count_if.hpp" export * }
  module "fusion__include__deduce" { header "fusion/include/deduce.hpp" export * }
  module "fusion__include__deduce_sequence" { header "fusion/include/deduce_sequence.hpp" export * }
  module "fusion__include__define_assoc_struct" { header "fusion/include/define_assoc_struct.hpp" export * }
  module "fusion__include__define_struct" { header "fusion/include/define_struct.hpp" export * }
  module "fusion__include__define_struct_inline" { header "fusion/include/define_struct_inline.hpp" export * }
  module "fusion__include__deque_fwd" { header "fusion/include/deque_fwd.hpp" export * }
  module "fusion__include__deque" { header "fusion/include/deque.hpp" export * }
  module "fusion__include__deque_tie" { header "fusion/include/deque_tie.hpp" export * }
  module "fusion__include__deref_data" { header "fusion/include/deref_data.hpp" export * }
  module "fusion__include__deref" { header "fusion/include/deref.hpp" export * }
  module "fusion__include__distance" { header "fusion/include/distance.hpp" export * }
  module "fusion__include__empty" { header "fusion/include/empty.hpp" export * }
  module "fusion__include__end" { header "fusion/include/end.hpp" export * }
  module "fusion__include__equal_to" { header "fusion/include/equal_to.hpp" export * }
  module "fusion__include__erase" { header "fusion/include/erase.hpp" export * }
  module "fusion__include__erase_key" { header "fusion/include/erase_key.hpp" export * }
  module "fusion__include__filter" { header "fusion/include/filter.hpp" export * }
  module "fusion__include__filter_if" { header "fusion/include/filter_if.hpp" export * }
  module "fusion__include__filter_view" { header "fusion/include/filter_view.hpp" export * }
  module "fusion__include__find" { header "fusion/include/find.hpp" export * }
  module "fusion__include__find_if" { header "fusion/include/find_if.hpp" export * }
  module "fusion__include__flatten" { header "fusion/include/flatten.hpp" export * }
  module "fusion__include__flatten_view" { header "fusion/include/flatten_view.hpp" export * }
  module "fusion__include__fold" { header "fusion/include/fold.hpp" export * }
  module "fusion__include__for_each" { header "fusion/include/for_each.hpp" export * }
  module "fusion__include__front" { header "fusion/include/front.hpp" export * }
  module "fusion__include__functional" { header "fusion/include/functional.hpp" export * }
  module "fusion__include__fused_function_object" { header "fusion/include/fused_function_object.hpp" export * }
  module "fusion__include__fused" { header "fusion/include/fused.hpp" export * }
  module "fusion__include__fused_procedure" { header "fusion/include/fused_procedure.hpp" export * }
  module "fusion__include__generation" { header "fusion/include/generation.hpp" export * }
  module "fusion__include__greater_equal" { header "fusion/include/greater_equal.hpp" export * }
  module "fusion__include__greater" { header "fusion/include/greater.hpp" export * }
  module "fusion__include__hash" { header "fusion/include/hash.hpp" export * }
  module "fusion__include__has_key" { header "fusion/include/has_key.hpp" export * }
  module "fusion__include__ignore" { header "fusion/include/ignore.hpp" export * }
  module "fusion__include__in" { header "fusion/include/in.hpp" export * }
  module "fusion__include__insert" { header "fusion/include/insert.hpp" export * }
  module "fusion__include__insert_range" { header "fusion/include/insert_range.hpp" export * }
  module "fusion__include__intrinsic" { header "fusion/include/intrinsic.hpp" export * }
  module "fusion__include__invocation" { header "fusion/include/invocation.hpp" export * }
  module "fusion__include__invoke_function_object" { header "fusion/include/invoke_function_object.hpp" export * }
  module "fusion__include__invoke" { header "fusion/include/invoke.hpp" export * }
  module "fusion__include__invoke_procedure" { header "fusion/include/invoke_procedure.hpp" export * }
  module "fusion__include__io" { header "fusion/include/io.hpp" export * }
  module "fusion__include__is_iterator" { header "fusion/include/is_iterator.hpp" export * }
  module "fusion__include__is_segmented" { header "fusion/include/is_segmented.hpp" export * }
  module "fusion__include__is_sequence" { header "fusion/include/is_sequence.hpp" export * }
  module "fusion__include__is_view" { header "fusion/include/is_view.hpp" export * }
  module "fusion__include__iteration" { header "fusion/include/iteration.hpp" export * }
  module "fusion__include__iterator_adapter" { header "fusion/include/iterator_adapter.hpp" export * }
  module "fusion__include__iterator_base" { header "fusion/include/iterator_base.hpp" export * }
  module "fusion__include__iterator_facade" { header "fusion/include/iterator_facade.hpp" export * }
  module "fusion__include__iterator" { header "fusion/include/iterator.hpp" export * }
  module "fusion__include__iterator_range" { header "fusion/include/iterator_range.hpp" export * }
  module "fusion__include__iter_fold" { header "fusion/include/iter_fold.hpp" export * }
  module "fusion__include__join" { header "fusion/include/join.hpp" export * }
  module "fusion__include__joint_view" { header "fusion/include/joint_view.hpp" export * }
  module "fusion__include__key_of" { header "fusion/include/key_of.hpp" export * }
  module "fusion__include__less_equal" { header "fusion/include/less_equal.hpp" export * }
  module "fusion__include__less" { header "fusion/include/less.hpp" export * }
  module "fusion__include__list_fwd" { header "fusion/include/list_fwd.hpp" export * }
  module "fusion__include__list" { header "fusion/include/list.hpp" export * }
  module "fusion__include__list_tie" { header "fusion/include/list_tie.hpp" export * }
  module "fusion__include__make_cons" { header "fusion/include/make_cons.hpp" export * }
  module "fusion__include__make_deque" { header "fusion/include/make_deque.hpp" export * }
  module "fusion__include__make_fused_function_object" { header "fusion/include/make_fused_function_object.hpp" export * }
  module "fusion__include__make_fused" { header "fusion/include/make_fused.hpp" export * }
  module "fusion__include__make_fused_procedure" { header "fusion/include/make_fused_procedure.hpp" export * }
  module "fusion__include__make_list" { header "fusion/include/make_list.hpp" export * }
  module "fusion__include__make_map" { header "fusion/include/make_map.hpp" export * }
  module "fusion__include__make_set" { header "fusion/include/make_set.hpp" export * }
  module "fusion__include__make_tuple" { header "fusion/include/make_tuple.hpp" export * }
  module "fusion__include__make_unfused" { header "fusion/include/make_unfused.hpp" export * }
  module "fusion__include__make_vector" { header "fusion/include/make_vector.hpp" export * }
  module "fusion__include__map_fwd" { header "fusion/include/map_fwd.hpp" export * }
  module "fusion__include__map" { header "fusion/include/map.hpp" export * }
  module "fusion__include__map_tie" { header "fusion/include/map_tie.hpp" export * }
  module "fusion__include__move" { header "fusion/include/move.hpp" export * }
  module "fusion__include__mpl" { header "fusion/include/mpl.hpp" export * }
  module "fusion__include__next" { header "fusion/include/next.hpp" export * }
  module "fusion__include__nil" { header "fusion/include/nil.hpp" export * }
  module "fusion__include__none" { header "fusion/include/none.hpp" export * }
  module "fusion__include__not_equal_to" { header "fusion/include/not_equal_to.hpp" export * }
  module "fusion__include__nview" { header "fusion/include/nview.hpp" export * }
  module "fusion__include__pair" { header "fusion/include/pair.hpp" export * }
  module "fusion__include__pair_tie" { header "fusion/include/pair_tie.hpp" export * }
  module "fusion__include__pop_back" { header "fusion/include/pop_back.hpp" export * }
  module "fusion__include__pop_front" { header "fusion/include/pop_front.hpp" export * }
  module "fusion__include__prior" { header "fusion/include/prior.hpp" export * }
  module "fusion__include__proxy_type" { header "fusion/include/proxy_type.hpp" export * }
  module "fusion__include__push_back" { header "fusion/include/push_back.hpp" export * }
  module "fusion__include__push_front" { header "fusion/include/push_front.hpp" export * }
  module "fusion__include__query" { header "fusion/include/query.hpp" export * }
  module "fusion__include__remove" { header "fusion/include/remove.hpp" export * }
  module "fusion__include__remove_if" { header "fusion/include/remove_if.hpp" export * }
  module "fusion__include__repetitive_view" { header "fusion/include/repetitive_view.hpp" export * }
  module "fusion__include__replace" { header "fusion/include/replace.hpp" export * }
  module "fusion__include__replace_if" { header "fusion/include/replace_if.hpp" export * }
  module "fusion__include__reverse_fold" { header "fusion/include/reverse_fold.hpp" export * }
  module "fusion__include__reverse" { header "fusion/include/reverse.hpp" export * }
  module "fusion__include__reverse_iter_fold" { header "fusion/include/reverse_iter_fold.hpp" export * }
  module "fusion__include__reverse_view" { header "fusion/include/reverse_view.hpp" export * }
  module "fusion__include__segmented_iterator" { header "fusion/include/segmented_iterator.hpp" export * }
  module "fusion__include__segments" { header "fusion/include/segments.hpp" export * }
  module "fusion__include__sequence_base" { header "fusion/include/sequence_base.hpp" export * }
  module "fusion__include__sequence_facade" { header "fusion/include/sequence_facade.hpp" export * }
  module "fusion__include__sequence" { header "fusion/include/sequence.hpp" export * }
  module "fusion__include__set_fwd" { header "fusion/include/set_fwd.hpp" export * }
  module "fusion__include__set" { header "fusion/include/set.hpp" export * }
  module "fusion__include__single_view" { header "fusion/include/single_view.hpp" export * }
  module "fusion__include__size" { header "fusion/include/size.hpp" export * }
  module "fusion__include__std_pair" { header "fusion/include/std_pair.hpp" export * }
  module "fusion__include__std_tuple" { header "fusion/include/std_tuple.hpp" export * }
  module "fusion__include__struct" { header "fusion/include/struct.hpp" export * }
  module "fusion__include__support" { header "fusion/include/support.hpp" export * }
  module "fusion__include__swap" { header "fusion/include/swap.hpp" export * }
  module "fusion__include__tag_of_fwd" { header "fusion/include/tag_of_fwd.hpp" export * }
  module "fusion__include__tag_of" { header "fusion/include/tag_of.hpp" export * }
  module "fusion__include__transformation" { header "fusion/include/transformation.hpp" export * }
  module "fusion__include__transform" { header "fusion/include/transform.hpp" export * }
  module "fusion__include__transform_view" { header "fusion/include/transform_view.hpp" export * }
  module "fusion__include__tuple_fwd" { header "fusion/include/tuple_fwd.hpp" export * }
  module "fusion__include__tuple" { header "fusion/include/tuple.hpp" export * }
  module "fusion__include__tuple_tie" { header "fusion/include/tuple_tie.hpp" export * }
  module "fusion__include__unfused" { header "fusion/include/unfused.hpp" export * }
  module "fusion__include__unfused_typed" { header "fusion/include/unfused_typed.hpp" export * }
  module "fusion__include__unused" { header "fusion/include/unused.hpp" export * }
  module "fusion__include__value_at" { header "fusion/include/value_at.hpp" export * }
  module "fusion__include__value_at_key" { header "fusion/include/value_at_key.hpp" export * }
  module "fusion__include__value_of_data" { header "fusion/include/value_of_data.hpp" export * }
  module "fusion__include__value_of" { header "fusion/include/value_of.hpp" export * }
  module "fusion__include__vector10" { header "fusion/include/vector10.hpp" export * }
  module "fusion__include__vector20" { header "fusion/include/vector20.hpp" export * }
  module "fusion__include__vector30" { header "fusion/include/vector30.hpp" export * }
  module "fusion__include__vector40" { header "fusion/include/vector40.hpp" export * }
  module "fusion__include__vector50" { header "fusion/include/vector50.hpp" export * }
  module "fusion__include__vector_fwd" { header "fusion/include/vector_fwd.hpp" export * }
  module "fusion__include__vector" { header "fusion/include/vector.hpp" export * }
  module "fusion__include__view" { header "fusion/include/view.hpp" export * }
  module "fusion__include__void" { header "fusion/include/void.hpp" export * }
  module "fusion__include__zip" { header "fusion/include/zip.hpp" export * }
  module "fusion__include__zip_view" { header "fusion/include/zip_view.hpp" export * }
  module "fusion__iterator__advance" { header "fusion/iterator/advance.hpp" export * }
  module "fusion__iterator__basic_iterator" { header "fusion/iterator/basic_iterator.hpp" export * }
  module "fusion__iterator__deref_data" { header "fusion/iterator/deref_data.hpp" export * }
  module "fusion__iterator__deref" { header "fusion/iterator/deref.hpp" export * }
  module "fusion__iterator__detail__adapt_deref_traits" { header "fusion/iterator/detail/adapt_deref_traits.hpp" export * }
  module "fusion__iterator__detail__adapt_value_traits" { header "fusion/iterator/detail/adapt_value_traits.hpp" export * }
  module "fusion__iterator__detail__advance" { header "fusion/iterator/detail/advance.hpp" export * }
  module "fusion__iterator__detail__distance" { header "fusion/iterator/detail/distance.hpp" export * }
  module "fusion__iterator__detail__segmented_equal_to" { header "fusion/iterator/detail/segmented_equal_to.hpp" export * }
  module "fusion__iterator__detail__segmented_iterator" { header "fusion/iterator/detail/segmented_iterator.hpp" export * }
  module "fusion__iterator__detail__segmented_next_impl" { header "fusion/iterator/detail/segmented_next_impl.hpp" export * }
  module "fusion__iterator__detail__segment_sequence" { header "fusion/iterator/detail/segment_sequence.hpp" export * }
  module "fusion__iterator__distance" { header "fusion/iterator/distance.hpp" export * }
  module "fusion__iterator__equal_to" { header "fusion/iterator/equal_to.hpp" export * }
  module "fusion__iterator" { header "fusion/iterator.hpp" export * }
  module "fusion__iterator__iterator_adapter" { header "fusion/iterator/iterator_adapter.hpp" export * }
  module "fusion__iterator__iterator_facade" { header "fusion/iterator/iterator_facade.hpp" export * }
  module "fusion__iterator__key_of" { header "fusion/iterator/key_of.hpp" export * }
  module "fusion__iterator__mpl__convert_iterator" { header "fusion/iterator/mpl/convert_iterator.hpp" export * }
  module "fusion__iterator__mpl__fusion_iterator" { header "fusion/iterator/mpl/fusion_iterator.hpp" export * }
  module "fusion__iterator__mpl" { header "fusion/iterator/mpl.hpp" export * }
  module "fusion__iterator__next" { header "fusion/iterator/next.hpp" export * }
  module "fusion__iterator__prior" { header "fusion/iterator/prior.hpp" export * }
  module "fusion__iterator__segmented_iterator" { header "fusion/iterator/segmented_iterator.hpp" export * }
  module "fusion__iterator__value_of_data" { header "fusion/iterator/value_of_data.hpp" export * }
  module "fusion__iterator__value_of" { header "fusion/iterator/value_of.hpp" export * }
  module "fusion__mpl__at" { header "fusion/mpl/at.hpp" export * }
  module "fusion__mpl__back" { header "fusion/mpl/back.hpp" export * }
  module "fusion__mpl__begin" { header "fusion/mpl/begin.hpp" export * }
  module "fusion__mpl__clear" { header "fusion/mpl/clear.hpp" export * }
  module "fusion__mpl__detail__clear" { header "fusion/mpl/detail/clear.hpp" export * }
  module "fusion__mpl__empty" { header "fusion/mpl/empty.hpp" export * }
  module "fusion__mpl__end" { header "fusion/mpl/end.hpp" export * }
  module "fusion__mpl__erase" { header "fusion/mpl/erase.hpp" export * }
  module "fusion__mpl__erase_key" { header "fusion/mpl/erase_key.hpp" export * }
  module "fusion__mpl__front" { header "fusion/mpl/front.hpp" export * }
  module "fusion__mpl__has_key" { header "fusion/mpl/has_key.hpp" export * }
  module "fusion__mpl" { header "fusion/mpl.hpp" export * }
  module "fusion__mpl__insert" { header "fusion/mpl/insert.hpp" export * }
  module "fusion__mpl__insert_range" { header "fusion/mpl/insert_range.hpp" export * }
  module "fusion__mpl__pop_back" { header "fusion/mpl/pop_back.hpp" export * }
  module "fusion__mpl__pop_front" { header "fusion/mpl/pop_front.hpp" export * }
  module "fusion__mpl__push_back" { header "fusion/mpl/push_back.hpp" export * }
  module "fusion__mpl__push_front" { header "fusion/mpl/push_front.hpp" export * }
  module "fusion__mpl__size" { header "fusion/mpl/size.hpp" export * }
  module "fusion__sequence__comparison__enable_comparison" { header "fusion/sequence/comparison/enable_comparison.hpp" export * }
  module "fusion__sequence__comparison__equal_to" { header "fusion/sequence/comparison/equal_to.hpp" export * }
  module "fusion__sequence__comparison__greater_equal" { header "fusion/sequence/comparison/greater_equal.hpp" export * }
  module "fusion__sequence__comparison__greater" { header "fusion/sequence/comparison/greater.hpp" export * }
  module "fusion__sequence__comparison" { header "fusion/sequence/comparison.hpp" export * }
  module "fusion__sequence__comparison__less_equal" { header "fusion/sequence/comparison/less_equal.hpp" export * }
  module "fusion__sequence__comparison__less" { header "fusion/sequence/comparison/less.hpp" export * }
  module "fusion__sequence__comparison__not_equal_to" { header "fusion/sequence/comparison/not_equal_to.hpp" export * }
  module "fusion__sequence__convert" { header "fusion/sequence/convert.hpp" export * }
  module "fusion__sequence__hash" { header "fusion/sequence/hash.hpp" export * }
  module "fusion__sequence" { header "fusion/sequence.hpp" export * }
  module "fusion__sequence__intrinsic__at_c" { header "fusion/sequence/intrinsic/at_c.hpp" export * }
  module "fusion__sequence__intrinsic__at" { header "fusion/sequence/intrinsic/at.hpp" export * }
  module "fusion__sequence__intrinsic__at_key" { header "fusion/sequence/intrinsic/at_key.hpp" export * }
  module "fusion__sequence__intrinsic__back" { header "fusion/sequence/intrinsic/back.hpp" export * }
  module "fusion__sequence__intrinsic__begin" { header "fusion/sequence/intrinsic/begin.hpp" export * }
  module "fusion__sequence__intrinsic__detail__segmented_begin_impl" { header "fusion/sequence/intrinsic/detail/segmented_begin_impl.hpp" export * }
  module "fusion__sequence__intrinsic__detail__segmented_end_impl" { header "fusion/sequence/intrinsic/detail/segmented_end_impl.hpp" export * }
  module "fusion__sequence__intrinsic__empty" { header "fusion/sequence/intrinsic/empty.hpp" export * }
  module "fusion__sequence__intrinsic__end" { header "fusion/sequence/intrinsic/end.hpp" export * }
  module "fusion__sequence__intrinsic__front" { header "fusion/sequence/intrinsic/front.hpp" export * }
  module "fusion__sequence__intrinsic_fwd" { header "fusion/sequence/intrinsic_fwd.hpp" export * }
  module "fusion__sequence__intrinsic__has_key" { header "fusion/sequence/intrinsic/has_key.hpp" export * }
  module "fusion__sequence__intrinsic" { header "fusion/sequence/intrinsic.hpp" export * }
  module "fusion__sequence__intrinsic__segments" { header "fusion/sequence/intrinsic/segments.hpp" export * }
  module "fusion__sequence__intrinsic__size" { header "fusion/sequence/intrinsic/size.hpp" export * }
  module "fusion__sequence__intrinsic__swap" { header "fusion/sequence/intrinsic/swap.hpp" export * }
  module "fusion__sequence__intrinsic__value_at" { header "fusion/sequence/intrinsic/value_at.hpp" export * }
  module "fusion__sequence__intrinsic__value_at_key" { header "fusion/sequence/intrinsic/value_at_key.hpp" export * }
  module "fusion__sequence__io__detail__in" { header "fusion/sequence/io/detail/in.hpp" export * }
  module "fusion__sequence__io" { header "fusion/sequence/io.hpp" export * }
  module "fusion__sequence__io__in" { header "fusion/sequence/io/in.hpp" export * }
  module "fusion__sequence__sequence_facade" { header "fusion/sequence/sequence_facade.hpp" export * }
  module "fusion__support__as_const" { header "fusion/support/as_const.hpp" export * }
  module "fusion__support__category_of" { header "fusion/support/category_of.hpp" export * }
  module "fusion__support__config" { header "fusion/support/config.hpp" export * }
  module "fusion__support__deduce" { header "fusion/support/deduce.hpp" export * }
  module "fusion__support__deduce_sequence" { header "fusion/support/deduce_sequence.hpp" export * }
  module "fusion__support__detail__access" { header "fusion/support/detail/access.hpp" export * }
  module "fusion__support__detail__and" { header "fusion/support/detail/and.hpp" export * }
  module "fusion__support__detail__as_fusion_element" { header "fusion/support/detail/as_fusion_element.hpp" export * }
  module "fusion__support__detail__enabler" { header "fusion/support/detail/enabler.hpp" export * }
  module "fusion__support__detail__index_sequence" { header "fusion/support/detail/index_sequence.hpp" export * }
  module "fusion__support__detail__is_mpl_sequence" { header "fusion/support/detail/is_mpl_sequence.hpp" export * }
  module "fusion__support__detail__is_same_size" { header "fusion/support/detail/is_same_size.hpp" export * }
  module "fusion__support__detail__mpl_iterator_category" { header "fusion/support/detail/mpl_iterator_category.hpp" export * }
  module "fusion__support__detail__pp_round" { header "fusion/support/detail/pp_round.hpp" export * }
  module "fusion__support__detail__segmented_fold_until_impl" { header "fusion/support/detail/segmented_fold_until_impl.hpp" export * }
  module "fusion__support" { header "fusion/support.hpp" export * }
  module "fusion__support__is_iterator" { header "fusion/support/is_iterator.hpp" export * }
  module "fusion__support__is_segmented" { header "fusion/support/is_segmented.hpp" export * }
  module "fusion__support__is_sequence" { header "fusion/support/is_sequence.hpp" export * }
  module "fusion__support__is_view" { header "fusion/support/is_view.hpp" export * }
  module "fusion__support__iterator_base" { header "fusion/support/iterator_base.hpp" export * }
  module "fusion__support__pair" { header "fusion/support/pair.hpp" export * }
  module "fusion__support__sequence_base" { header "fusion/support/sequence_base.hpp" export * }
  module "fusion__support__tag_of_fwd" { header "fusion/support/tag_of_fwd.hpp" export * }
  module "fusion__support__tag_of" { header "fusion/support/tag_of.hpp" export * }
  module "fusion__support__unused" { header "fusion/support/unused.hpp" export * }
  module "fusion__support__void" { header "fusion/support/void.hpp" export * }
  module "fusion__tuple__detail__make_tuple" { header "fusion/tuple/detail/make_tuple.hpp" export * }
  module "fusion__tuple__detail__tuple_fwd" { header "fusion/tuple/detail/tuple_fwd.hpp" export * }
  module "fusion__tuple__detail__tuple" { header "fusion/tuple/detail/tuple.hpp" export * }
  module "fusion__tuple__detail__tuple_tie" { header "fusion/tuple/detail/tuple_tie.hpp" export * }
  module "fusion__tuple" { header "fusion/tuple.hpp" export * }
  module "fusion__tuple__make_tuple" { header "fusion/tuple/make_tuple.hpp" export * }
  module "fusion__tuple__tuple_fwd" { header "fusion/tuple/tuple_fwd.hpp" export * }
  module "fusion__tuple__tuple" { header "fusion/tuple/tuple.hpp" export * }
  module "fusion__tuple__tuple_tie" { header "fusion/tuple/tuple_tie.hpp" export * }
  module "fusion__view__detail__strictest_traversal" { header "fusion/view/detail/strictest_traversal.hpp" export * }
  module "fusion__view__filter_view__detail__deref_impl" { header "fusion/view/filter_view/detail/deref_impl.hpp" export * }
  module "fusion__view__filter_view__detail__next_impl" { header "fusion/view/filter_view/detail/next_impl.hpp" export * }
  module "fusion__view__filter_view__detail__size_impl" { header "fusion/view/filter_view/detail/size_impl.hpp" export * }
  module "fusion__view__filter_view__detail__value_of_impl" { header "fusion/view/filter_view/detail/value_of_impl.hpp" export * }
  module "fusion__view__filter_view__filter_view" { header "fusion/view/filter_view/filter_view.hpp" export * }
  module "fusion__view__filter_view__filter_view_iterator" { header "fusion/view/filter_view/filter_view_iterator.hpp" export * }
  module "fusion__view__filter_view" { header "fusion/view/filter_view.hpp" export * }
  module "fusion__view__flatten_view__flatten_view" { header "fusion/view/flatten_view/flatten_view.hpp" export * }
  module "fusion__view__flatten_view__flatten_view_iterator" { header "fusion/view/flatten_view/flatten_view_iterator.hpp" export * }
  module "fusion__view__flatten_view" { header "fusion/view/flatten_view.hpp" export * }
  module "fusion__view" { header "fusion/view.hpp" export * }
  module "fusion__view__iterator_range__detail__at_impl" { header "fusion/view/iterator_range/detail/at_impl.hpp" export * }
  module "fusion__view__iterator_range__detail__begin_impl" { header "fusion/view/iterator_range/detail/begin_impl.hpp" export * }
  module "fusion__view__iterator_range__detail__end_impl" { header "fusion/view/iterator_range/detail/end_impl.hpp" export * }
  module "fusion__view__iterator_range__detail__is_segmented_impl" { header "fusion/view/iterator_range/detail/is_segmented_impl.hpp" export * }
  module "fusion__view__iterator_range__detail__segments_impl" { header "fusion/view/iterator_range/detail/segments_impl.hpp" export * }
  module "fusion__view__iterator_range__detail__size_impl" { header "fusion/view/iterator_range/detail/size_impl.hpp" export * }
  module "fusion__view__iterator_range__detail__value_at_impl" { header "fusion/view/iterator_range/detail/value_at_impl.hpp" export * }
  module "fusion__view__iterator_range" { header "fusion/view/iterator_range.hpp" export * }
  module "fusion__view__iterator_range__iterator_range" { header "fusion/view/iterator_range/iterator_range.hpp" export * }
  module "fusion__view__joint_view__detail__begin_impl" { header "fusion/view/joint_view/detail/begin_impl.hpp" export * }
  module "fusion__view__joint_view__detail__deref_impl" { header "fusion/view/joint_view/detail/deref_impl.hpp" export * }
  module "fusion__view__joint_view__detail__end_impl" { header "fusion/view/joint_view/detail/end_impl.hpp" export * }
  module "fusion__view__joint_view__detail__next_impl" { header "fusion/view/joint_view/detail/next_impl.hpp" export * }
  module "fusion__view__joint_view__detail__value_of_impl" { header "fusion/view/joint_view/detail/value_of_impl.hpp" export * }
  module "fusion__view__joint_view" { header "fusion/view/joint_view.hpp" export * }
  module "fusion__view__joint_view__joint_view_fwd" { header "fusion/view/joint_view/joint_view_fwd.hpp" export * }
  module "fusion__view__joint_view__joint_view" { header "fusion/view/joint_view/joint_view.hpp" export * }
  module "fusion__view__joint_view__joint_view_iterator" { header "fusion/view/joint_view/joint_view_iterator.hpp" export * }
  module "fusion__view__nview__detail__advance_impl" { header "fusion/view/nview/detail/advance_impl.hpp" export * }
  module "fusion__view__nview__detail__at_impl" { header "fusion/view/nview/detail/at_impl.hpp" export * }
  module "fusion__view__nview__detail__begin_impl" { header "fusion/view/nview/detail/begin_impl.hpp" export * }
  module "fusion__view__nview__detail__deref_impl" { header "fusion/view/nview/detail/deref_impl.hpp" export * }
  module "fusion__view__nview__detail__distance_impl" { header "fusion/view/nview/detail/distance_impl.hpp" export * }
  module "fusion__view__nview__detail__end_impl" { header "fusion/view/nview/detail/end_impl.hpp" export * }
  module "fusion__view__nview__detail__equal_to_impl" { header "fusion/view/nview/detail/equal_to_impl.hpp" export * }
  module "fusion__view__nview__detail__next_impl" { header "fusion/view/nview/detail/next_impl.hpp" export * }
  module "fusion__view__nview__detail__prior_impl" { header "fusion/view/nview/detail/prior_impl.hpp" export * }
  module "fusion__view__nview__detail__size_impl" { header "fusion/view/nview/detail/size_impl.hpp" export * }
  module "fusion__view__nview__detail__value_at_impl" { header "fusion/view/nview/detail/value_at_impl.hpp" export * }
  module "fusion__view__nview__detail__value_of_impl" { header "fusion/view/nview/detail/value_of_impl.hpp" export * }
  module "fusion__view__nview" { header "fusion/view/nview.hpp" export * }
  module "fusion__view__nview__nview" { header "fusion/view/nview/nview.hpp" export * }
  module "fusion__view__nview__nview_iterator" { header "fusion/view/nview/nview_iterator.hpp" export * }
  module "fusion__view__repetitive_view__detail__begin_impl" { header "fusion/view/repetitive_view/detail/begin_impl.hpp" export * }
  module "fusion__view__repetitive_view__detail__deref_impl" { header "fusion/view/repetitive_view/detail/deref_impl.hpp" export * }
  module "fusion__view__repetitive_view__detail__end_impl" { header "fusion/view/repetitive_view/detail/end_impl.hpp" export * }
  module "fusion__view__repetitive_view__detail__next_impl" { header "fusion/view/repetitive_view/detail/next_impl.hpp" export * }
  module "fusion__view__repetitive_view__detail__value_of_impl" { header "fusion/view/repetitive_view/detail/value_of_impl.hpp" export * }
  module "fusion__view__repetitive_view" { header "fusion/view/repetitive_view.hpp" export * }
  module "fusion__view__repetitive_view__repetitive_view_fwd" { header "fusion/view/repetitive_view/repetitive_view_fwd.hpp" export * }
  module "fusion__view__repetitive_view__repetitive_view" { header "fusion/view/repetitive_view/repetitive_view.hpp" export * }
  module "fusion__view__repetitive_view__repetitive_view_iterator" { header "fusion/view/repetitive_view/repetitive_view_iterator.hpp" export * }
  module "fusion__view__reverse_view__detail__advance_impl" { header "fusion/view/reverse_view/detail/advance_impl.hpp" export * }
  module "fusion__view__reverse_view__detail__deref_impl" { header "fusion/view/reverse_view/detail/deref_impl.hpp" export * }
  module "fusion__view__reverse_view__detail__distance_impl" { header "fusion/view/reverse_view/detail/distance_impl.hpp" export * }
  module "fusion__view__reverse_view__detail__next_impl" { header "fusion/view/reverse_view/detail/next_impl.hpp" export * }
  module "fusion__view__reverse_view__detail__prior_impl" { header "fusion/view/reverse_view/detail/prior_impl.hpp" export * }
  module "fusion__view__reverse_view__detail__value_of_impl" { header "fusion/view/reverse_view/detail/value_of_impl.hpp" export * }
  module "fusion__view__reverse_view" { header "fusion/view/reverse_view.hpp" export * }
  module "fusion__view__reverse_view__reverse_view" { header "fusion/view/reverse_view/reverse_view.hpp" export * }
  module "fusion__view__reverse_view__reverse_view_iterator" { header "fusion/view/reverse_view/reverse_view_iterator.hpp" export * }
  module "fusion__view__single_view__detail__advance_impl" { header "fusion/view/single_view/detail/advance_impl.hpp" export * }
  module "fusion__view__single_view__detail__at_impl" { header "fusion/view/single_view/detail/at_impl.hpp" export * }
  module "fusion__view__single_view__detail__begin_impl" { header "fusion/view/single_view/detail/begin_impl.hpp" export * }
  module "fusion__view__single_view__detail__deref_impl" { header "fusion/view/single_view/detail/deref_impl.hpp" export * }
  module "fusion__view__single_view__detail__distance_impl" { header "fusion/view/single_view/detail/distance_impl.hpp" export * }
  module "fusion__view__single_view__detail__end_impl" { header "fusion/view/single_view/detail/end_impl.hpp" export * }
  module "fusion__view__single_view__detail__equal_to_impl" { header "fusion/view/single_view/detail/equal_to_impl.hpp" export * }
  module "fusion__view__single_view__detail__next_impl" { header "fusion/view/single_view/detail/next_impl.hpp" export * }
  module "fusion__view__single_view__detail__prior_impl" { header "fusion/view/single_view/detail/prior_impl.hpp" export * }
  module "fusion__view__single_view__detail__value_at_impl" { header "fusion/view/single_view/detail/value_at_impl.hpp" export * }
  module "fusion__view__single_view__detail__value_of_impl" { header "fusion/view/single_view/detail/value_of_impl.hpp" export * }
  module "fusion__view__single_view" { header "fusion/view/single_view.hpp" export * }
  module "fusion__view__single_view__single_view" { header "fusion/view/single_view/single_view.hpp" export * }
  module "fusion__view__single_view__single_view_iterator" { header "fusion/view/single_view/single_view_iterator.hpp" export * }
  module "fusion__view__transform_view__detail__advance_impl" { header "fusion/view/transform_view/detail/advance_impl.hpp" export * }
  module "fusion__view__transform_view__detail__at_impl" { header "fusion/view/transform_view/detail/at_impl.hpp" export * }
  module "fusion__view__transform_view__detail__begin_impl" { header "fusion/view/transform_view/detail/begin_impl.hpp" export * }
  module "fusion__view__transform_view__detail__deref_impl" { header "fusion/view/transform_view/detail/deref_impl.hpp" export * }
  module "fusion__view__transform_view__detail__distance_impl" { header "fusion/view/transform_view/detail/distance_impl.hpp" export * }
  module "fusion__view__transform_view__detail__end_impl" { header "fusion/view/transform_view/detail/end_impl.hpp" export * }
  module "fusion__view__transform_view__detail__equal_to_impl" { header "fusion/view/transform_view/detail/equal_to_impl.hpp" export * }
  module "fusion__view__transform_view__detail__next_impl" { header "fusion/view/transform_view/detail/next_impl.hpp" export * }
  module "fusion__view__transform_view__detail__prior_impl" { header "fusion/view/transform_view/detail/prior_impl.hpp" export * }
  module "fusion__view__transform_view__detail__value_at_impl" { header "fusion/view/transform_view/detail/value_at_impl.hpp" export * }
  module "fusion__view__transform_view__detail__value_of_impl" { header "fusion/view/transform_view/detail/value_of_impl.hpp" export * }
  module "fusion__view__transform_view" { header "fusion/view/transform_view.hpp" export * }
  module "fusion__view__transform_view__transform_view_fwd" { header "fusion/view/transform_view/transform_view_fwd.hpp" export * }
  module "fusion__view__transform_view__transform_view" { header "fusion/view/transform_view/transform_view.hpp" export * }
  module "fusion__view__transform_view__transform_view_iterator" { header "fusion/view/transform_view/transform_view_iterator.hpp" export * }
  module "fusion__view__zip_view__detail__advance_impl" { header "fusion/view/zip_view/detail/advance_impl.hpp" export * }
  module "fusion__view__zip_view__detail__at_impl" { header "fusion/view/zip_view/detail/at_impl.hpp" export * }
  module "fusion__view__zip_view__detail__begin_impl" { header "fusion/view/zip_view/detail/begin_impl.hpp" export * }
  module "fusion__view__zip_view__detail__deref_impl" { header "fusion/view/zip_view/detail/deref_impl.hpp" export * }
  module "fusion__view__zip_view__detail__distance_impl" { header "fusion/view/zip_view/detail/distance_impl.hpp" export * }
  module "fusion__view__zip_view__detail__equal_to_impl" { header "fusion/view/zip_view/detail/equal_to_impl.hpp" export * }
  module "fusion__view__zip_view__detail__next_impl" { header "fusion/view/zip_view/detail/next_impl.hpp" export * }
  module "fusion__view__zip_view__detail__prior_impl" { header "fusion/view/zip_view/detail/prior_impl.hpp" export * }
  module "fusion__view__zip_view__detail__size_impl" { header "fusion/view/zip_view/detail/size_impl.hpp" export * }
  module "fusion__view__zip_view__detail__value_at_impl" { header "fusion/view/zip_view/detail/value_at_impl.hpp" export * }
  module "fusion__view__zip_view__detail__value_of_impl" { header "fusion/view/zip_view/detail/value_of_impl.hpp" export * }
  module "fusion__view__zip_view" { header "fusion/view/zip_view.hpp" export * }
  module "fusion__view__zip_view__zip_view" { header "fusion/view/zip_view/zip_view.hpp" export * }
  module "fusion__view__zip_view__zip_view_iterator_fwd" { header "fusion/view/zip_view/zip_view_iterator_fwd.hpp" export * }
  module "fusion__view__zip_view__zip_view_iterator" { header "fusion/view/zip_view/zip_view_iterator.hpp" export * }
} */
module boost_generator_iterator { export * module "generator_iterator" { header "generator_iterator.hpp" export * } }
module boost_geometry {
  export *
  module "geometry__algorithms__append" { header "geometry/algorithms/append.hpp" export * }
  module "geometry__algorithms__area" { header "geometry/algorithms/area.hpp" export * }
  module "geometry__algorithms__assign" { header "geometry/algorithms/assign.hpp" export * }
  module "geometry__algorithms__buffer" { header "geometry/algorithms/buffer.hpp" export * }
  module "geometry__algorithms__centroid" { header "geometry/algorithms/centroid.hpp" export * }
  module "geometry__algorithms__clear" { header "geometry/algorithms/clear.hpp" export * }
  module "geometry__algorithms__comparable_distance" { header "geometry/algorithms/comparable_distance.hpp" export * }
  module "geometry__algorithms__convert" { header "geometry/algorithms/convert.hpp" export * }
  module "geometry__algorithms__convex_hull" { header "geometry/algorithms/convex_hull.hpp" export * }
  module "geometry__algorithms__correct" { header "geometry/algorithms/correct.hpp" export * }
  module "geometry__algorithms__covered_by" { header "geometry/algorithms/covered_by.hpp" export * }
  module "geometry__algorithms__detail__as_range" { header "geometry/algorithms/detail/as_range.hpp" export * }
  module "geometry__algorithms__detail__assign_box_corners" { header "geometry/algorithms/detail/assign_box_corners.hpp" export * }
  module "geometry__algorithms__detail__assign_indexed_point" { header "geometry/algorithms/detail/assign_indexed_point.hpp" export * }
  module "geometry__algorithms__detail__assign_values" { header "geometry/algorithms/detail/assign_values.hpp" export * }
  module "geometry__algorithms__detail__azimuth" { header "geometry/algorithms/detail/azimuth.hpp" export * }
  module "geometry__algorithms__detail__buffer__buffered_piece_collection" { header "geometry/algorithms/detail/buffer/buffered_piece_collection.hpp" export * }
  module "geometry__algorithms__detail__buffer__buffered_ring" { header "geometry/algorithms/detail/buffer/buffered_ring.hpp" export * }
  module "geometry__algorithms__detail__buffer__buffer_inserter" { header "geometry/algorithms/detail/buffer/buffer_inserter.hpp" export * }
  module "geometry__algorithms__detail__buffer__line_line_intersection" { header "geometry/algorithms/detail/buffer/line_line_intersection.hpp" export * }
  module "geometry__algorithms__detail__buffer__turn_in_piece_visitor" { header "geometry/algorithms/detail/buffer/turn_in_piece_visitor.hpp" export * }
  module "geometry__algorithms__detail__calculate_null" { header "geometry/algorithms/detail/calculate_null.hpp" export * }
  module "geometry__algorithms__detail__calculate_sum" { header "geometry/algorithms/detail/calculate_sum.hpp" export * }
  module "geometry__algorithms__detail__centroid__translating_transformer" { header "geometry/algorithms/detail/centroid/translating_transformer.hpp" export * }
  module "geometry__algorithms__detail__check_iterator_range" { header "geometry/algorithms/detail/check_iterator_range.hpp" export * }
  module "geometry__algorithms__detail__closest_feature__point_to_range" { header "geometry/algorithms/detail/closest_feature/point_to_range.hpp" export * }
  module "geometry__algorithms__detail__comparable_distance__interface" { header "geometry/algorithms/detail/comparable_distance/interface.hpp" export * }
  module "geometry__algorithms__detail__convert_indexed_to_indexed" { header "geometry/algorithms/detail/convert_indexed_to_indexed.hpp" export * }
  module "geometry__algorithms__detail__convert_point_to_point" { header "geometry/algorithms/detail/convert_point_to_point.hpp" export * }
  module "geometry__algorithms__detail__counting" { header "geometry/algorithms/detail/counting.hpp" export * }
  module "geometry__algorithms__detail__course" { header "geometry/algorithms/detail/course.hpp" export * }
  module "geometry__algorithms__detail__direction_code" { header "geometry/algorithms/detail/direction_code.hpp" export * }
  module "geometry__algorithms__detail__disjoint__areal_areal" { header "geometry/algorithms/detail/disjoint/areal_areal.hpp" export * }
  module "geometry__algorithms__detail__disjoint__implementation" { header "geometry/algorithms/detail/disjoint/implementation.hpp" export * }
  module "geometry__algorithms__detail__disjoint__linear_linear" { header "geometry/algorithms/detail/disjoint/linear_linear.hpp" export * }
  module "geometry__algorithms__detail__disjoint__linear_segment_or_box" { header "geometry/algorithms/detail/disjoint/linear_segment_or_box.hpp" export * }
  module "geometry__algorithms__detail__disjoint__point_box" { header "geometry/algorithms/detail/disjoint/point_box.hpp" export * }
  module "geometry__algorithms__detail__disjoint__point_geometry" { header "geometry/algorithms/detail/disjoint/point_geometry.hpp" export * }
  module "geometry__algorithms__detail__disjoint__point_point" { header "geometry/algorithms/detail/disjoint/point_point.hpp" export * }
  module "geometry__algorithms__detail__distance__default_strategies" { header "geometry/algorithms/detail/distance/default_strategies.hpp" export * }
  module "geometry__algorithms__detail__distance__interface" { header "geometry/algorithms/detail/distance/interface.hpp" export * }
  module "geometry__algorithms__detail__distance__is_comparable" { header "geometry/algorithms/detail/distance/is_comparable.hpp" export * }
  module "geometry__algorithms__detail__distance__iterator_selector" { header "geometry/algorithms/detail/distance/iterator_selector.hpp" export * }
  module "geometry__algorithms__detail__envelope__box" { header "geometry/algorithms/detail/envelope/box.hpp" export * }
  module "geometry__algorithms__detail__envelope__implementation" { header "geometry/algorithms/detail/envelope/implementation.hpp" export * }
  module "geometry__algorithms__detail__envelope__initialize" { header "geometry/algorithms/detail/envelope/initialize.hpp" export * }
  module "geometry__algorithms__detail__envelope__interface" { header "geometry/algorithms/detail/envelope/interface.hpp" export * }
  module "geometry__algorithms__detail__envelope__intersects_antimeridian" { header "geometry/algorithms/detail/envelope/intersects_antimeridian.hpp" export * }
  module "geometry__algorithms__detail__envelope__multipoint" { header "geometry/algorithms/detail/envelope/multipoint.hpp" export * }
  module "geometry__algorithms__detail__envelope__point" { header "geometry/algorithms/detail/envelope/point.hpp" export * }
  module "geometry__algorithms__detail__envelope__segment" { header "geometry/algorithms/detail/envelope/segment.hpp" export * }
  module "geometry__algorithms__detail__envelope__transform_units" { header "geometry/algorithms/detail/envelope/transform_units.hpp" export * }
  module "geometry__algorithms__detail__equals__collect_vectors" { header "geometry/algorithms/detail/equals/collect_vectors.hpp" export * }
  module "geometry__algorithms__detail__equals__point_point" { header "geometry/algorithms/detail/equals/point_point.hpp" export * }
  module "geometry__algorithms__detail__expand__box" { header "geometry/algorithms/detail/expand/box.hpp" export * }
  module "geometry__algorithms__detail__expand_by_epsilon" { header "geometry/algorithms/detail/expand_by_epsilon.hpp" export * }
  module "geometry__algorithms__detail__expand__implementation" { header "geometry/algorithms/detail/expand/implementation.hpp" export * }
  module "geometry__algorithms__detail__expand__interface" { header "geometry/algorithms/detail/expand/interface.hpp" export * }
  module "geometry__algorithms__detail__expand__point" { header "geometry/algorithms/detail/expand/point.hpp" export * }
  module "geometry__algorithms__detail__expand__segment" { header "geometry/algorithms/detail/expand/segment.hpp" export * }
  module "geometry__algorithms__detail__for_each_range" { header "geometry/algorithms/detail/for_each_range.hpp" export * }
  module "geometry__algorithms__detail__has_self_intersections" { header "geometry/algorithms/detail/has_self_intersections.hpp" export * }
  module "geometry__algorithms__detail__interior_iterator" { header "geometry/algorithms/detail/interior_iterator.hpp" export * }
  module "geometry__algorithms__detail__intersection__box_box" { header "geometry/algorithms/detail/intersection/box_box.hpp" export * }
  module "geometry__algorithms__detail__intersection__implementation" { header "geometry/algorithms/detail/intersection/implementation.hpp" export * }
  module "geometry__algorithms__detail__intersection__interface" { header "geometry/algorithms/detail/intersection/interface.hpp" export * }
  module "geometry__algorithms__detail__intersection__multi" { header "geometry/algorithms/detail/intersection/multi.hpp" export * }
  module "geometry__algorithms__detail__is_simple__always_simple" { header "geometry/algorithms/detail/is_simple/always_simple.hpp" export * }
  module "geometry__algorithms__detail__is_simple__debug_print_boundary_points" { header "geometry/algorithms/detail/is_simple/debug_print_boundary_points.hpp" export * }
  module "geometry__algorithms__detail__is_simple__failure_policy" { header "geometry/algorithms/detail/is_simple/failure_policy.hpp" export * }
  module "geometry__algorithms__detail__is_simple__interface" { header "geometry/algorithms/detail/is_simple/interface.hpp" export * }
  module "geometry__algorithms__detail__is_simple__linear" { header "geometry/algorithms/detail/is_simple/linear.hpp" export * }
  module "geometry__algorithms__detail__is_valid__box" { header "geometry/algorithms/detail/is_valid/box.hpp" export * }
  module "geometry__algorithms__detail__is_valid__debug_print_turns" { header "geometry/algorithms/detail/is_valid/debug_print_turns.hpp" export * }
  module "geometry__algorithms__detail__is_valid__has_spikes" { header "geometry/algorithms/detail/is_valid/has_spikes.hpp" export * }
  module "geometry__algorithms__detail__is_valid__implementation" { header "geometry/algorithms/detail/is_valid/implementation.hpp" export * }
  module "geometry__algorithms__detail__is_valid__is_acceptable_turn" { header "geometry/algorithms/detail/is_valid/is_acceptable_turn.hpp" export * }
  module "geometry__algorithms__detail__is_valid__linear" { header "geometry/algorithms/detail/is_valid/linear.hpp" export * }
  module "geometry__algorithms__detail__is_valid__pointlike" { header "geometry/algorithms/detail/is_valid/pointlike.hpp" export * }
  module "geometry__algorithms__detail__is_valid__segment" { header "geometry/algorithms/detail/is_valid/segment.hpp" export * }
  module "geometry__algorithms__detail__max_interval_gap" { header "geometry/algorithms/detail/max_interval_gap.hpp" export * }
  module "geometry__algorithms__detail__multi_modify" { header "geometry/algorithms/detail/multi_modify.hpp" export * }
  module "geometry__algorithms__detail__multi_modify_with_predicate" { header "geometry/algorithms/detail/multi_modify_with_predicate.hpp" export * }
  module "geometry__algorithms__detail__multi_sum" { header "geometry/algorithms/detail/multi_sum.hpp" export * }
  module "geometry__algorithms__detail__normalize" { header "geometry/algorithms/detail/normalize.hpp" export * }
  module "geometry__algorithms__detail__not" { header "geometry/algorithms/detail/not.hpp" export * }
  module "geometry__algorithms__detail__num_distinct_consecutive_points" { header "geometry/algorithms/detail/num_distinct_consecutive_points.hpp" export * }
  module "geometry__algorithms__detail__overlay__append_no_duplicates" { header "geometry/algorithms/detail/overlay/append_no_duplicates.hpp" export * }
  module "geometry__algorithms__detail__overlay__append_no_dups_or_spikes" { header "geometry/algorithms/detail/overlay/append_no_dups_or_spikes.hpp" export * }
  module "geometry__algorithms__detail__overlay__assign_parents" { header "geometry/algorithms/detail/overlay/assign_parents.hpp" export * }
  module "geometry__algorithms__detail__overlay__backtrack_check_si" { header "geometry/algorithms/detail/overlay/backtrack_check_si.hpp" export * }
  module "geometry__algorithms__detail__overlay__clip_linestring" { header "geometry/algorithms/detail/overlay/clip_linestring.hpp" export * }
  module "geometry__algorithms__detail__overlay__cluster_info" { header "geometry/algorithms/detail/overlay/cluster_info.hpp" export * }
  module "geometry__algorithms__detail__overlay__debug_turn_info" { header "geometry/algorithms/detail/overlay/debug_turn_info.hpp" export * }
  module "geometry__algorithms__detail__overlay__do_reverse" { header "geometry/algorithms/detail/overlay/do_reverse.hpp" export * }
  module "geometry__algorithms__detail__overlay__enrich_intersection_points" { header "geometry/algorithms/detail/overlay/enrich_intersection_points.hpp" export * }
  module "geometry__algorithms__detail__overlay__enrichment_info" { header "geometry/algorithms/detail/overlay/enrichment_info.hpp" export * }
  module "geometry__algorithms__detail__overlay__get_intersection_points" { header "geometry/algorithms/detail/overlay/get_intersection_points.hpp" export * }
  module "geometry__algorithms__detail__overlay__get_relative_order" { header "geometry/algorithms/detail/overlay/get_relative_order.hpp" export * }
  module "geometry__algorithms__detail__overlay__get_ring" { header "geometry/algorithms/detail/overlay/get_ring.hpp" export * }
  module "geometry__algorithms__detail__overlay__get_turns" { header "geometry/algorithms/detail/overlay/get_turns.hpp" export * }
  module "geometry__algorithms__detail__overlay__inconsistent_turns_exception" { header "geometry/algorithms/detail/overlay/inconsistent_turns_exception.hpp" export * }
  module "geometry__algorithms__detail__overlay__intersection_box_box" { header "geometry/algorithms/detail/overlay/intersection_box_box.hpp" export * }
  module "geometry__algorithms__detail__overlay__intersection_insert" { header "geometry/algorithms/detail/overlay/intersection_insert.hpp" export * }
  module "geometry__algorithms__detail__overlay__linear_linear" { header "geometry/algorithms/detail/overlay/linear_linear.hpp" export * }
  module "geometry__algorithms__detail__overlay__overlay" { header "geometry/algorithms/detail/overlay/overlay.hpp" export * }
  module "geometry__algorithms__detail__overlay__overlay_type" { header "geometry/algorithms/detail/overlay/overlay_type.hpp" export * }
  module "geometry__algorithms__detail__overlay__pointlike_linear" { header "geometry/algorithms/detail/overlay/pointlike_linear.hpp" export * }
  module "geometry__algorithms__detail__overlay__pointlike_pointlike" { header "geometry/algorithms/detail/overlay/pointlike_pointlike.hpp" export * }
  module "geometry__algorithms__detail__overlay__ring_properties" { header "geometry/algorithms/detail/overlay/ring_properties.hpp" export * }
  module "geometry__algorithms__detail__overlay__segment_identifier" { header "geometry/algorithms/detail/overlay/segment_identifier.hpp" export * }
  module "geometry__algorithms__detail__overlay__select_rings" { header "geometry/algorithms/detail/overlay/select_rings.hpp" export * }
  module "geometry__algorithms__detail__overlay__self_turn_points" { header "geometry/algorithms/detail/overlay/self_turn_points.hpp" export * }
  module "geometry__algorithms__detail__overlay__traversal_info" { header "geometry/algorithms/detail/overlay/traversal_info.hpp" export * }
  module "geometry__algorithms__detail__overlay__turn_info" { header "geometry/algorithms/detail/overlay/turn_info.hpp" export * }
  module "geometry__algorithms__detail__overlay__visit_info" { header "geometry/algorithms/detail/overlay/visit_info.hpp" export * }
  module "geometry__algorithms__detail__partition" { header "geometry/algorithms/detail/partition.hpp" export * }
  module "geometry__algorithms__detail__point_is_spike_or_equal" { header "geometry/algorithms/detail/point_is_spike_or_equal.hpp" export * }
  module "geometry__algorithms__detail__point_on_border" { header "geometry/algorithms/detail/point_on_border.hpp" export * }
  module "geometry__algorithms__detail__recalculate" { header "geometry/algorithms/detail/recalculate.hpp" export * }
  module "geometry__algorithms__detail__relate__point_point" { header "geometry/algorithms/detail/relate/point_point.hpp" export * }
  module "geometry__algorithms__detail__relate__turns" { header "geometry/algorithms/detail/relate/turns.hpp" export * }
  module "geometry__algorithms__detail__ring_identifier" { header "geometry/algorithms/detail/ring_identifier.hpp" export * }
  module "geometry__algorithms__detail__sections__range_by_section" { header "geometry/algorithms/detail/sections/range_by_section.hpp" export * }
  module "geometry__algorithms__detail__sections__sectionalize" { header "geometry/algorithms/detail/sections/sectionalize.hpp" export * }
  module "geometry__algorithms__detail__sections__section_functions" { header "geometry/algorithms/detail/sections/section_functions.hpp" export * }
  module "geometry__algorithms__detail__signed_size_type" { header "geometry/algorithms/detail/signed_size_type.hpp" export * }
  module "geometry__algorithms__detail__single_geometry" { header "geometry/algorithms/detail/single_geometry.hpp" export * }
  module "geometry__algorithms__detail__sweep" { header "geometry/algorithms/detail/sweep.hpp" export * }
  module "geometry__algorithms__detail__throw_on_empty_input" { header "geometry/algorithms/detail/throw_on_empty_input.hpp" export * }
  module "geometry__algorithms__detail__turns__compare_turns" { header "geometry/algorithms/detail/turns/compare_turns.hpp" export * }
  module "geometry__algorithms__detail__turns__debug_turn" { header "geometry/algorithms/detail/turns/debug_turn.hpp" export * }
  module "geometry__algorithms__detail__turns__filter_continue_turns" { header "geometry/algorithms/detail/turns/filter_continue_turns.hpp" export * }
  module "geometry__algorithms__detail__turns__print_turns" { header "geometry/algorithms/detail/turns/print_turns.hpp" export * }
  module "geometry__algorithms__detail__turns__remove_duplicate_turns" { header "geometry/algorithms/detail/turns/remove_duplicate_turns.hpp" export * }
  module "geometry__algorithms__detail__within__point_in_geometry" { header "geometry/algorithms/detail/within/point_in_geometry.hpp" export * }
  module "geometry__algorithms__detail__within__within_no_turns" { header "geometry/algorithms/detail/within/within_no_turns.hpp" export * }
  module "geometry__algorithms__difference" { header "geometry/algorithms/difference.hpp" export * }
  module "geometry__algorithms__dispatch__envelope" { header "geometry/algorithms/dispatch/envelope.hpp" export * }
  module "geometry__algorithms__dispatch__is_simple" { header "geometry/algorithms/dispatch/is_simple.hpp" export * }
  module "geometry__algorithms__dispatch__is_valid" { header "geometry/algorithms/dispatch/is_valid.hpp" export * }
  module "geometry__algorithms__distance" { header "geometry/algorithms/distance.hpp" export * }
  module "geometry__algorithms__envelope" { header "geometry/algorithms/envelope.hpp" export * }
  module "geometry__algorithms__equals" { header "geometry/algorithms/equals.hpp" export * }
  module "geometry__algorithms__expand" { header "geometry/algorithms/expand.hpp" export * }
  module "geometry__algorithms__for_each" { header "geometry/algorithms/for_each.hpp" export * }
  module "geometry__algorithms__intersection" { header "geometry/algorithms/intersection.hpp" export * }
  module "geometry__algorithms__intersects" { header "geometry/algorithms/intersects.hpp" export * }
  module "geometry__algorithms__is_convex" { header "geometry/algorithms/is_convex.hpp" export * }
  module "geometry__algorithms__is_empty" { header "geometry/algorithms/is_empty.hpp" export * }
  module "geometry__algorithms__is_simple" { header "geometry/algorithms/is_simple.hpp" export * }
  module "geometry__algorithms__length" { header "geometry/algorithms/length.hpp" export * }
  module "geometry__algorithms__make" { header "geometry/algorithms/make.hpp" export * }
  module "geometry__algorithms__not_implemented" { header "geometry/algorithms/not_implemented.hpp" export * }
  module "geometry__algorithms__num_geometries" { header "geometry/algorithms/num_geometries.hpp" export * }
  module "geometry__algorithms__num_interior_rings" { header "geometry/algorithms/num_interior_rings.hpp" export * }
  module "geometry__algorithms__num_points" { header "geometry/algorithms/num_points.hpp" export * }
  module "geometry__algorithms__num_segments" { header "geometry/algorithms/num_segments.hpp" export * }
  module "geometry__algorithms__overlaps" { header "geometry/algorithms/overlaps.hpp" export * }
  module "geometry__algorithms__perimeter" { header "geometry/algorithms/perimeter.hpp" export * }
  module "geometry__algorithms__remove_spikes" { header "geometry/algorithms/remove_spikes.hpp" export * }
  module "geometry__algorithms__reverse" { header "geometry/algorithms/reverse.hpp" export * }
  module "geometry__algorithms__simplify" { header "geometry/algorithms/simplify.hpp" export * }
  module "geometry__algorithms__sym_difference" { header "geometry/algorithms/sym_difference.hpp" export * }
  module "geometry__algorithms__touches" { header "geometry/algorithms/touches.hpp" export * }
  module "geometry__algorithms__transform" { header "geometry/algorithms/transform.hpp" export * }
  module "geometry__algorithms__union" { header "geometry/algorithms/union.hpp" export * }
  module "geometry__algorithms__unique" { header "geometry/algorithms/unique.hpp" export * }
  module "geometry__algorithms__validity_failure_type" { header "geometry/algorithms/validity_failure_type.hpp" export * }
  module "geometry__algorithms__within" { header "geometry/algorithms/within.hpp" export * }
  module "geometry__arithmetic__arithmetic" { header "geometry/arithmetic/arithmetic.hpp" export * }
  module "geometry__arithmetic__cross_product" { header "geometry/arithmetic/cross_product.hpp" export * }
  module "geometry__arithmetic__determinant" { header "geometry/arithmetic/determinant.hpp" export * }
  module "geometry__arithmetic__dot_product" { header "geometry/arithmetic/dot_product.hpp" export * }
  module "geometry__arithmetic__normalize" { header "geometry/arithmetic/normalize.hpp" export * }
  module "geometry__core__access" { header "geometry/core/access.hpp" export * }
  module "geometry__core__assert" { header "geometry/core/assert.hpp" export * }
  module "geometry__core__closure" { header "geometry/core/closure.hpp" export * }
  module "geometry__core__coordinate_dimension" { header "geometry/core/coordinate_dimension.hpp" export * }
  module "geometry__core__coordinate_system" { header "geometry/core/coordinate_system.hpp" export * }
  module "geometry__core__coordinate_type" { header "geometry/core/coordinate_type.hpp" export * }
  module "geometry__core__cs" { header "geometry/core/cs.hpp" export * }
  module "geometry__core__exception" { header "geometry/core/exception.hpp" export * }
  module "geometry__core__exterior_ring" { header "geometry/core/exterior_ring.hpp" export * }
  module "geometry__core__geometry_id" { header "geometry/core/geometry_id.hpp" export * }
  module "geometry__core__interior_rings" { header "geometry/core/interior_rings.hpp" export * }
  module "geometry__core__interior_type" { header "geometry/core/interior_type.hpp" export * }
  module "geometry__core__is_areal" { header "geometry/core/is_areal.hpp" export * }
  module "geometry__core__mutable_range" { header "geometry/core/mutable_range.hpp" export * }
  module "geometry__core__point_order" { header "geometry/core/point_order.hpp" export * }
  module "geometry__core__point_type" { header "geometry/core/point_type.hpp" export * }
  module "geometry__core__radian_access" { header "geometry/core/radian_access.hpp" export * }
  module "geometry__core__radius" { header "geometry/core/radius.hpp" export * }
  module "geometry__core__reverse_dispatch" { header "geometry/core/reverse_dispatch.hpp" export * }
  module "geometry__core__ring_type" { header "geometry/core/ring_type.hpp" export * }
  module "geometry__core__tag_cast" { header "geometry/core/tag_cast.hpp" export * }
  module "geometry__core__tag" { header "geometry/core/tag.hpp" export * }
  module "geometry__core__tags" { header "geometry/core/tags.hpp" export * }
  module "geometry__core__topological_dimension" { header "geometry/core/topological_dimension.hpp" export * }
  module "geometry__formulas__andoyer_inverse" { header "geometry/formulas/andoyer_inverse.hpp" export * }
  module "geometry__formulas__differential_quantities" { header "geometry/formulas/differential_quantities.hpp" export * }
  module "geometry__formulas__flattening" { header "geometry/formulas/flattening.hpp" export * }
  module "geometry__formulas__geographic" { header "geometry/formulas/geographic.hpp" export * }
  module "geometry__formulas__gnomonic_intersection" { header "geometry/formulas/gnomonic_intersection.hpp" export * }
  module "geometry__formulas__gnomonic_spheroid" { header "geometry/formulas/gnomonic_spheroid.hpp" export * }
  module "geometry__formulas__result_direct" { header "geometry/formulas/result_direct.hpp" export * }
  module "geometry__formulas__result_inverse" { header "geometry/formulas/result_inverse.hpp" export * }
  module "geometry__formulas__sjoberg_intersection" { header "geometry/formulas/sjoberg_intersection.hpp" export * }
  module "geometry__formulas__spherical" { header "geometry/formulas/spherical.hpp" export * }
  module "geometry__formulas__thomas_direct" { header "geometry/formulas/thomas_direct.hpp" export * }
  module "geometry__formulas__thomas_inverse" { header "geometry/formulas/thomas_inverse.hpp" export * }
  module "geometry__formulas__vertex_latitude" { header "geometry/formulas/vertex_latitude.hpp" export * }
  module "geometry__formulas__vincenty_direct" { header "geometry/formulas/vincenty_direct.hpp" export * }
  module "geometry__formulas__vincenty_inverse" { header "geometry/formulas/vincenty_inverse.hpp" export * }
  module "geometry__geometries__adapted__boost_array" { header "geometry/geometries/adapted/boost_array.hpp" export * }
  module "geometry__geometries__adapted__boost_fusion" { header "geometry/geometries/adapted/boost_fusion.hpp" export * }
  module "geometry__geometries__adapted__boost_polygon__box" { header "geometry/geometries/adapted/boost_polygon/box.hpp" export * }
  module "geometry__geometries__adapted__boost_polygon__hole_iterator" { header "geometry/geometries/adapted/boost_polygon/hole_iterator.hpp" export * }
  module "geometry__geometries__adapted__boost_polygon" { header "geometry/geometries/adapted/boost_polygon.hpp" export * }
  module "geometry__geometries__adapted__boost_polygon__point" { header "geometry/geometries/adapted/boost_polygon/point.hpp" export * }
  module "geometry__geometries__adapted__boost_polygon__ring" { header "geometry/geometries/adapted/boost_polygon/ring.hpp" export * }
  module "geometry__geometries__adapted__boost_range__adjacent_filtered" { header "geometry/geometries/adapted/boost_range/adjacent_filtered.hpp" export * }
  module "geometry__geometries__adapted__boost_range__filtered" { header "geometry/geometries/adapted/boost_range/filtered.hpp" export * }
  module "geometry__geometries__adapted__boost_range__reversed" { header "geometry/geometries/adapted/boost_range/reversed.hpp" export * }
  module "geometry__geometries__adapted__boost_range__sliced" { header "geometry/geometries/adapted/boost_range/sliced.hpp" export * }
  module "geometry__geometries__adapted__boost_range__strided" { header "geometry/geometries/adapted/boost_range/strided.hpp" export * }
  module "geometry__geometries__adapted__boost_range__uniqued" { header "geometry/geometries/adapted/boost_range/uniqued.hpp" export * }
  module "geometry__geometries__adapted__c_array" { header "geometry/geometries/adapted/c_array.hpp" export * }
  module "geometry__geometries__adapted__std_array" { header "geometry/geometries/adapted/std_array.hpp" export * }
  module "geometry__geometries__adapted__std_pair_as_segment" { header "geometry/geometries/adapted/std_pair_as_segment.hpp" export * }
  module "geometry__geometries__box" { header "geometry/geometries/box.hpp" export * }
  module "geometry__geometries__concepts__box_concept" { header "geometry/geometries/concepts/box_concept.hpp" export * }
  module "geometry__geometries__concepts__check" { header "geometry/geometries/concepts/check.hpp" export * }
  module "geometry__geometries__concepts__linestring_concept" { header "geometry/geometries/concepts/linestring_concept.hpp" export * }
  module "geometry__geometries__concepts__multi_linestring_concept" { header "geometry/geometries/concepts/multi_linestring_concept.hpp" export * }
  module "geometry__geometries__concepts__multi_polygon_concept" { header "geometry/geometries/concepts/multi_polygon_concept.hpp" export * }
  module "geometry__geometries__concepts__point_concept" { header "geometry/geometries/concepts/point_concept.hpp" export * }
  module "geometry__geometries__concepts__polygon_concept" { header "geometry/geometries/concepts/polygon_concept.hpp" export * }
  module "geometry__geometries__concepts__ring_concept" { header "geometry/geometries/concepts/ring_concept.hpp" export * }
  module "geometry__geometries__concepts__segment_concept" { header "geometry/geometries/concepts/segment_concept.hpp" export * }
  module "geometry__geometries__geometries" { header "geometry/geometries/geometries.hpp" export * }
  module "geometry__geometries__helper_geometry" { header "geometry/geometries/helper_geometry.hpp" export * }
  module "geometry__geometries__linestring" { header "geometry/geometries/linestring.hpp" export * }
  module "geometry__geometries__multi_linestring" { header "geometry/geometries/multi_linestring.hpp" export * }
  module "geometry__geometries__multi_point" { header "geometry/geometries/multi_point.hpp" export * }
  module "geometry__geometries__multi_polygon" { header "geometry/geometries/multi_polygon.hpp" export * }
  module "geometry__geometries__point" { header "geometry/geometries/point.hpp" export * }
  module "geometry__geometries__pointing_segment" { header "geometry/geometries/pointing_segment.hpp" export * }
  module "geometry__geometries__point_xy" { header "geometry/geometries/point_xy.hpp" export * }
  module "geometry__geometries__polygon" { header "geometry/geometries/polygon.hpp" export * }
  module "geometry__geometries__register__box" { header "geometry/geometries/register/box.hpp" export * }
  module "geometry__geometries__register__linestring" { header "geometry/geometries/register/linestring.hpp" export * }
  module "geometry__geometries__register__multi_linestring" { header "geometry/geometries/register/multi_linestring.hpp" export * }
  module "geometry__geometries__register__multi_point" { header "geometry/geometries/register/multi_point.hpp" export * }
  module "geometry__geometries__register__multi_polygon" { header "geometry/geometries/register/multi_polygon.hpp" export * }
  module "geometry__geometries__register__point" { header "geometry/geometries/register/point.hpp" export * }
  module "geometry__geometries__register__ring" { header "geometry/geometries/register/ring.hpp" export * }
  module "geometry__geometries__register__segment" { header "geometry/geometries/register/segment.hpp" export * }
  module "geometry__geometries__ring" { header "geometry/geometries/ring.hpp" export * }
  module "geometry__geometries__segment" { header "geometry/geometries/segment.hpp" export * }
  module "geometry__geometry" { header "geometry/geometry.hpp" export * }
  module "geometry" { header "geometry.hpp" export * }
  module "geometry__index__detail__algorithms__bounds" { header "geometry/index/detail/algorithms/bounds.hpp" export * }
  module "geometry__index__detail__algorithms__minmaxdist" { header "geometry/index/detail/algorithms/minmaxdist.hpp" export * }
  module "geometry__index__detail__algorithms__nth_element" { header "geometry/index/detail/algorithms/nth_element.hpp" export * }
  module "geometry__index__detail__algorithms__union_content" { header "geometry/index/detail/algorithms/union_content.hpp" export * }
  module "geometry__index__detail__assert" { header "geometry/index/detail/assert.hpp" export * }
  module "geometry__index__detail__bounded_view" { header "geometry/index/detail/bounded_view.hpp" export * }
  module "geometry__index__detail__config_begin" { header "geometry/index/detail/config_begin.hpp" export * }
  module "geometry__index__detail__config_end" { header "geometry/index/detail/config_end.hpp" export * }
  module "geometry__index__detail__exception" { header "geometry/index/detail/exception.hpp" export * }
  module "geometry__index__detail__is_bounding_geometry" { header "geometry/index/detail/is_bounding_geometry.hpp" export * }
  module "geometry__index__detail__is_indexable" { header "geometry/index/detail/is_indexable.hpp" export * }
  module "geometry__index__detail__meta" { header "geometry/index/detail/meta.hpp" export * }
  module "geometry__index__detail__rtree__node__pairs" { header "geometry/index/detail/rtree/node/pairs.hpp" export * }
  module "geometry__index__detail__rtree__node__variant_visitor" { header "geometry/index/detail/rtree/node/variant_visitor.hpp" export * }
  module "geometry__index__detail__rtree__node__weak_visitor" { header "geometry/index/detail/rtree/node/weak_visitor.hpp" export * }
  module "geometry__index__detail__rtree__options" { header "geometry/index/detail/rtree/options.hpp" export * }
  module "geometry__index__detail__rtree__utilities__view" { header "geometry/index/detail/rtree/utilities/view.hpp" export * }
  module "geometry__index__detail__tags" { header "geometry/index/detail/tags.hpp" export * }
  module "geometry__index__detail__varray_detail" { header "geometry/index/detail/varray_detail.hpp" export * }
  module "geometry__index__detail__varray" { header "geometry/index/detail/varray.hpp" export * }
  module "geometry__index__equal_to" { header "geometry/index/equal_to.hpp" export * }
  module "geometry__index__inserter" { header "geometry/index/inserter.hpp" export * }
  module "geometry__index__parameters" { header "geometry/index/parameters.hpp" export * }
  module "geometry__index__rtree" { header "geometry/index/rtree.hpp" export * }
  module "geometry__io__dsv__write" { header "geometry/io/dsv/write.hpp" export * }
  module "geometry__io__io" { header "geometry/io/io.hpp" export * }
  module "geometry__io__svg__svg_mapper" { header "geometry/io/svg/svg_mapper.hpp" export * }
  module "geometry__io__svg__write" { header "geometry/io/svg/write.hpp" export * }
  module "geometry__io__svg__write_svg" { header "geometry/io/svg/write_svg.hpp" export * }
  module "geometry__io__svg__write_svg_multi" { header "geometry/io/svg/write_svg_multi.hpp" export * }
  module "geometry__io__wkt__detail__prefix" { header "geometry/io/wkt/detail/prefix.hpp" export * }
  module "geometry__io__wkt__read" { header "geometry/io/wkt/read.hpp" export * }
  module "geometry__io__wkt__stream" { header "geometry/io/wkt/stream.hpp" export * }
  module "geometry__io__wkt__wkt" { header "geometry/io/wkt/wkt.hpp" export * }
  module "geometry__io__wkt__write" { header "geometry/io/wkt/write.hpp" export * }
  module "geometry__iterators__base" { header "geometry/iterators/base.hpp" export * }
  module "geometry__iterators__closing_iterator" { header "geometry/iterators/closing_iterator.hpp" export * }
  module "geometry__iterators__concatenate_iterator" { header "geometry/iterators/concatenate_iterator.hpp" export * }
  module "geometry__iterators__detail__point_iterator__inner_range_type" { header "geometry/iterators/detail/point_iterator/inner_range_type.hpp" export * }
  module "geometry__iterators__detail__point_iterator__value_type" { header "geometry/iterators/detail/point_iterator/value_type.hpp" export * }
  module "geometry__iterators__detail__segment_iterator__iterator_type" { header "geometry/iterators/detail/segment_iterator/iterator_type.hpp" export * }
  module "geometry__iterators__detail__segment_iterator__range_segment_iterator" { header "geometry/iterators/detail/segment_iterator/range_segment_iterator.hpp" export * }
  module "geometry__iterators__detail__segment_iterator__value_type" { header "geometry/iterators/detail/segment_iterator/value_type.hpp" export * }
  module "geometry__iterators__dispatch__point_iterator" { header "geometry/iterators/dispatch/point_iterator.hpp" export * }
  module "geometry__iterators__dispatch__segment_iterator" { header "geometry/iterators/dispatch/segment_iterator.hpp" export * }
  module "geometry__iterators__ever_circling_iterator" { header "geometry/iterators/ever_circling_iterator.hpp" export * }
  module "geometry__iterators__flatten_iterator" { header "geometry/iterators/flatten_iterator.hpp" export * }
  module "geometry__iterators__has_one_element" { header "geometry/iterators/has_one_element.hpp" export * }
  module "geometry__iterators__point_iterator" { header "geometry/iterators/point_iterator.hpp" export * }
  module "geometry__iterators__point_reverse_iterator" { header "geometry/iterators/point_reverse_iterator.hpp" export * }
  module "geometry__iterators__segment_iterator" { header "geometry/iterators/segment_iterator.hpp" export * }
  module "geometry__multi__algorithms__append" { header "geometry/multi/algorithms/append.hpp" export * }
  module "geometry__multi__algorithms__area" { header "geometry/multi/algorithms/area.hpp" export * }
  module "geometry__multi__algorithms__centroid" { header "geometry/multi/algorithms/centroid.hpp" export * }
  module "geometry__multi__algorithms__clear" { header "geometry/multi/algorithms/clear.hpp" export * }
  module "geometry__multi__algorithms__convert" { header "geometry/multi/algorithms/convert.hpp" export * }
  module "geometry__multi__algorithms__correct" { header "geometry/multi/algorithms/correct.hpp" export * }
  module "geometry__multi__algorithms__covered_by" { header "geometry/multi/algorithms/covered_by.hpp" export * }
  module "geometry__multi__algorithms__detail__for_each_range" { header "geometry/multi/algorithms/detail/for_each_range.hpp" export * }
  module "geometry__multi__algorithms__detail__modify" { header "geometry/multi/algorithms/detail/modify.hpp" export * }
  module "geometry__multi__algorithms__detail__modify_with_predicate" { header "geometry/multi/algorithms/detail/modify_with_predicate.hpp" export * }
  module "geometry__multi__algorithms__detail__multi_sum" { header "geometry/multi/algorithms/detail/multi_sum.hpp" export * }
  module "geometry__multi__algorithms__detail__overlay__get_ring" { header "geometry/multi/algorithms/detail/overlay/get_ring.hpp" export * }
  module "geometry__multi__algorithms__detail__overlay__get_turns" { header "geometry/multi/algorithms/detail/overlay/get_turns.hpp" export * }
  module "geometry__multi__algorithms__detail__overlay__self_turn_points" { header "geometry/multi/algorithms/detail/overlay/self_turn_points.hpp" export * }
  module "geometry__multi__algorithms__detail__point_on_border" { header "geometry/multi/algorithms/detail/point_on_border.hpp" export * }
  module "geometry__multi__algorithms__detail__sections__range_by_section" { header "geometry/multi/algorithms/detail/sections/range_by_section.hpp" export * }
  module "geometry__multi__algorithms__detail__sections__sectionalize" { header "geometry/multi/algorithms/detail/sections/sectionalize.hpp" export * }
  module "geometry__multi__algorithms__distance" { header "geometry/multi/algorithms/distance.hpp" export * }
  module "geometry__multi__algorithms__envelope" { header "geometry/multi/algorithms/envelope.hpp" export * }
  module "geometry__multi__algorithms__equals" { header "geometry/multi/algorithms/equals.hpp" export * }
  module "geometry__multi__algorithms__for_each" { header "geometry/multi/algorithms/for_each.hpp" export * }
  module "geometry__multi__algorithms__intersection" { header "geometry/multi/algorithms/intersection.hpp" export * }
  module "geometry__multi__algorithms__length" { header "geometry/multi/algorithms/length.hpp" export * }
  module "geometry__multi__algorithms__num_geometries" { header "geometry/multi/algorithms/num_geometries.hpp" export * }
  module "geometry__multi__algorithms__num_interior_rings" { header "geometry/multi/algorithms/num_interior_rings.hpp" export * }
  module "geometry__multi__algorithms__num_points" { header "geometry/multi/algorithms/num_points.hpp" export * }
  module "geometry__multi__algorithms__perimeter" { header "geometry/multi/algorithms/perimeter.hpp" export * }
  module "geometry__multi__algorithms__remove_spikes" { header "geometry/multi/algorithms/remove_spikes.hpp" export * }
  module "geometry__multi__algorithms__reverse" { header "geometry/multi/algorithms/reverse.hpp" export * }
  module "geometry__multi__algorithms__simplify" { header "geometry/multi/algorithms/simplify.hpp" export * }
  module "geometry__multi__algorithms__transform" { header "geometry/multi/algorithms/transform.hpp" export * }
  module "geometry__multi__algorithms__unique" { header "geometry/multi/algorithms/unique.hpp" export * }
  module "geometry__multi__algorithms__within" { header "geometry/multi/algorithms/within.hpp" export * }
  module "geometry__multi__core__closure" { header "geometry/multi/core/closure.hpp" export * }
  module "geometry__multi__core__geometry_id" { header "geometry/multi/core/geometry_id.hpp" export * }
  module "geometry__multi__core__interior_rings" { header "geometry/multi/core/interior_rings.hpp" export * }
  module "geometry__multi__core__is_areal" { header "geometry/multi/core/is_areal.hpp" export * }
  module "geometry__multi__core__point_order" { header "geometry/multi/core/point_order.hpp" export * }
  module "geometry__multi__core__point_type" { header "geometry/multi/core/point_type.hpp" export * }
  module "geometry__multi__core__ring_type" { header "geometry/multi/core/ring_type.hpp" export * }
  module "geometry__multi__core__tags" { header "geometry/multi/core/tags.hpp" export * }
  module "geometry__multi__core__topological_dimension" { header "geometry/multi/core/topological_dimension.hpp" export * }
  module "geometry__multi__geometries__concepts__check" { header "geometry/multi/geometries/concepts/check.hpp" export * }
  module "geometry__multi__geometries__concepts__multi_linestring_concept" { header "geometry/multi/geometries/concepts/multi_linestring_concept.hpp" export * }
  module "geometry__multi__geometries__concepts__multi_polygon_concept" { header "geometry/multi/geometries/concepts/multi_polygon_concept.hpp" export * }
  module "geometry__multi__geometries__multi_geometries" { header "geometry/multi/geometries/multi_geometries.hpp" export * }
  module "geometry__multi__geometries__multi_linestring" { header "geometry/multi/geometries/multi_linestring.hpp" export * }
  module "geometry__multi__geometries__multi_point" { header "geometry/multi/geometries/multi_point.hpp" export * }
  module "geometry__multi__geometries__multi_polygon" { header "geometry/multi/geometries/multi_polygon.hpp" export * }
  module "geometry__multi__geometries__register__multi_linestring" { header "geometry/multi/geometries/register/multi_linestring.hpp" export * }
  module "geometry__multi__geometries__register__multi_point" { header "geometry/multi/geometries/register/multi_point.hpp" export * }
  module "geometry__multi__geometries__register__multi_polygon" { header "geometry/multi/geometries/register/multi_polygon.hpp" export * }
  module "geometry__multi__io__dsv__write" { header "geometry/multi/io/dsv/write.hpp" export * }
  module "geometry__multi__io__wkt__detail__prefix" { header "geometry/multi/io/wkt/detail/prefix.hpp" export * }
  module "geometry__multi__io__wkt__read" { header "geometry/multi/io/wkt/read.hpp" export * }
  module "geometry__multi__io__wkt__wkt" { header "geometry/multi/io/wkt/wkt.hpp" export * }
  module "geometry__multi__io__wkt__write" { header "geometry/multi/io/wkt/write.hpp" export * }
  module "geometry__multi__multi" { header "geometry/multi/multi.hpp" export * }
  module "geometry__multi__strategies__cartesian__centroid_average" { header "geometry/multi/strategies/cartesian/centroid_average.hpp" export * }
  module "geometry__multi__views__detail__range_type" { header "geometry/multi/views/detail/range_type.hpp" export * }
  module "geometry__policies__disjoint_interrupt_policy" { header "geometry/policies/disjoint_interrupt_policy.hpp" export * }
  module "geometry__policies__is_valid__default_policy" { header "geometry/policies/is_valid/default_policy.hpp" export * }
  module "geometry__policies__is_valid__failing_reason_policy" { header "geometry/policies/is_valid/failing_reason_policy.hpp" export * }
  module "geometry__policies__is_valid__failure_type_policy" { header "geometry/policies/is_valid/failure_type_policy.hpp" export * }
  module "geometry__policies__predicate_based_interrupt_policy" { header "geometry/policies/predicate_based_interrupt_policy.hpp" export * }
  module "geometry__policies__relate__direction" { header "geometry/policies/relate/direction.hpp" export * }
  module "geometry__policies__relate__intersection_points" { header "geometry/policies/relate/intersection_points.hpp" export * }
  module "geometry__policies__relate__intersection_ratios" { header "geometry/policies/relate/intersection_ratios.hpp" export * }
  module "geometry__policies__robustness__get_rescale_policy" { header "geometry/policies/robustness/get_rescale_policy.hpp" export * }
  module "geometry__policies__robustness__no_rescale_policy" { header "geometry/policies/robustness/no_rescale_policy.hpp" export * }
  module "geometry__policies__robustness__robust_point_type" { header "geometry/policies/robustness/robust_point_type.hpp" export * }
  module "geometry__policies__robustness__robust_type" { header "geometry/policies/robustness/robust_type.hpp" export * }
  module "geometry__policies__robustness__segment_ratio" { header "geometry/policies/robustness/segment_ratio.hpp" export * }
  module "geometry__policies__robustness__segment_ratio_type" { header "geometry/policies/robustness/segment_ratio_type.hpp" export * }
  module "geometry__strategies__agnostic__buffer_distance_asymmetric" { header "geometry/strategies/agnostic/buffer_distance_asymmetric.hpp" export * }
  module "geometry__strategies__agnostic__buffer_distance_symmetric" { header "geometry/strategies/agnostic/buffer_distance_symmetric.hpp" export * }
  module "geometry__strategies__agnostic__point_in_point" { header "geometry/strategies/agnostic/point_in_point.hpp" export * }
  module "geometry__strategies__agnostic__point_in_poly_oriented_winding" { header "geometry/strategies/agnostic/point_in_poly_oriented_winding.hpp" export * }
  module "geometry__strategies__agnostic__simplify_douglas_peucker" { header "geometry/strategies/agnostic/simplify_douglas_peucker.hpp" export * }
  module "geometry__strategies__area" { header "geometry/strategies/area.hpp" export * }
  module "geometry__strategies__azimuth" { header "geometry/strategies/azimuth.hpp" export * }
  module "geometry__strategies__buffer" { header "geometry/strategies/buffer.hpp" export * }
  module "geometry__strategies__cartesian__box_in_box" { header "geometry/strategies/cartesian/box_in_box.hpp" export * }
  module "geometry__strategies__cartesian__buffer_end_round" { header "geometry/strategies/cartesian/buffer_end_round.hpp" export * }
  module "geometry__strategies__cartesian__buffer_side_straight" { header "geometry/strategies/cartesian/buffer_side_straight.hpp" export * }
  module "geometry__strategies__cartesian__centroid_average" { header "geometry/strategies/cartesian/centroid_average.hpp" export * }
  module "geometry__strategies__cartesian__centroid_weighted_length" { header "geometry/strategies/cartesian/centroid_weighted_length.hpp" export * }
  module "geometry__strategies__cartesian__disjoint_segment_box" { header "geometry/strategies/cartesian/disjoint_segment_box.hpp" export * }
  module "geometry__strategies__cartesian__distance_projected_point_ax" { header "geometry/strategies/cartesian/distance_projected_point_ax.hpp" export * }
  module "geometry__strategies__cartesian__distance_projected_point" { header "geometry/strategies/cartesian/distance_projected_point.hpp" export * }
  module "geometry__strategies__cartesian__intersection" { header "geometry/strategies/cartesian/intersection.hpp" export * }
  module "geometry__strategies__cartesian__point_in_box" { header "geometry/strategies/cartesian/point_in_box.hpp" export * }
  module "geometry__strategies__cartesian__side_by_triangle" { header "geometry/strategies/cartesian/side_by_triangle.hpp" export * }
  module "geometry__strategies__centroid" { header "geometry/strategies/centroid.hpp" export * }
  module "geometry__strategies__comparable_distance_result" { header "geometry/strategies/comparable_distance_result.hpp" export * }
  module "geometry__strategies__compare" { header "geometry/strategies/compare.hpp" export * }
  module "geometry__strategies__concepts__area_concept" { header "geometry/strategies/concepts/area_concept.hpp" export * }
  module "geometry__strategies__concepts__centroid_concept" { header "geometry/strategies/concepts/centroid_concept.hpp" export * }
  module "geometry__strategies__concepts__convex_hull_concept" { header "geometry/strategies/concepts/convex_hull_concept.hpp" export * }
  module "geometry__strategies__concepts__segment_intersect_concept" { header "geometry/strategies/concepts/segment_intersect_concept.hpp" export * }
  module "geometry__strategies__covered_by" { header "geometry/strategies/covered_by.hpp" export * }
  module "geometry__strategies__default_area_result" { header "geometry/strategies/default_area_result.hpp" export * }
  module "geometry__strategies__default_comparable_distance_result" { header "geometry/strategies/default_comparable_distance_result.hpp" export * }
  module "geometry__strategies__default_distance_result" { header "geometry/strategies/default_distance_result.hpp" export * }
  module "geometry__strategies__default_length_result" { header "geometry/strategies/default_length_result.hpp" export * }
  module "geometry__strategies__default_strategy" { header "geometry/strategies/default_strategy.hpp" export * }
  module "geometry__strategies__disjoint" { header "geometry/strategies/disjoint.hpp" export * }
  module "geometry__strategies__distance" { header "geometry/strategies/distance.hpp" export * }
  module "geometry__strategies__distance_result" { header "geometry/strategies/distance_result.hpp" export * }
  module "geometry__strategies__envelope" { header "geometry/strategies/envelope.hpp" export * }
  module "geometry__strategies__geographic__azimuth" { header "geometry/strategies/geographic/azimuth.hpp" export * }
  module "geometry__strategies__geographic__distance_andoyer" { header "geometry/strategies/geographic/distance_andoyer.hpp" export * }
  module "geometry__strategies__geographic__distance" { header "geometry/strategies/geographic/distance.hpp" export * }
  module "geometry__strategies__geographic__distance_thomas" { header "geometry/strategies/geographic/distance_thomas.hpp" export * }
  module "geometry__strategies__geographic__distance_vincenty" { header "geometry/strategies/geographic/distance_vincenty.hpp" export * }
  module "geometry__strategies__geographic__envelope_segment" { header "geometry/strategies/geographic/envelope_segment.hpp" export * }
  module "geometry__strategies__geographic__intersection_elliptic" { header "geometry/strategies/geographic/intersection_elliptic.hpp" export * }
  module "geometry__strategies__geographic__mapping_ssf" { header "geometry/strategies/geographic/mapping_ssf.hpp" export * }
  module "geometry__strategies__geographic__parameters" { header "geometry/strategies/geographic/parameters.hpp" export * }
  module "geometry__strategies__geographic__side_andoyer" { header "geometry/strategies/geographic/side_andoyer.hpp" export * }
  module "geometry__strategies__geographic__side" { header "geometry/strategies/geographic/side.hpp" export * }
  module "geometry__strategies__geographic__side_thomas" { header "geometry/strategies/geographic/side_thomas.hpp" export * }
  module "geometry__strategies__geographic__side_vincenty" { header "geometry/strategies/geographic/side_vincenty.hpp" export * }
  module "geometry__strategies__intersection" { header "geometry/strategies/intersection.hpp" export * }
  module "geometry__strategies__intersection_result" { header "geometry/strategies/intersection_result.hpp" export * }
  module "geometry__strategies__intersection_strategies" { header "geometry/strategies/intersection_strategies.hpp" export * }
  module "geometry__strategies__relate" { header "geometry/strategies/relate.hpp" export * }
  module "geometry__strategies__side_info" { header "geometry/strategies/side_info.hpp" export * }
  module "geometry__strategies__spherical__azimuth" { header "geometry/strategies/spherical/azimuth.hpp" export * }
  module "geometry__strategies__spherical__distance_cross_track" { header "geometry/strategies/spherical/distance_cross_track.hpp" export * }
  module "geometry__strategies__spherical__distance_cross_track_point_box" { header "geometry/strategies/spherical/distance_cross_track_point_box.hpp" export * }
  module "geometry__strategies__spherical__distance_haversine" { header "geometry/strategies/spherical/distance_haversine.hpp" export * }
  module "geometry__strategies__spherical__envelope_segment" { header "geometry/strategies/spherical/envelope_segment.hpp" export * }
  module "geometry__strategies__spherical__intersection" { header "geometry/strategies/spherical/intersection.hpp" export * }
  module "geometry__strategies__spherical__side_by_cross_track" { header "geometry/strategies/spherical/side_by_cross_track.hpp" export * }
  module "geometry__strategies__spherical__ssf" { header "geometry/strategies/spherical/ssf.hpp" export * }
  module "geometry__strategies__strategies" { header "geometry/strategies/strategies.hpp" export * }
  module "geometry__strategies__strategy_transform" { header "geometry/strategies/strategy_transform.hpp" export * }
  module "geometry__strategies__tags" { header "geometry/strategies/tags.hpp" export * }
  module "geometry__strategies__transform" { header "geometry/strategies/transform.hpp" export * }
  module "geometry__strategies__transform__inverse_transformer" { header "geometry/strategies/transform/inverse_transformer.hpp" export * }
  module "geometry__strategies__transform__map_transformer" { header "geometry/strategies/transform/map_transformer.hpp" export * }
  module "geometry__strategies__transform__matrix_transformers" { header "geometry/strategies/transform/matrix_transformers.hpp" export * }
  module "geometry__strategies__within" { header "geometry/strategies/within.hpp" export * }
  module "geometry__util__add_const_if_c" { header "geometry/util/add_const_if_c.hpp" export * }
  module "geometry__util__bare_type" { header "geometry/util/bare_type.hpp" export * }
  module "geometry__util__closure_as_bool" { header "geometry/util/closure_as_bool.hpp" export * }
  module "geometry__util__compress_variant" { header "geometry/util/compress_variant.hpp" export * }
  module "geometry__util__condition" { header "geometry/util/condition.hpp" export * }
  module "geometry__util__coordinate_cast" { header "geometry/util/coordinate_cast.hpp" export * }
  module "geometry__util__for_each_coordinate" { header "geometry/util/for_each_coordinate.hpp" export * }
  module "geometry__util__has_infinite_coordinate" { header "geometry/util/has_infinite_coordinate.hpp" export * }
  module "geometry__util__has_nan_coordinate" { header "geometry/util/has_nan_coordinate.hpp" export * }
  module "geometry__util__has_non_finite_coordinate" { header "geometry/util/has_non_finite_coordinate.hpp" export * }
  module "geometry__util__math" { header "geometry/util/math.hpp" export * }
  module "geometry__util__normalize_spheroidal_box_coordinates" { header "geometry/util/normalize_spheroidal_box_coordinates.hpp" export * }
  module "geometry__util__normalize_spheroidal_coordinates" { header "geometry/util/normalize_spheroidal_coordinates.hpp" export * }
  module "geometry__util__order_as_direction" { header "geometry/util/order_as_direction.hpp" export * }
  module "geometry__util__parameter_type_of" { header "geometry/util/parameter_type_of.hpp" export * }
  module "geometry__util__promote_floating_point" { header "geometry/util/promote_floating_point.hpp" export * }
  module "geometry__util__promote_integral" { header "geometry/util/promote_integral.hpp" export * }
  module "geometry__util__range" { header "geometry/util/range.hpp" export * }
  module "geometry__util__rational" { header "geometry/util/rational.hpp" export * }
  module "geometry__util__select_calculation_type" { header "geometry/util/select_calculation_type.hpp" export * }
  module "geometry__util__select_coordinate_type" { header "geometry/util/select_coordinate_type.hpp" export * }
  module "geometry__util__select_most_precise" { header "geometry/util/select_most_precise.hpp" export * }
  module "geometry__util__transform_variant" { header "geometry/util/transform_variant.hpp" export * }
  module "geometry__views__box_view" { header "geometry/views/box_view.hpp" export * }
  module "geometry__views__closeable_view" { header "geometry/views/closeable_view.hpp" export * }
  module "geometry__views__detail__boundary_view" { header "geometry/views/detail/boundary_view.hpp" export * }
  module "geometry__views__detail__boundary_view__interface" { header "geometry/views/detail/boundary_view/interface.hpp" export * }
  module "geometry__views__detail__indexed_point_view" { header "geometry/views/detail/indexed_point_view.hpp" export * }
  module "geometry__views__detail__normalized_view" { header "geometry/views/detail/normalized_view.hpp" export * }
  module "geometry__views__detail__points_view" { header "geometry/views/detail/points_view.hpp" export * }
  module "geometry__views__detail__range_type" { header "geometry/views/detail/range_type.hpp" export * }
  module "geometry__views__detail__two_dimensional_view" { header "geometry/views/detail/two_dimensional_view.hpp" export * }
  module "geometry__views__identity_view" { header "geometry/views/identity_view.hpp" export * }
  module "geometry__views__reversible_view" { header "geometry/views/reversible_view.hpp" export * }
  module "geometry__views__segment_view" { header "geometry/views/segment_view.hpp" export * }
}
module boost_get_pointer { export * module "get_pointer" { header "get_pointer.hpp" export * } }
module boost_gil {
  export *
  module "gil__bit_aligned_pixel_iterator" { header "gil/bit_aligned_pixel_iterator.hpp" export * }
  module "gil__bit_aligned_pixel_reference" { header "gil/bit_aligned_pixel_reference.hpp" export * }
  module "gil__channel" { header "gil/channel.hpp" export * }
  module "gil__color_base_algorithm" { header "gil/color_base_algorithm.hpp" export * }
  module "gil__color_base" { header "gil/color_base.hpp" export * }
  module "gil__deprecated" { header "gil/deprecated.hpp" export * }
  module "gil__extension__dynamic_image__apply_operation" { header "gil/extension/dynamic_image/apply_operation.hpp" export * }
  module "gil__extension__dynamic_image__dynamic_at_c" { header "gil/extension/dynamic_image/dynamic_at_c.hpp" export * }
  module "gil__gray" { header "gil/gray.hpp" export * }
  module "gil__image_view" { header "gil/image_view.hpp" export * }
  module "gil__iterator_from_2d" { header "gil/iterator_from_2d.hpp" export * }
  module "gil__locator" { header "gil/locator.hpp" export * }
  module "gil__packed_pixel" { header "gil/packed_pixel.hpp" export * }
  module "gil__pixel" { header "gil/pixel.hpp" export * }
  module "gil__pixel_iterator_adaptor" { header "gil/pixel_iterator_adaptor.hpp" export * }
  module "gil__pixel_iterator" { header "gil/pixel_iterator.hpp" export * }
  module "gil__planar_pixel_iterator" { header "gil/planar_pixel_iterator.hpp" export * }
  module "gil__planar_pixel_reference" { header "gil/planar_pixel_reference.hpp" export * }
  module "gil__position_iterator" { header "gil/position_iterator.hpp" export * }
  module "gil__rgba" { header "gil/rgba.hpp" export * }
  module "gil__rgb" { header "gil/rgb.hpp" export * }
  module "gil__step_iterator" { header "gil/step_iterator.hpp" export * }
  module "gil__typedefs" { header "gil/typedefs.hpp" export * }
  module "gil__utilities" { header "gil/utilities.hpp" export * }
  module "gil__virtual_locator" { header "gil/virtual_locator.hpp" export * }
}
module boost_graph_pending_random_wrapper {
  export *
  module boost_random {
    export *
    module "random__additive_combine" { header "random/additive_combine.hpp" export * }
    module "random__bernoulli_distribution" { header "random/bernoulli_distribution.hpp" export * }
    module "random__beta_distribution" { header "random/beta_distribution.hpp" export * }
    module "random__binomial_distribution" { header "random/binomial_distribution.hpp" export * }
    module "random__cauchy_distribution" { header "random/cauchy_distribution.hpp" export * }
    module "random__chi_squared_distribution" { header "random/chi_squared_distribution.hpp" export * }
    module "random__detail__auto_link" { header "random/detail/auto_link.hpp" export * }
    module "random__detail__config" { header "random/detail/config.hpp" export * }
    module "random__detail__const_mod" { header "random/detail/const_mod.hpp" export * }
    module "random__detail__disable_warnings" { header "random/detail/disable_warnings.hpp" export * }
    module "random__detail__enable_warnings" { header "random/detail/enable_warnings.hpp" export * }
    module "random__detail__generator_bits" { header "random/detail/generator_bits.hpp" export * }
    module "random__detail__generator_seed_seq" { header "random/detail/generator_seed_seq.hpp" export * }
    module "random__detail__integer_log2" { header "random/detail/integer_log2.hpp" export * }
    module "random__detail__int_float_pair" { header "random/detail/int_float_pair.hpp" export * }
    module "random__detail__iterator_mixin" { header "random/detail/iterator_mixin.hpp" export * }
    module "random__detail__large_arithmetic" { header "random/detail/large_arithmetic.hpp" export * }
    module "random__detail__operators" { header "random/detail/operators.hpp" export * }
    module "random__detail__polynomial" { header "random/detail/polynomial.hpp" export * }
    module "random__detail__ptr_helper" { header "random/detail/ptr_helper.hpp" export * }
    module "random__detail__seed" { header "random/detail/seed.hpp" export * }
    module "random__detail__seed_impl" { header "random/detail/seed_impl.hpp" export * }
    module "random__detail__signed_unsigned_tools" { header "random/detail/signed_unsigned_tools.hpp" export * }
    module "random__detail__uniform_int_float" { header "random/detail/uniform_int_float.hpp" export * }
    module "random__detail__vector_io" { header "random/detail/vector_io.hpp" export * }
    module "random__discard_block" { header "random/discard_block.hpp" export * }
    module "random__discrete_distribution" { header "random/discrete_distribution.hpp" export * }
    module "random__exponential_distribution" { header "random/exponential_distribution.hpp" export * }
    module "random__extreme_value_distribution" { header "random/extreme_value_distribution.hpp" export * }
    module "random__fisher_f_distribution" { header "random/fisher_f_distribution.hpp" export * }
    module "random__gamma_distribution" { header "random/gamma_distribution.hpp" export * }
    module "random__generate_canonical" { header "random/generate_canonical.hpp" export * }
    module "random__geometric_distribution" { header "random/geometric_distribution.hpp" export * }
    module "random" { header "random.hpp" export * }
    module "random__hyperexponential_distribution" { header "random/hyperexponential_distribution.hpp" export * }
    module "random__independent_bits" { header "random/independent_bits.hpp" export * }
    module "random__inversive_congruential" { header "random/inversive_congruential.hpp" export * }
    module "random__lagged_fibonacci" { header "random/lagged_fibonacci.hpp" export * }
    module "random__laplace_distribution" { header "random/laplace_distribution.hpp" export * }
    module "random__linear_congruential" { header "random/linear_congruential.hpp" export * }
    module "random__linear_feedback_shift" { header "random/linear_feedback_shift.hpp" export * }
    module "random__lognormal_distribution" { header "random/lognormal_distribution.hpp" export * }
    module "random__mersenne_twister" { header "random/mersenne_twister.hpp" export * }
    module "random__negative_binomial_distribution" { header "random/negative_binomial_distribution.hpp" export * }
    module "random__non_central_chi_squared_distribution" { header "random/non_central_chi_squared_distribution.hpp" export * }
    module "random__normal_distribution" { header "random/normal_distribution.hpp" export * }
    module "random__piecewise_constant_distribution" { header "random/piecewise_constant_distribution.hpp" export * }
    module "random__piecewise_linear_distribution" { header "random/piecewise_linear_distribution.hpp" export * }
    module "random__poisson_distribution" { header "random/poisson_distribution.hpp" export * }
    module "random__random_device" { header "random/random_device.hpp" export * }
    module "random__random_number_generator" { header "random/random_number_generator.hpp" export * }
    module "random__ranlux" { header "random/ranlux.hpp" export * }
    module "random__seed_seq" { header "random/seed_seq.hpp" export * }
    module "random__shuffle_order" { header "random/shuffle_order.hpp" export * }
    module "random__shuffle_output" { header "random/shuffle_output.hpp" export * }
    module "random__student_t_distribution" { header "random/student_t_distribution.hpp" export * }
    module "random__subtract_with_carry" { header "random/subtract_with_carry.hpp" export * }
    module "random__taus88" { header "random/taus88.hpp" export * }
    module "random__traits" { header "random/traits.hpp" export * }
    module "random__triangle_distribution" { header "random/triangle_distribution.hpp" export * }
    module "random__uniform_01" { header "random/uniform_01.hpp" export * }
    module "random__uniform_int_distribution" { header "random/uniform_int_distribution.hpp" export * }
    module "random__uniform_int" { header "random/uniform_int.hpp" export * }
    module "random__uniform_on_sphere" { header "random/uniform_on_sphere.hpp" export * }
    module "random__uniform_real_distribution" { header "random/uniform_real_distribution.hpp" export * }
    module "random__uniform_real" { header "random/uniform_real.hpp" export * }
    module "random__uniform_smallint" { header "random/uniform_smallint.hpp" export * }
    module "random__variate_generator" { header "random/variate_generator.hpp" export * }
    module "random__weibull_distribution" { header "random/weibull_distribution.hpp" export * }
    module "random__xor_combine" { header "random/xor_combine.hpp" export * }
  }
  module boost_pending {
    export *
    module "pending__bucket_sorter" { header "pending/bucket_sorter.hpp" export * }
    module "pending__container_traits" { header "pending/container_traits.hpp" export * }
    module "pending__detail__disjoint_sets" { header "pending/detail/disjoint_sets.hpp" export * }
    module "pending__detail__int_iterator" { header "pending/detail/int_iterator.hpp" export * }
    module "pending__detail__property" { header "pending/detail/property.hpp" export * }
    module "pending__disjoint_sets" { header "pending/disjoint_sets.hpp" export * }
    module "pending__fenced_priority_queue" { header "pending/fenced_priority_queue.hpp" export * }
    module "pending__fibonacci_heap" { header "pending/fibonacci_heap.hpp" export * }
    module "pending__indirect_cmp" { header "pending/indirect_cmp.hpp" export * }
    module "pending__integer_log2" { header "pending/integer_log2.hpp" export * }
    module "pending__is_heap" { header "pending/is_heap.hpp" export * }
    module "pending__iterator_adaptors" { header "pending/iterator_adaptors.hpp" export * }
    module "pending__mutable_queue" { header "pending/mutable_queue.hpp" export * }
    module "pending__property" { header "pending/property.hpp" export * }
    module "pending__property_serialize" { header "pending/property_serialize.hpp" export * }
    module "pending__queue" { header "pending/queue.hpp" export * }
    module "pending__relaxed_heap" { header "pending/relaxed_heap.hpp" export * }
    module "pending__stringtok" { header "pending/stringtok.hpp" export * }
  }
  module boost_graph {
    export *
    module "graph__adjacency_iterator" { header "graph/adjacency_iterator.hpp" export * }
    module "graph__adjacency_list" { header "graph/adjacency_list.hpp" export * }
    module "graph__adjacency_list_io" { header "graph/adjacency_list_io.hpp" export * }
    module "graph__adjacency_matrix" { header "graph/adjacency_matrix.hpp" export * }
    module "graph__adj_list_serialize" { header "graph/adj_list_serialize.hpp" export * }
    module "graph__astar_search" { header "graph/astar_search.hpp" export * }
    module "graph__bc_clustering" { header "graph/bc_clustering.hpp" export * }
    module "graph__bellman_ford_shortest_paths" { header "graph/bellman_ford_shortest_paths.hpp" export * }
    module "graph__betweenness_centrality" { header "graph/betweenness_centrality.hpp" export * }
    module "graph__biconnected_components" { header "graph/biconnected_components.hpp" export * }
    module "graph__bipartite" { header "graph/bipartite.hpp" export * }
    module "graph__boyer_myrvold_planar_test" { header "graph/boyer_myrvold_planar_test.hpp" export * }
    module "graph__boykov_kolmogorov_max_flow" { header "graph/boykov_kolmogorov_max_flow.hpp" export * }
    module "graph__breadth_first_search" { header "graph/breadth_first_search.hpp" export * }
    module "graph__bron_kerbosch_all_cliques" { header "graph/bron_kerbosch_all_cliques.hpp" export * }
    module "graph__buffer_concepts" { header "graph/buffer_concepts.hpp" export * }
    module "graph__closeness_centrality" { header "graph/closeness_centrality.hpp" export * }
    module "graph__clustering_coefficient" { header "graph/clustering_coefficient.hpp" export * }
    module "graph__compressed_sparse_row_graph" { header "graph/compressed_sparse_row_graph.hpp" export * }
    module "graph__connected_components" { header "graph/connected_components.hpp" export * }
    module "graph__copy" { header "graph/copy.hpp" export * }
    module "graph__core_numbers" { header "graph/core_numbers.hpp" export * }
    module "graph__create_condensation_graph" { header "graph/create_condensation_graph.hpp" export * }
    module "graph__cuthill_mckee_ordering" { header "graph/cuthill_mckee_ordering.hpp" export * }
    module "graph__cycle_canceling" { header "graph/cycle_canceling.hpp" export * }
    module "graph__dag_shortest_paths" { header "graph/dag_shortest_paths.hpp" export * }
    module "graph__degree_centrality" { header "graph/degree_centrality.hpp" export * }
    module "graph__depth_first_search" { header "graph/depth_first_search.hpp" export * }
    module "graph__detail__adj_list_edge_iterator" { header "graph/detail/adj_list_edge_iterator.hpp" export * }
    module "graph__detail__augment" { header "graph/detail/augment.hpp" export * }
    module "graph__detail__d_ary_heap" { header "graph/detail/d_ary_heap.hpp" export * }
    module "graph__detail__edge" { header "graph/detail/edge.hpp" export * }
    module "graph__detail__geodesic" { header "graph/detail/geodesic.hpp" export * }
    module "graph__detail__incidence_iterator" { header "graph/detail/incidence_iterator.hpp" export * }
    module "graph__detail__incremental_components" { header "graph/detail/incremental_components.hpp" export * }
    module "graph__detail__indexed_properties" { header "graph/detail/indexed_properties.hpp" export * }
    module "graph__detail__is_distributed_selector" { header "graph/detail/is_distributed_selector.hpp" export * }
    //module "graph__detail__read_graphviz_spirit" { header "graph/detail/read_graphviz_spirit.hpp" export * }
    module "graph__detail__set_adaptor" { header "graph/detail/set_adaptor.hpp" export * }
    module "graph__detail__sparse_ordering" { header "graph/detail/sparse_ordering.hpp" export * }
    module "graph__dijkstra_shortest_paths" { header "graph/dijkstra_shortest_paths.hpp" export * }
    module "graph__dijkstra_shortest_paths_no_color_map" { header "graph/dijkstra_shortest_paths_no_color_map.hpp" export * }
    module "graph__directed_graph" { header "graph/directed_graph.hpp" export * }
    module "graph__dll_import_export" { header "graph/dll_import_export.hpp" export * }
    module "graph__dominator_tree" { header "graph/dominator_tree.hpp" export * }
    module "graph__eccentricity" { header "graph/eccentricity.hpp" export * }
    module "graph__edge_coloring" { header "graph/edge_coloring.hpp" export * }
    module "graph__edge_list" { header "graph/edge_list.hpp" export * }
    module "graph__edmonds_karp_max_flow" { header "graph/edmonds_karp_max_flow.hpp" export * }
    module "graph__erdos_renyi_generator" { header "graph/erdos_renyi_generator.hpp" export * }
    module "graph__exception" { header "graph/exception.hpp" export * }
    module "graph__filtered_graph" { header "graph/filtered_graph.hpp" export * }
    module "graph__floyd_warshall_shortest" { header "graph/floyd_warshall_shortest.hpp" export * }
    module "graph__fruchterman_reingold" { header "graph/fruchterman_reingold.hpp" export * }
    module "graph__geodesic_distance" { header "graph/geodesic_distance.hpp" export * }
    module "graph__graph_archetypes" { header "graph/graph_archetypes.hpp" export * }
    module "graph__graph_as_tree" { header "graph/graph_as_tree.hpp" export * }
    module "graph__graph_concepts" { header "graph/graph_concepts.hpp" export * }
    module "graph__graphml" { header "graph/graphml.hpp" export * }
    module "graph__graph_selectors" { header "graph/graph_selectors.hpp" export * }
    module "graph__graph_traits" { header "graph/graph_traits.hpp" export * }
    module "graph__graph_utility" { header "graph/graph_utility.hpp" export * }
    module "graph__graphviz" { header "graph/graphviz.hpp" export * }
    module "graph__grid_graph" { header "graph/grid_graph.hpp" export * }
    module "graph__gursoy_atun_layout" { header "graph/gursoy_atun_layout.hpp" export * }
    module "graph__hawick_circuits" { header "graph/hawick_circuits.hpp" export * }
    module "graph__incremental_components" { header "graph/incremental_components.hpp" export * }
    module "graph__is_kuratowski_subgraph" { header "graph/is_kuratowski_subgraph.hpp" export * }
    module "graph__isomorphism" { header "graph/isomorphism.hpp" export * }
    module "graph__is_straight_line_drawing" { header "graph/is_straight_line_drawing.hpp" export * }
/* This is a textual header.
/home/travis/build/Teemperor/boost-compile/inc/boost/graph/graph_utility.hpp:439:3: fatal error:
      import of module
      'boost_graph_pending_random_wrapper.boost_graph.graph__iteration_macros'
      appears within namespace 'boost'
  #include <boost/graph/iteration_macros.hpp>
  ^
*/
//    module "graph__iteration_macros" { header "graph/iteration_macros.hpp" export * }
//    module "graph__iteration_macros_undef" { header "graph/iteration_macros_undef.hpp" export * }
    module "graph__johnson_all_pairs_shortest" { header "graph/johnson_all_pairs_shortest.hpp" export * }
    module "graph__kamada_kawai_spring_layout" { header "graph/kamada_kawai_spring_layout.hpp" export * }
    module "graph__king_ordering" { header "graph/king_ordering.hpp" export * }
    module "graph__kruskal_min_spanning_tree" { header "graph/kruskal_min_spanning_tree.hpp" export * }
    module "graph__lookup_edge" { header "graph/lookup_edge.hpp" export * }
    module "graph__loop_erased_random_walk" { header "graph/loop_erased_random_walk.hpp" export * }
    module "graph__make_biconnected_planar" { header "graph/make_biconnected_planar.hpp" export * }
    module "graph__make_connected" { header "graph/make_connected.hpp" export * }
    module "graph__make_maximal_planar" { header "graph/make_maximal_planar.hpp" export * }
    module "graph__matrix_as_graph" { header "graph/matrix_as_graph.hpp" export * }
    module "graph__max_cardinality_matching" { header "graph/max_cardinality_matching.hpp" export * }
    module "graph__maximum_adjacency_search" { header "graph/maximum_adjacency_search.hpp" export * }
    module "graph__mcgregor_common_subgraphs" { header "graph/mcgregor_common_subgraphs.hpp" export * }
    module "graph__mesh_graph_generator" { header "graph/mesh_graph_generator.hpp" export * }
    module "graph__metric_tsp_approx" { header "graph/metric_tsp_approx.hpp" export * }
    module "graph__minimum_degree_ordering" { header "graph/minimum_degree_ordering.hpp" export * }
    module "graph__named_function_params" { header "graph/named_function_params.hpp" export * }
    module "graph__named_graph" { header "graph/named_graph.hpp" export * }
    module "graph__neighbor_bfs" { header "graph/neighbor_bfs.hpp" export * }
    module "graph__numeric_values" { header "graph/numeric_values.hpp" export * }
    module "graph__one_bit_color_map" { header "graph/one_bit_color_map.hpp" export * }
    module "graph__overloading" { header "graph/overloading.hpp" export * }
    module "graph__page_rank" { header "graph/page_rank.hpp" export * }
    module "graph__parallel__process_group" { header "graph/parallel/process_group.hpp" export * }
    module "graph__parallel__simple_trigger" { header "graph/parallel/simple_trigger.hpp" export * }
    module "graph__planar_detail__boyer_myrvold_impl" { header "graph/planar_detail/boyer_myrvold_impl.hpp" export * }
    module "graph__planar_detail__bucket_sort" { header "graph/planar_detail/bucket_sort.hpp" export * }
    module "graph__planar_detail__face_handles" { header "graph/planar_detail/face_handles.hpp" export * }
    module "graph__planar_detail__face_iterators" { header "graph/planar_detail/face_iterators.hpp" export * }
    module "graph__planar_face_traversal" { header "graph/planar_face_traversal.hpp" export * }
    module "graph__plod_generator" { header "graph/plod_generator.hpp" export * }
    module "graph__prim_minimum_spanning_tree" { header "graph/prim_minimum_spanning_tree.hpp" export * }
    module "graph__properties" { header "graph/properties.hpp" export * }
    module "graph__property_iter_range" { header "graph/property_iter_range.hpp" export * }
    module "graph__property_maps__constant_property_map" { header "graph/property_maps/constant_property_map.hpp" export * }
    module "graph__property_maps__null_property_map" { header "graph/property_maps/null_property_map.hpp" export * }
    module "graph__push_relabel_max_flow" { header "graph/push_relabel_max_flow.hpp" export * }
    module "graph__random" { header "graph/random.hpp" export * }
    module "graph__random_layout" { header "graph/random_layout.hpp" export * }
    module "graph__random_spanning_tree" { header "graph/random_spanning_tree.hpp" export * }
    module "graph__r_c_shortest_paths" { header "graph/r_c_shortest_paths.hpp" export * }
    module "graph__read_dimacs" { header "graph/read_dimacs.hpp" export * }
    module "graph__relax" { header "graph/relax.hpp" export * }
    module "graph__reverse_graph" { header "graph/reverse_graph.hpp" export * }
    module "graph__rmat_graph_generator" { header "graph/rmat_graph_generator.hpp" export * }
    module "graph__sequential_vertex_coloring" { header "graph/sequential_vertex_coloring.hpp" export * }
    module "graph__simple_point" { header "graph/simple_point.hpp" export * }
    module "graph__sloan_ordering" { header "graph/sloan_ordering.hpp" export * }
    module "graph__smallest_last_ordering" { header "graph/smallest_last_ordering.hpp" export * }
    module "graph__st_connected" { header "graph/st_connected.hpp" export * }
    module "graph__stoer_wagner_min_cut" { header "graph/stoer_wagner_min_cut.hpp" export * }
    module "graph__strong_components" { header "graph/strong_components.hpp" export * }
    module "graph__subgraph" { header "graph/subgraph.hpp" export * }
    module "graph__successive_shortest_path_nonnegative_weights" { header "graph/successive_shortest_path_nonnegative_weights.hpp" export * }
    module "graph__tiernan_all_cycles" { header "graph/tiernan_all_cycles.hpp" export * }
    module "graph__topological_sort" { header "graph/topological_sort.hpp" export * }
    module "graph__topology" { header "graph/topology.hpp" export * }
    module "graph__transitive_closure" { header "graph/transitive_closure.hpp" export * }
    module "graph__transitive_reduction" { header "graph/transitive_reduction.hpp" export * }
    module "graph__transpose_graph" { header "graph/transpose_graph.hpp" export * }
    module "graph__tree_traits" { header "graph/tree_traits.hpp" export * }
    module "graph__two_bit_color_map" { header "graph/two_bit_color_map.hpp" export * }
    module "graph__two_graphs_common_spanning_trees" { header "graph/two_graphs_common_spanning_trees.hpp" export * }
    module "graph__undirected_dfs" { header "graph/undirected_dfs.hpp" export * }
    module "graph__undirected_graph" { header "graph/undirected_graph.hpp" export * }
    module "graph__use_mpi" { header "graph/use_mpi.hpp" export * }
    module "graph__vector_as_graph" { header "graph/vector_as_graph.hpp" export * }
    module "graph__vertex_and_edge_range" { header "graph/vertex_and_edge_range.hpp" export * }
    module "graph__vf2_sub_graph_iso" { header "graph/vf2_sub_graph_iso.hpp" export * }
    module "graph__visitors" { header "graph/visitors.hpp" export * }
  }
}
module boost_hana {
  export *
  module "hana__accessors" { header "hana/accessors.hpp" export * }
  module "hana__adapt_adt" { header "hana/adapt_adt.hpp" export * }
  module "hana__adapt_struct" { header "hana/adapt_struct.hpp" export * }
  module "hana__adjust" { header "hana/adjust.hpp" export * }
  module "hana__adjust_if" { header "hana/adjust_if.hpp" export * }
  module "hana__all" { header "hana/all.hpp" export * }
  module "hana__all_of" { header "hana/all_of.hpp" export * }
  module "hana__and" { header "hana/and.hpp" export * }
  module "hana__any" { header "hana/any.hpp" export * }
  module "hana__any_of" { header "hana/any_of.hpp" export * }
  module "hana__ap" { header "hana/ap.hpp" export * }
  module "hana__append" { header "hana/append.hpp" export * }
  module "hana__assert" { header "hana/assert.hpp" export * }
  module "hana__at" { header "hana/at.hpp" export * }
  module "hana__at_key" { header "hana/at_key.hpp" export * }
  module "hana__back" { header "hana/back.hpp" export * }
  module "hana__basic_tuple" { header "hana/basic_tuple.hpp" export * }
  module "hana__bool" { header "hana/bool.hpp" export * }
  module "hana__cartesian_product" { header "hana/cartesian_product.hpp" export * }
  module "hana__chain" { header "hana/chain.hpp" export * }
  module "hana__comparing" { header "hana/comparing.hpp" export * }
  module "hana__concat" { header "hana/concat.hpp" export * }
  module "hana__concept__applicative" { header "hana/concept/applicative.hpp" export * }
  module "hana__concept__comonad" { header "hana/concept/comonad.hpp" export * }
  module "hana__concept__comparable" { header "hana/concept/comparable.hpp" export * }
  module "hana__concept__constant" { header "hana/concept/constant.hpp" export * }
  module "hana__concept__euclidean_ring" { header "hana/concept/euclidean_ring.hpp" export * }
  module "hana__concept__foldable" { header "hana/concept/foldable.hpp" export * }
  module "hana__concept__functor" { header "hana/concept/functor.hpp" export * }
  module "hana__concept__group" { header "hana/concept/group.hpp" export * }
  module "hana__concept__hashable" { header "hana/concept/hashable.hpp" export * }
  module "hana__concept" { header "hana/concept.hpp" export * }
  module "hana__concept__integral_constant" { header "hana/concept/integral_constant.hpp" export * }
  module "hana__concept__iterable" { header "hana/concept/iterable.hpp" export * }
  module "hana__concept__logical" { header "hana/concept/logical.hpp" export * }
  module "hana__concept__metafunction" { header "hana/concept/metafunction.hpp" export * }
  module "hana__concept__monad" { header "hana/concept/monad.hpp" export * }
  module "hana__concept__monad_plus" { header "hana/concept/monad_plus.hpp" export * }
  module "hana__concept__monoid" { header "hana/concept/monoid.hpp" export * }
  module "hana__concept__orderable" { header "hana/concept/orderable.hpp" export * }
  module "hana__concept__product" { header "hana/concept/product.hpp" export * }
  module "hana__concept__ring" { header "hana/concept/ring.hpp" export * }
  module "hana__concept__searchable" { header "hana/concept/searchable.hpp" export * }
  module "hana__concept__sequence" { header "hana/concept/sequence.hpp" export * }
  module "hana__concept__struct" { header "hana/concept/struct.hpp" export * }
  module "hana__config" { header "hana/config.hpp" export * }
  module "hana__contains" { header "hana/contains.hpp" export * }
  module "hana__core__common" { header "hana/core/common.hpp" export * }
  module "hana__core__default" { header "hana/core/default.hpp" export * }
  module "hana__core__dispatch" { header "hana/core/dispatch.hpp" export * }
  module "hana__core" { header "hana/core.hpp" export * }
  module "hana__core__is_a" { header "hana/core/is_a.hpp" export * }
  module "hana__core__make" { header "hana/core/make.hpp" export * }
  module "hana__core__tag_of" { header "hana/core/tag_of.hpp" export * }
  module "hana__core__to" { header "hana/core/to.hpp" export * }
  module "hana__core__when" { header "hana/core/when.hpp" export * }
  module "hana__count" { header "hana/count.hpp" export * }
  module "hana__count_if" { header "hana/count_if.hpp" export * }
  module "hana__cycle" { header "hana/cycle.hpp" export * }
  module "hana__define_struct" { header "hana/define_struct.hpp" export * }
  module "hana__detail__algorithm" { header "hana/detail/algorithm.hpp" export * }
  module "hana__detail__any_of" { header "hana/detail/any_of.hpp" export * }
  module "hana__detail__array" { header "hana/detail/array.hpp" export * }
  module "hana__detail__canonical_constant" { header "hana/detail/canonical_constant.hpp" export * }
  module "hana__detail__concepts" { header "hana/detail/concepts.hpp" export * }
  module "hana__detail__create" { header "hana/detail/create.hpp" export * }
  module "hana__detail__decay" { header "hana/detail/decay.hpp" export * }
  module "hana__detail__dispatch_if" { header "hana/detail/dispatch_if.hpp" export * }
  module "hana__detail__ebo" { header "hana/detail/ebo.hpp" export * }
  module "hana__detail__fast_and" { header "hana/detail/fast_and.hpp" export * }
  module "hana__detail__first_unsatisfied_index" { header "hana/detail/first_unsatisfied_index.hpp" export * }
  module "hana__detail__has_common_embedding" { header "hana/detail/has_common_embedding.hpp" export * }
  module "hana__detail__has_duplicates" { header "hana/detail/has_duplicates.hpp" export * }
  module "hana__detail__hash_table" { header "hana/detail/hash_table.hpp" export * }
  module "hana__detail__index_if" { header "hana/detail/index_if.hpp" export * }
  module "hana__detail__integral_constant" { header "hana/detail/integral_constant.hpp" export * }
  module "hana__detail__intrinsics" { header "hana/detail/intrinsics.hpp" export * }
  module "hana__detail__nested_by_fwd" { header "hana/detail/nested_by_fwd.hpp" export * }
  module "hana__detail__nested_by" { header "hana/detail/nested_by.hpp" export * }
  module "hana__detail__nested_than_fwd" { header "hana/detail/nested_than_fwd.hpp" export * }
  module "hana__detail__nested_than" { header "hana/detail/nested_than.hpp" export * }
  module "hana__detail__nested_to_fwd" { header "hana/detail/nested_to_fwd.hpp" export * }
  module "hana__detail__nested_to" { header "hana/detail/nested_to.hpp" export * }
  module "hana__detail__operators__adl" { header "hana/detail/operators/adl.hpp" export * }
  module "hana__detail__operators__arithmetic" { header "hana/detail/operators/arithmetic.hpp" export * }
  module "hana__detail__operators__comparable" { header "hana/detail/operators/comparable.hpp" export * }
  module "hana__detail__operators__iterable" { header "hana/detail/operators/iterable.hpp" export * }
  module "hana__detail__operators__logical" { header "hana/detail/operators/logical.hpp" export * }
  module "hana__detail__operators__monad" { header "hana/detail/operators/monad.hpp" export * }
  module "hana__detail__operators__orderable" { header "hana/detail/operators/orderable.hpp" export * }
  module "hana__detail__operators__searchable" { header "hana/detail/operators/searchable.hpp" export * }
  module "hana__detail__preprocessor" { header "hana/detail/preprocessor.hpp" export * }
  module "hana__detail__std_common_type" { header "hana/detail/std_common_type.hpp" export * }
  module "hana__detail__struct_macros" { header "hana/detail/struct_macros.hpp" export * }
  module "hana__detail__type_at" { header "hana/detail/type_at.hpp" export * }
  module "hana__detail__type_foldl1" { header "hana/detail/type_foldl1.hpp" export * }
  module "hana__detail__type_foldr1" { header "hana/detail/type_foldr1.hpp" export * }
  module "hana__detail__unpack_flatten" { header "hana/detail/unpack_flatten.hpp" export * }
  module "hana__detail__variadic__at" { header "hana/detail/variadic/at.hpp" export * }
  module "hana__detail__variadic__drop_into" { header "hana/detail/variadic/drop_into.hpp" export * }
  module "hana__detail__variadic__foldl1" { header "hana/detail/variadic/foldl1.hpp" export * }
  module "hana__detail__variadic__foldr1" { header "hana/detail/variadic/foldr1.hpp" export * }
  module "hana__detail__variadic__reverse_apply__flat" { header "hana/detail/variadic/reverse_apply/flat.hpp" export * }
  module "hana__detail__variadic__reverse_apply" { header "hana/detail/variadic/reverse_apply.hpp" export * }
  module "hana__detail__variadic__reverse_apply__unrolled" { header "hana/detail/variadic/reverse_apply/unrolled.hpp" export * }
  module "hana__detail__variadic__split_at" { header "hana/detail/variadic/split_at.hpp" export * }
  module "hana__detail__variadic__take" { header "hana/detail/variadic/take.hpp" export * }
  module "hana__detail__void_t" { header "hana/detail/void_t.hpp" export * }
  module "hana__detail__wrong" { header "hana/detail/wrong.hpp" export * }
  module "hana__difference" { header "hana/difference.hpp" export * }
  module "hana__div" { header "hana/div.hpp" export * }
  module "hana__drop_back" { header "hana/drop_back.hpp" export * }
  module "hana__drop_front_exactly" { header "hana/drop_front_exactly.hpp" export * }
  module "hana__drop_front" { header "hana/drop_front.hpp" export * }
  module "hana__drop_while" { header "hana/drop_while.hpp" export * }
  module "hana__duplicate" { header "hana/duplicate.hpp" export * }
  module "hana__empty" { header "hana/empty.hpp" export * }
  module "hana__equal" { header "hana/equal.hpp" export * }
  module "hana__erase_key" { header "hana/erase_key.hpp" export * }
  module "hana__eval" { header "hana/eval.hpp" export * }
  module "hana__eval_if" { header "hana/eval_if.hpp" export * }
  module "hana__experimental__printable" { header "hana/experimental/printable.hpp" export * }
  module "hana__experimental__type_name" { header "hana/experimental/type_name.hpp" export * }
  module "hana__experimental__types" { header "hana/experimental/types.hpp" export * }
  module "hana__experimental__view" { header "hana/experimental/view.hpp" export * }
  module "hana__ext__boost__fusion__deque" { header "hana/ext/boost/fusion/deque.hpp" export * }
  module "hana__ext__boost__fusion__detail__common" { header "hana/ext/boost/fusion/detail/common.hpp" export * }
  module "hana__ext__boost__fusion" { header "hana/ext/boost/fusion.hpp" export * }
  module "hana__ext__boost__fusion__list" { header "hana/ext/boost/fusion/list.hpp" export * }
  module "hana__ext__boost__fusion__tuple" { header "hana/ext/boost/fusion/tuple.hpp" export * }
  module "hana__ext__boost__fusion__vector" { header "hana/ext/boost/fusion/vector.hpp" export * }
  module "hana__ext__boost" { header "hana/ext/boost.hpp" export * }
  module "hana__ext__boost__mpl" { header "hana/ext/boost/mpl.hpp" export * }
  module "hana__ext__boost__mpl__integral_c" { header "hana/ext/boost/mpl/integral_c.hpp" export * }
  module "hana__ext__boost__mpl__list" { header "hana/ext/boost/mpl/list.hpp" export * }
  module "hana__ext__boost__mpl__vector" { header "hana/ext/boost/mpl/vector.hpp" export * }
  module "hana__ext__boost__tuple" { header "hana/ext/boost/tuple.hpp" export * }
  module "hana__extend" { header "hana/extend.hpp" export * }
  module "hana__extract" { header "hana/extract.hpp" export * }
  module "hana__ext__std__array" { header "hana/ext/std/array.hpp" export * }
  module "hana__ext__std" { header "hana/ext/std.hpp" export * }
  module "hana__ext__std__integer_sequence" { header "hana/ext/std/integer_sequence.hpp" export * }
  module "hana__ext__std__integral_constant" { header "hana/ext/std/integral_constant.hpp" export * }
  module "hana__ext__std__pair" { header "hana/ext/std/pair.hpp" export * }
  module "hana__ext__std__ratio" { header "hana/ext/std/ratio.hpp" export * }
  module "hana__ext__std__tuple" { header "hana/ext/std/tuple.hpp" export * }
  module "hana__ext__std__vector" { header "hana/ext/std/vector.hpp" export * }
  module "hana__fill" { header "hana/fill.hpp" export * }
  module "hana__filter" { header "hana/filter.hpp" export * }
  module "hana__find" { header "hana/find.hpp" export * }
  module "hana__find_if" { header "hana/find_if.hpp" export * }
  module "hana__first" { header "hana/first.hpp" export * }
  module "hana__flatten" { header "hana/flatten.hpp" export * }
  module "hana__fold" { header "hana/fold.hpp" export * }
  module "hana__fold_left" { header "hana/fold_left.hpp" export * }
  module "hana__fold_right" { header "hana/fold_right.hpp" export * }
  module "hana__for_each" { header "hana/for_each.hpp" export * }
  module "hana__front" { header "hana/front.hpp" export * }
  module "hana__functional__always" { header "hana/functional/always.hpp" export * }
  module "hana__functional__apply" { header "hana/functional/apply.hpp" export * }
  module "hana__functional__arg" { header "hana/functional/arg.hpp" export * }
  module "hana__functional__capture" { header "hana/functional/capture.hpp" export * }
  module "hana__functional__compose" { header "hana/functional/compose.hpp" export * }
  module "hana__functional__curry" { header "hana/functional/curry.hpp" export * }
  module "hana__functional__demux" { header "hana/functional/demux.hpp" export * }
  module "hana__functional__fix" { header "hana/functional/fix.hpp" export * }
  module "hana__functional__flip" { header "hana/functional/flip.hpp" export * }
  module "hana__functional" { header "hana/functional.hpp" export * }
  module "hana__functional__id" { header "hana/functional/id.hpp" export * }
  module "hana__functional__infix" { header "hana/functional/infix.hpp" export * }
  module "hana__functional__iterate" { header "hana/functional/iterate.hpp" export * }
  module "hana__functional__lockstep" { header "hana/functional/lockstep.hpp" export * }
  module "hana__functional__on" { header "hana/functional/on.hpp" export * }
  module "hana__functional__overload" { header "hana/functional/overload.hpp" export * }
  module "hana__functional__overload_linearly" { header "hana/functional/overload_linearly.hpp" export * }
  module "hana__functional__partial" { header "hana/functional/partial.hpp" export * }
  module "hana__functional__placeholder" { header "hana/functional/placeholder.hpp" export * }
  module "hana__functional__reverse_partial" { header "hana/functional/reverse_partial.hpp" export * }
  module "hana__fuse" { header "hana/fuse.hpp" export * }
  module "hana__fwd__accessors" { header "hana/fwd/accessors.hpp" export * }
  module "hana__fwd__adapt_adt" { header "hana/fwd/adapt_adt.hpp" export * }
  module "hana__fwd__adapt_struct" { header "hana/fwd/adapt_struct.hpp" export * }
  module "hana__fwd__adjust" { header "hana/fwd/adjust.hpp" export * }
  module "hana__fwd__adjust_if" { header "hana/fwd/adjust_if.hpp" export * }
  module "hana__fwd__all" { header "hana/fwd/all.hpp" export * }
  module "hana__fwd__all_of" { header "hana/fwd/all_of.hpp" export * }
  module "hana__fwd__and" { header "hana/fwd/and.hpp" export * }
  module "hana__fwd__any" { header "hana/fwd/any.hpp" export * }
  module "hana__fwd__any_of" { header "hana/fwd/any_of.hpp" export * }
  module "hana__fwd__ap" { header "hana/fwd/ap.hpp" export * }
  module "hana__fwd__append" { header "hana/fwd/append.hpp" export * }
  module "hana__fwd__at" { header "hana/fwd/at.hpp" export * }
  module "hana__fwd__at_key" { header "hana/fwd/at_key.hpp" export * }
  module "hana__fwd__back" { header "hana/fwd/back.hpp" export * }
  module "hana__fwd__basic_tuple" { header "hana/fwd/basic_tuple.hpp" export * }
  module "hana__fwd__bool" { header "hana/fwd/bool.hpp" export * }
  module "hana__fwd__cartesian_product" { header "hana/fwd/cartesian_product.hpp" export * }
  module "hana__fwd__chain" { header "hana/fwd/chain.hpp" export * }
  module "hana__fwd__comparing" { header "hana/fwd/comparing.hpp" export * }
  module "hana__fwd__concat" { header "hana/fwd/concat.hpp" export * }
  module "hana__fwd__concept__applicative" { header "hana/fwd/concept/applicative.hpp" export * }
  module "hana__fwd__concept__comonad" { header "hana/fwd/concept/comonad.hpp" export * }
  module "hana__fwd__concept__comparable" { header "hana/fwd/concept/comparable.hpp" export * }
  module "hana__fwd__concept__constant" { header "hana/fwd/concept/constant.hpp" export * }
  module "hana__fwd__concept__euclidean_ring" { header "hana/fwd/concept/euclidean_ring.hpp" export * }
  module "hana__fwd__concept__foldable" { header "hana/fwd/concept/foldable.hpp" export * }
  module "hana__fwd__concept__functor" { header "hana/fwd/concept/functor.hpp" export * }
  module "hana__fwd__concept__group" { header "hana/fwd/concept/group.hpp" export * }
  module "hana__fwd__concept__hashable" { header "hana/fwd/concept/hashable.hpp" export * }
  module "hana__fwd__concept__integral_constant" { header "hana/fwd/concept/integral_constant.hpp" export * }
  module "hana__fwd__concept__iterable" { header "hana/fwd/concept/iterable.hpp" export * }
  module "hana__fwd__concept__logical" { header "hana/fwd/concept/logical.hpp" export * }
  module "hana__fwd__concept__metafunction" { header "hana/fwd/concept/metafunction.hpp" export * }
  module "hana__fwd__concept__monad" { header "hana/fwd/concept/monad.hpp" export * }
  module "hana__fwd__concept__monad_plus" { header "hana/fwd/concept/monad_plus.hpp" export * }
  module "hana__fwd__concept__monoid" { header "hana/fwd/concept/monoid.hpp" export * }
  module "hana__fwd__concept__orderable" { header "hana/fwd/concept/orderable.hpp" export * }
  module "hana__fwd__concept__product" { header "hana/fwd/concept/product.hpp" export * }
  module "hana__fwd__concept__ring" { header "hana/fwd/concept/ring.hpp" export * }
  module "hana__fwd__concept__searchable" { header "hana/fwd/concept/searchable.hpp" export * }
  module "hana__fwd__concept__sequence" { header "hana/fwd/concept/sequence.hpp" export * }
  module "hana__fwd__concept__struct" { header "hana/fwd/concept/struct.hpp" export * }
  module "hana__fwd__contains" { header "hana/fwd/contains.hpp" export * }
  module "hana__fwd__core__common" { header "hana/fwd/core/common.hpp" export * }
  module "hana__fwd__core__default" { header "hana/fwd/core/default.hpp" export * }
  module "hana__fwd__core" { header "hana/fwd/core.hpp" export * }
  module "hana__fwd__core__is_a" { header "hana/fwd/core/is_a.hpp" export * }
  module "hana__fwd__core__make" { header "hana/fwd/core/make.hpp" export * }
  module "hana__fwd__core__tag_of" { header "hana/fwd/core/tag_of.hpp" export * }
  module "hana__fwd__core__to" { header "hana/fwd/core/to.hpp" export * }
  module "hana__fwd__core__when" { header "hana/fwd/core/when.hpp" export * }
  module "hana__fwd__count" { header "hana/fwd/count.hpp" export * }
  module "hana__fwd__count_if" { header "hana/fwd/count_if.hpp" export * }
  module "hana__fwd__cycle" { header "hana/fwd/cycle.hpp" export * }
  module "hana__fwd__define_struct" { header "hana/fwd/define_struct.hpp" export * }
  module "hana__fwd__difference" { header "hana/fwd/difference.hpp" export * }
  module "hana__fwd__div" { header "hana/fwd/div.hpp" export * }
  module "hana__fwd__drop_back" { header "hana/fwd/drop_back.hpp" export * }
  module "hana__fwd__drop_front_exactly" { header "hana/fwd/drop_front_exactly.hpp" export * }
  module "hana__fwd__drop_front" { header "hana/fwd/drop_front.hpp" export * }
  module "hana__fwd__drop_while" { header "hana/fwd/drop_while.hpp" export * }
  module "hana__fwd__duplicate" { header "hana/fwd/duplicate.hpp" export * }
  module "hana__fwd__empty" { header "hana/fwd/empty.hpp" export * }
  module "hana__fwd__equal" { header "hana/fwd/equal.hpp" export * }
  module "hana__fwd__erase_key" { header "hana/fwd/erase_key.hpp" export * }
  module "hana__fwd__eval" { header "hana/fwd/eval.hpp" export * }
  module "hana__fwd__eval_if" { header "hana/fwd/eval_if.hpp" export * }
  module "hana__fwd__extend" { header "hana/fwd/extend.hpp" export * }
  module "hana__fwd__extract" { header "hana/fwd/extract.hpp" export * }
  module "hana__fwd__fill" { header "hana/fwd/fill.hpp" export * }
  module "hana__fwd__filter" { header "hana/fwd/filter.hpp" export * }
  module "hana__fwd__find" { header "hana/fwd/find.hpp" export * }
  module "hana__fwd__find_if" { header "hana/fwd/find_if.hpp" export * }
  module "hana__fwd__first" { header "hana/fwd/first.hpp" export * }
  module "hana__fwd__flatten" { header "hana/fwd/flatten.hpp" export * }
  module "hana__fwd__fold" { header "hana/fwd/fold.hpp" export * }
  module "hana__fwd__fold_left" { header "hana/fwd/fold_left.hpp" export * }
  module "hana__fwd__fold_right" { header "hana/fwd/fold_right.hpp" export * }
  module "hana__fwd__for_each" { header "hana/fwd/for_each.hpp" export * }
  module "hana__fwd__front" { header "hana/fwd/front.hpp" export * }
  module "hana__fwd__fuse" { header "hana/fwd/fuse.hpp" export * }
  module "hana__fwd__greater_equal" { header "hana/fwd/greater_equal.hpp" export * }
  module "hana__fwd__greater" { header "hana/fwd/greater.hpp" export * }
  module "hana__fwd__group" { header "hana/fwd/group.hpp" export * }
  module "hana__fwd__hash" { header "hana/fwd/hash.hpp" export * }
  module "hana__fwd__if" { header "hana/fwd/if.hpp" export * }
  module "hana__fwd__insert" { header "hana/fwd/insert.hpp" export * }
  module "hana__fwd__insert_range" { header "hana/fwd/insert_range.hpp" export * }
  module "hana__fwd__integral_constant" { header "hana/fwd/integral_constant.hpp" export * }
  module "hana__fwd__intersection" { header "hana/fwd/intersection.hpp" export * }
  module "hana__fwd__intersperse" { header "hana/fwd/intersperse.hpp" export * }
  module "hana__fwd__is_disjoint" { header "hana/fwd/is_disjoint.hpp" export * }
  module "hana__fwd__is_empty" { header "hana/fwd/is_empty.hpp" export * }
  module "hana__fwd__is_subset" { header "hana/fwd/is_subset.hpp" export * }
  module "hana__fwd__keys" { header "hana/fwd/keys.hpp" export * }
  module "hana__fwd__lazy" { header "hana/fwd/lazy.hpp" export * }
  module "hana__fwd__length" { header "hana/fwd/length.hpp" export * }
  module "hana__fwd__less_equal" { header "hana/fwd/less_equal.hpp" export * }
  module "hana__fwd__less" { header "hana/fwd/less.hpp" export * }
  module "hana__fwd__lexicographical_compare" { header "hana/fwd/lexicographical_compare.hpp" export * }
  module "hana__fwd__lift" { header "hana/fwd/lift.hpp" export * }
  module "hana__fwd__map" { header "hana/fwd/map.hpp" export * }
  module "hana__fwd__max" { header "hana/fwd/max.hpp" export * }
  module "hana__fwd__maximum" { header "hana/fwd/maximum.hpp" export * }
  module "hana__fwd__members" { header "hana/fwd/members.hpp" export * }
  module "hana__fwd__min" { header "hana/fwd/min.hpp" export * }
  module "hana__fwd__minimum" { header "hana/fwd/minimum.hpp" export * }
  module "hana__fwd__minus" { header "hana/fwd/minus.hpp" export * }
  module "hana__fwd__mod" { header "hana/fwd/mod.hpp" export * }
  module "hana__fwd__monadic_compose" { header "hana/fwd/monadic_compose.hpp" export * }
  module "hana__fwd__monadic_fold_left" { header "hana/fwd/monadic_fold_left.hpp" export * }
  module "hana__fwd__monadic_fold_right" { header "hana/fwd/monadic_fold_right.hpp" export * }
  module "hana__fwd__mult" { header "hana/fwd/mult.hpp" export * }
  module "hana__fwd__negate" { header "hana/fwd/negate.hpp" export * }
  module "hana__fwd__none" { header "hana/fwd/none.hpp" export * }
  module "hana__fwd__none_of" { header "hana/fwd/none_of.hpp" export * }
  module "hana__fwd__not_equal" { header "hana/fwd/not_equal.hpp" export * }
  module "hana__fwd__not" { header "hana/fwd/not.hpp" export * }
  module "hana__fwd__one" { header "hana/fwd/one.hpp" export * }
  module "hana__fwd__optional" { header "hana/fwd/optional.hpp" export * }
  module "hana__fwd__ordering" { header "hana/fwd/ordering.hpp" export * }
  module "hana__fwd__or" { header "hana/fwd/or.hpp" export * }
  module "hana__fwd__pair" { header "hana/fwd/pair.hpp" export * }
  module "hana__fwd__partition" { header "hana/fwd/partition.hpp" export * }
  module "hana__fwd__permutations" { header "hana/fwd/permutations.hpp" export * }
  module "hana__fwd__plus" { header "hana/fwd/plus.hpp" export * }
  module "hana__fwd__power" { header "hana/fwd/power.hpp" export * }
  module "hana__fwd__prefix" { header "hana/fwd/prefix.hpp" export * }
  module "hana__fwd__prepend" { header "hana/fwd/prepend.hpp" export * }
  module "hana__fwd__product" { header "hana/fwd/product.hpp" export * }
  module "hana__fwd__range" { header "hana/fwd/range.hpp" export * }
  module "hana__fwd__remove_at" { header "hana/fwd/remove_at.hpp" export * }
  module "hana__fwd__remove" { header "hana/fwd/remove.hpp" export * }
  module "hana__fwd__remove_if" { header "hana/fwd/remove_if.hpp" export * }
  module "hana__fwd__remove_range" { header "hana/fwd/remove_range.hpp" export * }
  module "hana__fwd__repeat" { header "hana/fwd/repeat.hpp" export * }
  module "hana__fwd__replace" { header "hana/fwd/replace.hpp" export * }
  module "hana__fwd__replace_if" { header "hana/fwd/replace_if.hpp" export * }
  module "hana__fwd__replicate" { header "hana/fwd/replicate.hpp" export * }
  module "hana__fwd__reverse_fold" { header "hana/fwd/reverse_fold.hpp" export * }
  module "hana__fwd__reverse" { header "hana/fwd/reverse.hpp" export * }
  module "hana__fwd__scan_left" { header "hana/fwd/scan_left.hpp" export * }
  module "hana__fwd__scan_right" { header "hana/fwd/scan_right.hpp" export * }
  module "hana__fwd__second" { header "hana/fwd/second.hpp" export * }
  module "hana__fwd__set" { header "hana/fwd/set.hpp" export * }
  module "hana__fwd__size" { header "hana/fwd/size.hpp" export * }
  module "hana__fwd__slice" { header "hana/fwd/slice.hpp" export * }
  module "hana__fwd__sort" { header "hana/fwd/sort.hpp" export * }
  module "hana__fwd__span" { header "hana/fwd/span.hpp" export * }
  module "hana__fwd__string" { header "hana/fwd/string.hpp" export * }
  module "hana__fwd__suffix" { header "hana/fwd/suffix.hpp" export * }
  module "hana__fwd__sum" { header "hana/fwd/sum.hpp" export * }
  module "hana__fwd__symmetric_difference" { header "hana/fwd/symmetric_difference.hpp" export * }
  module "hana__fwd__take_back" { header "hana/fwd/take_back.hpp" export * }
  module "hana__fwd__take_front" { header "hana/fwd/take_front.hpp" export * }
  module "hana__fwd__take_while" { header "hana/fwd/take_while.hpp" export * }
  module "hana__fwd__tap" { header "hana/fwd/tap.hpp" export * }
  module "hana__fwd__then" { header "hana/fwd/then.hpp" export * }
  module "hana__fwd__transform" { header "hana/fwd/transform.hpp" export * }
  module "hana__fwd__tuple" { header "hana/fwd/tuple.hpp" export * }
  module "hana__fwd__type" { header "hana/fwd/type.hpp" export * }
  module "hana__fwd__unfold_left" { header "hana/fwd/unfold_left.hpp" export * }
  module "hana__fwd__unfold_right" { header "hana/fwd/unfold_right.hpp" export * }
  module "hana__fwd__union" { header "hana/fwd/union.hpp" export * }
  module "hana__fwd__unique" { header "hana/fwd/unique.hpp" export * }
  module "hana__fwd__unpack" { header "hana/fwd/unpack.hpp" export * }
  module "hana__fwd__value" { header "hana/fwd/value.hpp" export * }
  module "hana__fwd__while" { header "hana/fwd/while.hpp" export * }
  module "hana__fwd__zero" { header "hana/fwd/zero.hpp" export * }
  module "hana__fwd__zip" { header "hana/fwd/zip.hpp" export * }
  module "hana__fwd__zip_shortest" { header "hana/fwd/zip_shortest.hpp" export * }
  module "hana__fwd__zip_shortest_with" { header "hana/fwd/zip_shortest_with.hpp" export * }
  module "hana__fwd__zip_with" { header "hana/fwd/zip_with.hpp" export * }
  module "hana__greater_equal" { header "hana/greater_equal.hpp" export * }
  module "hana__greater" { header "hana/greater.hpp" export * }
  module "hana__group" { header "hana/group.hpp" export * }
  module "hana__hash" { header "hana/hash.hpp" export * }
  module "hana" { header "hana.hpp" export * }
  module "hana__if" { header "hana/if.hpp" export * }
  module "hana__insert" { header "hana/insert.hpp" export * }
  module "hana__insert_range" { header "hana/insert_range.hpp" export * }
  module "hana__integral_constant" { header "hana/integral_constant.hpp" export * }
  module "hana__intersection" { header "hana/intersection.hpp" export * }
  module "hana__intersperse" { header "hana/intersperse.hpp" export * }
  module "hana__is_disjoint" { header "hana/is_disjoint.hpp" export * }
  module "hana__is_empty" { header "hana/is_empty.hpp" export * }
  module "hana__is_subset" { header "hana/is_subset.hpp" export * }
  module "hana__keys" { header "hana/keys.hpp" export * }
  module "hana__lazy" { header "hana/lazy.hpp" export * }
  module "hana__length" { header "hana/length.hpp" export * }
  module "hana__less_equal" { header "hana/less_equal.hpp" export * }
  module "hana__less" { header "hana/less.hpp" export * }
  module "hana__lexicographical_compare" { header "hana/lexicographical_compare.hpp" export * }
  module "hana__lift" { header "hana/lift.hpp" export * }
  module "hana__map" { header "hana/map.hpp" export * }
  module "hana__max" { header "hana/max.hpp" export * }
  module "hana__maximum" { header "hana/maximum.hpp" export * }
  module "hana__members" { header "hana/members.hpp" export * }
  module "hana__min" { header "hana/min.hpp" export * }
  module "hana__minimum" { header "hana/minimum.hpp" export * }
  module "hana__minus" { header "hana/minus.hpp" export * }
  module "hana__mod" { header "hana/mod.hpp" export * }
  module "hana__monadic_compose" { header "hana/monadic_compose.hpp" export * }
  module "hana__monadic_fold_left" { header "hana/monadic_fold_left.hpp" export * }
  module "hana__monadic_fold_right" { header "hana/monadic_fold_right.hpp" export * }
  module "hana__mult" { header "hana/mult.hpp" export * }
  module "hana__negate" { header "hana/negate.hpp" export * }
  module "hana__none" { header "hana/none.hpp" export * }
  module "hana__none_of" { header "hana/none_of.hpp" export * }
  module "hana__not_equal" { header "hana/not_equal.hpp" export * }
  module "hana__not" { header "hana/not.hpp" export * }
  module "hana__one" { header "hana/one.hpp" export * }
  module "hana__optional" { header "hana/optional.hpp" export * }
  module "hana__ordering" { header "hana/ordering.hpp" export * }
  module "hana__or" { header "hana/or.hpp" export * }
  module "hana__pair" { header "hana/pair.hpp" export * }
  module "hana__partition" { header "hana/partition.hpp" export * }
  module "hana__permutations" { header "hana/permutations.hpp" export * }
  module "hana__plus" { header "hana/plus.hpp" export * }
  module "hana__power" { header "hana/power.hpp" export * }
  module "hana__prefix" { header "hana/prefix.hpp" export * }
  module "hana__prepend" { header "hana/prepend.hpp" export * }
  module "hana__product" { header "hana/product.hpp" export * }
  module "hana__range" { header "hana/range.hpp" export * }
  module "hana__remove_at" { header "hana/remove_at.hpp" export * }
  module "hana__remove" { header "hana/remove.hpp" export * }
  module "hana__remove_if" { header "hana/remove_if.hpp" export * }
  module "hana__remove_range" { header "hana/remove_range.hpp" export * }
  module "hana__repeat" { header "hana/repeat.hpp" export * }
  module "hana__replace" { header "hana/replace.hpp" export * }
  module "hana__replace_if" { header "hana/replace_if.hpp" export * }
  module "hana__replicate" { header "hana/replicate.hpp" export * }
  module "hana__reverse_fold" { header "hana/reverse_fold.hpp" export * }
  module "hana__reverse" { header "hana/reverse.hpp" export * }
  module "hana__scan_left" { header "hana/scan_left.hpp" export * }
  module "hana__scan_right" { header "hana/scan_right.hpp" export * }
  module "hana__second" { header "hana/second.hpp" export * }
  module "hana__set" { header "hana/set.hpp" export * }
  module "hana__size" { header "hana/size.hpp" export * }
  module "hana__slice" { header "hana/slice.hpp" export * }
  module "hana__sort" { header "hana/sort.hpp" export * }
  module "hana__span" { header "hana/span.hpp" export * }
  module "hana__string" { header "hana/string.hpp" export * }
  module "hana__suffix" { header "hana/suffix.hpp" export * }
  module "hana__sum" { header "hana/sum.hpp" export * }
  module "hana__symmetric_difference" { header "hana/symmetric_difference.hpp" export * }
  module "hana__take_back" { header "hana/take_back.hpp" export * }
  module "hana__take_front" { header "hana/take_front.hpp" export * }
  module "hana__take_while" { header "hana/take_while.hpp" export * }
  module "hana__tap" { header "hana/tap.hpp" export * }
  module "hana__then" { header "hana/then.hpp" export * }
  module "hana__traits" { header "hana/traits.hpp" export * }
  module "hana__transform" { header "hana/transform.hpp" export * }
  module "hana__tuple" { header "hana/tuple.hpp" export * }
  module "hana__type" { header "hana/type.hpp" export * }
  module "hana__unfold_left" { header "hana/unfold_left.hpp" export * }
  module "hana__unfold_right" { header "hana/unfold_right.hpp" export * }
  module "hana__union" { header "hana/union.hpp" export * }
  module "hana__unique" { header "hana/unique.hpp" export * }
  module "hana__unpack" { header "hana/unpack.hpp" export * }
  module "hana__value" { header "hana/value.hpp" export * }
  module "hana__version" { header "hana/version.hpp" export * }
  module "hana__while" { header "hana/while.hpp" export * }
  module "hana__zero" { header "hana/zero.hpp" export * }
  module "hana__zip" { header "hana/zip.hpp" export * }
  module "hana__zip_shortest" { header "hana/zip_shortest.hpp" export * }
  module "hana__zip_shortest_with" { header "hana/zip_shortest_with.hpp" export * }
  module "hana__zip_with" { header "hana/zip_with.hpp" export * }
}
module boost_heap {
  export *
  module "heap__binomial_heap" { header "heap/binomial_heap.hpp" export * }
  module "heap__d_ary_heap" { header "heap/d_ary_heap.hpp" export * }
  module "heap__detail__heap_comparison" { header "heap/detail/heap_comparison.hpp" export * }
  module "heap__detail__heap_node" { header "heap/detail/heap_node.hpp" export * }
  module "heap__detail__ilog2" { header "heap/detail/ilog2.hpp" export * }
  module "heap__detail__mutable_heap" { header "heap/detail/mutable_heap.hpp" export * }
  module "heap__detail__ordered_adaptor_iterator" { header "heap/detail/ordered_adaptor_iterator.hpp" export * }
  module "heap__detail__stable_heap" { header "heap/detail/stable_heap.hpp" export * }
  module "heap__detail__tree_iterator" { header "heap/detail/tree_iterator.hpp" export * }
  module "heap__fibonacci_heap" { header "heap/fibonacci_heap.hpp" export * }
  module "heap__heap_concepts" { header "heap/heap_concepts.hpp" export * }
  module "heap__heap_merge" { header "heap/heap_merge.hpp" export * }
  module "heap__pairing_heap" { header "heap/pairing_heap.hpp" export * }
  module "heap__policies" { header "heap/policies.hpp" export * }
  module "heap__priority_queue" { header "heap/priority_queue.hpp" export * }
  module "heap__skew_heap" { header "heap/skew_heap.hpp" export * }
}
module boost_icl {
  export *
  module "icl__associative_element_container" { header "icl/associative_element_container.hpp" export * }
  module "icl__associative_interval_container" { header "icl/associative_interval_container.hpp" export * }
  module "icl__closed_interval" { header "icl/closed_interval.hpp" export * }
  module "icl__concept__comparable" { header "icl/concept/comparable.hpp" export * }
  module "icl__concept__container" { header "icl/concept/container.hpp" export * }
  module "icl__concept__element_associator" { header "icl/concept/element_associator.hpp" export * }
  module "icl__continuous_interval" { header "icl/continuous_interval.hpp" export * }
  module "icl__detail__boost_config" { header "icl/detail/boost_config.hpp" export * }
  module "icl__detail__concept_check" { header "icl/detail/concept_check.hpp" export * }
  module "icl__detail__design_config" { header "icl/detail/design_config.hpp" export * }
  module "icl__detail__map_algo" { header "icl/detail/map_algo.hpp" export * }
  module "icl__detail__notate" { header "icl/detail/notate.hpp" export * }
  module "icl__detail__on_absorbtion" { header "icl/detail/on_absorbtion.hpp" export * }
  module "icl__detail__relation_state" { header "icl/detail/relation_state.hpp" export * }
  module "icl__detail__set_algo" { header "icl/detail/set_algo.hpp" export * }
  module "icl__detail__std_set" { header "icl/detail/std_set.hpp" export * }
  module "icl__detail__subset_comparer" { header "icl/detail/subset_comparer.hpp" export * }
  module "icl__discrete_interval" { header "icl/discrete_interval.hpp" export * }
  module "icl__dynamic_interval_traits" { header "icl/dynamic_interval_traits.hpp" export * }
  module "icl__functors" { header "icl/functors.hpp" export * }
  module "icl__gregorian" { header "icl/gregorian.hpp" export * }
  module "icl__impl_config" { header "icl/impl_config.hpp" export * }
  module "icl__interval_base_set" { header "icl/interval_base_set.hpp" export * }
  module "icl__interval_bounds" { header "icl/interval_bounds.hpp" export * }
  module "icl__interval" { header "icl/interval.hpp" export * }
  module "icl__interval_map" { header "icl/interval_map.hpp" export * }
  module "icl__interval_set" { header "icl/interval_set.hpp" export * }
  module "icl__map" { header "icl/map.hpp" export * }
  module "icl__open_interval" { header "icl/open_interval.hpp" export * }
  module "icl__predicates__distinct_equal" { header "icl/predicates/distinct_equal.hpp" export * }
  module "icl__predicates__element_equal" { header "icl/predicates/element_equal.hpp" export * }
  module "icl__predicates__std_equal" { header "icl/predicates/std_equal.hpp" export * }
  module "icl__predicates__sub_super_set" { header "icl/predicates/sub_super_set.hpp" export * }
  module "icl__ptime" { header "icl/ptime.hpp" export * }
  module "icl__rational" { header "icl/rational.hpp" export * }
  module "icl__separate_interval_set" { header "icl/separate_interval_set.hpp" export * }
  module "icl__set" { header "icl/set.hpp" export * }
  module "icl__split_interval_map" { header "icl/split_interval_map.hpp" export * }
  module "icl__split_interval_set" { header "icl/split_interval_set.hpp" export * }
  module "icl__type_traits__adds_inversely" { header "icl/type_traits/adds_inversely.hpp" export * }
  module "icl__type_traits__codomain_type_of" { header "icl/type_traits/codomain_type_of.hpp" export * }
  module "icl__type_traits__difference" { header "icl/type_traits/difference.hpp" export * }
  module "icl__type_traits__domain_type_of" { header "icl/type_traits/domain_type_of.hpp" export * }
  module "icl__type_traits__element_type_of" { header "icl/type_traits/element_type_of.hpp" export * }
  module "icl__type_traits__has_inverse" { header "icl/type_traits/has_inverse.hpp" export * }
  module "icl__type_traits__has_set_semantics" { header "icl/type_traits/has_set_semantics.hpp" export * }
  module "icl__type_traits__identity_element" { header "icl/type_traits/identity_element.hpp" export * }
  module "icl__type_traits__interval_type_default" { header "icl/type_traits/interval_type_default.hpp" export * }
  module "icl__type_traits__interval_type_of" { header "icl/type_traits/interval_type_of.hpp" export * }
  module "icl__type_traits__is_associative_element_container" { header "icl/type_traits/is_associative_element_container.hpp" export * }
  module "icl__type_traits__is_combinable" { header "icl/type_traits/is_combinable.hpp" export * }
  module "icl__type_traits__is_concept_equivalent" { header "icl/type_traits/is_concept_equivalent.hpp" export * }
  module "icl__type_traits__is_container" { header "icl/type_traits/is_container.hpp" export * }
  module "icl__type_traits__is_element_container" { header "icl/type_traits/is_element_container.hpp" export * }
  module "icl__type_traits__is_icl_container" { header "icl/type_traits/is_icl_container.hpp" export * }
  module "icl__type_traits__is_interval_container" { header "icl/type_traits/is_interval_container.hpp" export * }
  module "icl__type_traits__is_interval_joiner" { header "icl/type_traits/is_interval_joiner.hpp" export * }
  module "icl__type_traits__is_interval_separator" { header "icl/type_traits/is_interval_separator.hpp" export * }
  module "icl__type_traits__is_interval_splitter" { header "icl/type_traits/is_interval_splitter.hpp" export * }
  module "icl__type_traits__is_map" { header "icl/type_traits/is_map.hpp" export * }
  module "icl__type_traits__is_set" { header "icl/type_traits/is_set.hpp" export * }
  module "icl__type_traits__no_type" { header "icl/type_traits/no_type.hpp" export * }
  module "icl__type_traits__predicate" { header "icl/type_traits/predicate.hpp" export * }
  module "icl__type_traits__segment_type_of" { header "icl/type_traits/segment_type_of.hpp" export * }
  module "icl__type_traits__to_string" { header "icl/type_traits/to_string.hpp" export * }
  module "icl__type_traits__type_to_string" { header "icl/type_traits/type_to_string.hpp" export * }
  module "icl__type_traits__unit_element" { header "icl/type_traits/unit_element.hpp" export * }
}
module boost_implicit_cast { export * module "implicit_cast" { header "implicit_cast.hpp" export * } }
module boost_integer {
  export *
  module "integer__common_factor_ct" { header "integer/common_factor_ct.hpp" export * }
  module "integer__common_factor" { header "integer/common_factor.hpp" export * }
  module "integer__common_factor_rt" { header "integer/common_factor_rt.hpp" export * }
  module "integer" { header "integer.hpp" export * }
  module "integer__integer_log2" { header "integer/integer_log2.hpp" export * }
  module "integer__integer_mask" { header "integer/integer_mask.hpp" export * }
  module "integer__static_log2" { header "integer/static_log2.hpp" export * }
  module "integer__static_min_max" { header "integer/static_min_max.hpp" export * }
}
module boost_integer_fwd { export * module "integer_fwd" { header "integer_fwd.hpp" export * } }
module boost_integer_traits { export * module "integer_traits" { header "integer_traits.hpp" export * } }
module boost_interprocess {
  export *
  module "interprocess__allocators__adaptive_pool" { header "interprocess/allocators/adaptive_pool.hpp" export * }
  module "interprocess__allocators__allocator" { header "interprocess/allocators/allocator.hpp" export * }
  module "interprocess__allocators__cached_adaptive_pool" { header "interprocess/allocators/cached_adaptive_pool.hpp" export * }
  module "interprocess__allocators__cached_node_allocator" { header "interprocess/allocators/cached_node_allocator.hpp" export * }
  module "interprocess__allocators__detail__adaptive_node_pool" { header "interprocess/allocators/detail/adaptive_node_pool.hpp" export * }
  module "interprocess__allocators__detail__allocator_common" { header "interprocess/allocators/detail/allocator_common.hpp" export * }
  module "interprocess__allocators__detail__node_pool" { header "interprocess/allocators/detail/node_pool.hpp" export * }
  module "interprocess__allocators__node_allocator" { header "interprocess/allocators/node_allocator.hpp" export * }
  module "interprocess__allocators__private_adaptive_pool" { header "interprocess/allocators/private_adaptive_pool.hpp" export * }
  module "interprocess__allocators__private_node_allocator" { header "interprocess/allocators/private_node_allocator.hpp" export * }
  module "interprocess__anonymous_shared_memory" { header "interprocess/anonymous_shared_memory.hpp" export * }
  module "interprocess__containers__allocation_type" { header "interprocess/containers/allocation_type.hpp" export * }
  module "interprocess__containers__containers_fwd" { header "interprocess/containers/containers_fwd.hpp" export * }
  module "interprocess__containers__deque" { header "interprocess/containers/deque.hpp" export * }
  module "interprocess__containers__flat_map" { header "interprocess/containers/flat_map.hpp" export * }
  module "interprocess__containers__flat_set" { header "interprocess/containers/flat_set.hpp" export * }
  module "interprocess__containers__list" { header "interprocess/containers/list.hpp" export * }
  module "interprocess__containers__map" { header "interprocess/containers/map.hpp" export * }
  module "interprocess__containers__pair" { header "interprocess/containers/pair.hpp" export * }
  module "interprocess__containers__set" { header "interprocess/containers/set.hpp" export * }
  module "interprocess__containers__slist" { header "interprocess/containers/slist.hpp" export * }
  module "interprocess__containers__stable_vector" { header "interprocess/containers/stable_vector.hpp" export * }
  module "interprocess__containers__string" { header "interprocess/containers/string.hpp" export * }
  module "interprocess__containers__vector" { header "interprocess/containers/vector.hpp" export * }
  module "interprocess__containers__version_type" { header "interprocess/containers/version_type.hpp" export * }
  module "interprocess__creation_tags" { header "interprocess/creation_tags.hpp" export * }
  module "interprocess__detail__atomic" { header "interprocess/detail/atomic.hpp" export * }
  module "interprocess__detail__cast_tags" { header "interprocess/detail/cast_tags.hpp" export * }
  module "interprocess__detail__config_begin" { header "interprocess/detail/config_begin.hpp" export * }
  module "interprocess__detail__config_end" { header "interprocess/detail/config_end.hpp" export * }
  module "interprocess__detail__config_external_begin" { header "interprocess/detail/config_external_begin.hpp" export * }
  module "interprocess__detail__config_external_end" { header "interprocess/detail/config_external_end.hpp" export * }
  module "interprocess__detail__file_locking_helpers" { header "interprocess/detail/file_locking_helpers.hpp" export * }
  module "interprocess__detail__in_place_interface" { header "interprocess/detail/in_place_interface.hpp" export * }
  module "interprocess__detail__intermodule_singleton_common" { header "interprocess/detail/intermodule_singleton_common.hpp" export * }
  module "interprocess__detail__intermodule_singleton" { header "interprocess/detail/intermodule_singleton.hpp" export * }
  module "interprocess__detail__interprocess_tester" { header "interprocess/detail/interprocess_tester.hpp" export * }
  module "interprocess__detail__managed_global_memory" { header "interprocess/detail/managed_global_memory.hpp" export * }
  module "interprocess__detail__managed_memory_impl" { header "interprocess/detail/managed_memory_impl.hpp" export * }
  module "interprocess__detail__managed_open_or_create_impl" { header "interprocess/detail/managed_open_or_create_impl.hpp" export * }
  module "interprocess__detail__math_functions" { header "interprocess/detail/math_functions.hpp" export * }
  module "interprocess__detail__min_max" { header "interprocess/detail/min_max.hpp" export * }
  module "interprocess__detail__move" { header "interprocess/detail/move.hpp" export * }
  module "interprocess__detail__mpl" { header "interprocess/detail/mpl.hpp" export * }
  module "interprocess__detail__named_proxy" { header "interprocess/detail/named_proxy.hpp" export * }
  module "interprocess__detail__nothrow" { header "interprocess/detail/nothrow.hpp" export * }
  module "interprocess__detail__os_file_functions" { header "interprocess/detail/os_file_functions.hpp" export * }
  module "interprocess__detail__os_thread_functions" { header "interprocess/detail/os_thread_functions.hpp" export * }
  module "interprocess__detail__pointer_type" { header "interprocess/detail/pointer_type.hpp" export * }
  module "interprocess__detail__portable_intermodule_singleton" { header "interprocess/detail/portable_intermodule_singleton.hpp" export * }
  module "interprocess__detail__posix_time_types_wrk" { header "interprocess/detail/posix_time_types_wrk.hpp" export * }
  module "interprocess__detail__ptime_wrk" { header "interprocess/detail/ptime_wrk.hpp" export * }
  module "interprocess__detail__robust_emulation" { header "interprocess/detail/robust_emulation.hpp" export * }
  module "interprocess__detail__segment_manager_helper" { header "interprocess/detail/segment_manager_helper.hpp" export * }
  module "interprocess__detail__shared_dir_helpers" { header "interprocess/detail/shared_dir_helpers.hpp" export * }
  module "interprocess__detail__simple_swap" { header "interprocess/detail/simple_swap.hpp" export * }
  module "interprocess__detail__std_fwd" { header "interprocess/detail/std_fwd.hpp" export * }
  module "interprocess__detail__transform_iterator" { header "interprocess/detail/transform_iterator.hpp" export * }
  module "interprocess__detail__type_traits" { header "interprocess/detail/type_traits.hpp" export * }
  module "interprocess__detail__utilities" { header "interprocess/detail/utilities.hpp" export * }
  module "interprocess__detail__variadic_templates_tools" { header "interprocess/detail/variadic_templates_tools.hpp" export * }
  module "interprocess__detail__workaround" { header "interprocess/detail/workaround.hpp" export * }
  module "interprocess__detail__xsi_shared_memory_file_wrapper" { header "interprocess/detail/xsi_shared_memory_file_wrapper.hpp" export * }
  module "interprocess__errors" { header "interprocess/errors.hpp" export * }
  module "interprocess__exceptions" { header "interprocess/exceptions.hpp" export * }
  module "interprocess__file_mapping" { header "interprocess/file_mapping.hpp" export * }
  module "interprocess__indexes__flat_map_index" { header "interprocess/indexes/flat_map_index.hpp" export * }
  module "interprocess__indexes__iset_index" { header "interprocess/indexes/iset_index.hpp" export * }
  module "interprocess__indexes__iunordered_set_index" { header "interprocess/indexes/iunordered_set_index.hpp" export * }
  module "interprocess__indexes__map_index" { header "interprocess/indexes/map_index.hpp" export * }
  module "interprocess__indexes__null_index" { header "interprocess/indexes/null_index.hpp" export * }
  module "interprocess__indexes__unordered_map_index" { header "interprocess/indexes/unordered_map_index.hpp" export * }
  module "interprocess__interprocess_fwd" { header "interprocess/interprocess_fwd.hpp" export * }
  module "interprocess__ipc__message_queue" { header "interprocess/ipc/message_queue.hpp" export * }
  module "interprocess__managed_external_buffer" { header "interprocess/managed_external_buffer.hpp" export * }
  module "interprocess__managed_heap_memory" { header "interprocess/managed_heap_memory.hpp" export * }
  module "interprocess__managed_mapped_file" { header "interprocess/managed_mapped_file.hpp" export * }
  module "interprocess__managed_shared_memory" { header "interprocess/managed_shared_memory.hpp" export * }
  module "interprocess__managed_xsi_shared_memory" { header "interprocess/managed_xsi_shared_memory.hpp" export * }
  module "interprocess__mapped_region" { header "interprocess/mapped_region.hpp" export * }
  module "interprocess__mem_algo__detail__mem_algo_common" { header "interprocess/mem_algo/detail/mem_algo_common.hpp" export * }
  module "interprocess__mem_algo__detail__simple_seq_fit_impl" { header "interprocess/mem_algo/detail/simple_seq_fit_impl.hpp" export * }
  module "interprocess__mem_algo__rbtree_best_fit" { header "interprocess/mem_algo/rbtree_best_fit.hpp" export * }
  module "interprocess__mem_algo__simple_seq_fit" { header "interprocess/mem_algo/simple_seq_fit.hpp" export * }
  module "interprocess__offset_ptr" { header "interprocess/offset_ptr.hpp" export * }
  module "interprocess__permissions" { header "interprocess/permissions.hpp" export * }
  module "interprocess__segment_manager" { header "interprocess/segment_manager.hpp" export * }
  module "interprocess__shared_memory_object" { header "interprocess/shared_memory_object.hpp" export * }
  module "interprocess__smart_ptr__deleter" { header "interprocess/smart_ptr/deleter.hpp" export * }
  module "interprocess__smart_ptr__detail__bad_weak_ptr" { header "interprocess/smart_ptr/detail/bad_weak_ptr.hpp" export * }
  module "interprocess__smart_ptr__detail__shared_count" { header "interprocess/smart_ptr/detail/shared_count.hpp" export * }
  module "interprocess__smart_ptr__detail__sp_counted_base_atomic" { header "interprocess/smart_ptr/detail/sp_counted_base_atomic.hpp" export * }
  module "interprocess__smart_ptr__detail__sp_counted_base" { header "interprocess/smart_ptr/detail/sp_counted_base.hpp" export * }
  module "interprocess__smart_ptr__detail__sp_counted_impl" { header "interprocess/smart_ptr/detail/sp_counted_impl.hpp" export * }
  module "interprocess__smart_ptr__enable_shared_from_this" { header "interprocess/smart_ptr/enable_shared_from_this.hpp" export * }
  module "interprocess__smart_ptr__intrusive_ptr" { header "interprocess/smart_ptr/intrusive_ptr.hpp" export * }
  module "interprocess__smart_ptr__scoped_ptr" { header "interprocess/smart_ptr/scoped_ptr.hpp" export * }
  module "interprocess__smart_ptr__shared_ptr" { header "interprocess/smart_ptr/shared_ptr.hpp" export * }
  module "interprocess__smart_ptr__unique_ptr" { header "interprocess/smart_ptr/unique_ptr.hpp" export * }
  module "interprocess__smart_ptr__weak_ptr" { header "interprocess/smart_ptr/weak_ptr.hpp" export * }
  module "interprocess__streams__bufferstream" { header "interprocess/streams/bufferstream.hpp" export * }
  module "interprocess__streams__vectorstream" { header "interprocess/streams/vectorstream.hpp" export * }
  module "interprocess__sync__detail__common_algorithms" { header "interprocess/sync/detail/common_algorithms.hpp" export * }
  module "interprocess__sync__detail__condition_algorithm_8a" { header "interprocess/sync/detail/condition_algorithm_8a.hpp" export * }
  module "interprocess__sync__detail__condition_any_algorithm" { header "interprocess/sync/detail/condition_any_algorithm.hpp" export * }
  module "interprocess__sync__detail__locks" { header "interprocess/sync/detail/locks.hpp" export * }
  module "interprocess__sync__file_lock" { header "interprocess/sync/file_lock.hpp" export * }
  module "interprocess__sync__interprocess_condition_any" { header "interprocess/sync/interprocess_condition_any.hpp" export * }
  module "interprocess__sync__interprocess_condition" { header "interprocess/sync/interprocess_condition.hpp" export * }
  module "interprocess__sync__interprocess_mutex" { header "interprocess/sync/interprocess_mutex.hpp" export * }
  module "interprocess__sync__interprocess_recursive_mutex" { header "interprocess/sync/interprocess_recursive_mutex.hpp" export * }
  module "interprocess__sync__interprocess_semaphore" { header "interprocess/sync/interprocess_semaphore.hpp" export * }
  module "interprocess__sync__interprocess_sharable_mutex" { header "interprocess/sync/interprocess_sharable_mutex.hpp" export * }
  module "interprocess__sync__interprocess_upgradable_mutex" { header "interprocess/sync/interprocess_upgradable_mutex.hpp" export * }
  module "interprocess__sync__lock_options" { header "interprocess/sync/lock_options.hpp" export * }
  module "interprocess__sync__mutex_family" { header "interprocess/sync/mutex_family.hpp" export * }
  module "interprocess__sync__named_condition_any" { header "interprocess/sync/named_condition_any.hpp" export * }
  module "interprocess__sync__named_condition" { header "interprocess/sync/named_condition.hpp" export * }
  module "interprocess__sync__named_mutex" { header "interprocess/sync/named_mutex.hpp" export * }
  module "interprocess__sync__named_recursive_mutex" { header "interprocess/sync/named_recursive_mutex.hpp" export * }
  module "interprocess__sync__named_semaphore" { header "interprocess/sync/named_semaphore.hpp" export * }
  module "interprocess__sync__named_sharable_mutex" { header "interprocess/sync/named_sharable_mutex.hpp" export * }
  module "interprocess__sync__named_upgradable_mutex" { header "interprocess/sync/named_upgradable_mutex.hpp" export * }
  module "interprocess__sync__null_mutex" { header "interprocess/sync/null_mutex.hpp" export * }
  module "interprocess__sync__posix__condition" { header "interprocess/sync/posix/condition.hpp" export * }
  module "interprocess__sync__posix__mutex" { header "interprocess/sync/posix/mutex.hpp" export * }
  module "interprocess__sync__posix__named_mutex" { header "interprocess/sync/posix/named_mutex.hpp" export * }
  module "interprocess__sync__posix__named_semaphore" { header "interprocess/sync/posix/named_semaphore.hpp" export * }
  module "interprocess__sync__posix__pthread_helpers" { header "interprocess/sync/posix/pthread_helpers.hpp" export * }
  module "interprocess__sync__posix__ptime_to_timespec" { header "interprocess/sync/posix/ptime_to_timespec.hpp" export * }
  module "interprocess__sync__posix__recursive_mutex" { header "interprocess/sync/posix/recursive_mutex.hpp" export * }
  module "interprocess__sync__posix__semaphore" { header "interprocess/sync/posix/semaphore.hpp" export * }
  module "interprocess__sync__posix__semaphore_wrapper" { header "interprocess/sync/posix/semaphore_wrapper.hpp" export * }
  module "interprocess__sync__scoped_lock" { header "interprocess/sync/scoped_lock.hpp" export * }
  module "interprocess__sync__sharable_lock" { header "interprocess/sync/sharable_lock.hpp" export * }
  module "interprocess__sync__shm__named_condition_any" { header "interprocess/sync/shm/named_condition_any.hpp" export * }
  module "interprocess__sync__shm__named_condition" { header "interprocess/sync/shm/named_condition.hpp" export * }
  module "interprocess__sync__shm__named_creation_functor" { header "interprocess/sync/shm/named_creation_functor.hpp" export * }
  module "interprocess__sync__shm__named_mutex" { header "interprocess/sync/shm/named_mutex.hpp" export * }
  module "interprocess__sync__shm__named_recursive_mutex" { header "interprocess/sync/shm/named_recursive_mutex.hpp" export * }
  module "interprocess__sync__shm__named_semaphore" { header "interprocess/sync/shm/named_semaphore.hpp" export * }
  module "interprocess__sync__shm__named_upgradable_mutex" { header "interprocess/sync/shm/named_upgradable_mutex.hpp" export * }
  module "interprocess__sync__spin__condition" { header "interprocess/sync/spin/condition.hpp" export * }
  module "interprocess__sync__spin__mutex" { header "interprocess/sync/spin/mutex.hpp" export * }
  module "interprocess__sync__spin__recursive_mutex" { header "interprocess/sync/spin/recursive_mutex.hpp" export * }
  module "interprocess__sync__spin__semaphore" { header "interprocess/sync/spin/semaphore.hpp" export * }
  module "interprocess__sync__spin__wait" { header "interprocess/sync/spin/wait.hpp" export * }
  module "interprocess__xsi_key" { header "interprocess/xsi_key.hpp" export * }
  module "interprocess__xsi_shared_memory" { header "interprocess/xsi_shared_memory.hpp" export * }
}
module boost_intrusive {
  export *
  module "intrusive__any_hook" { header "intrusive/any_hook.hpp" export * }
  module "intrusive__avl_set_hook" { header "intrusive/avl_set_hook.hpp" export * }
  module "intrusive__avl_set" { header "intrusive/avl_set.hpp" export * }
  module "intrusive__avltree_algorithms" { header "intrusive/avltree_algorithms.hpp" export * }
  module "intrusive__avltree" { header "intrusive/avltree.hpp" export * }
  module "intrusive__bs_set_hook" { header "intrusive/bs_set_hook.hpp" export * }
  module "intrusive__bs_set" { header "intrusive/bs_set.hpp" export * }
  module "intrusive__bstree_algorithms" { header "intrusive/bstree_algorithms.hpp" export * }
  module "intrusive__bstree" { header "intrusive/bstree.hpp" export * }
  module "intrusive__circular_list_algorithms" { header "intrusive/circular_list_algorithms.hpp" export * }
  module "intrusive__circular_slist_algorithms" { header "intrusive/circular_slist_algorithms.hpp" export * }
  module "intrusive__derivation_value_traits" { header "intrusive/derivation_value_traits.hpp" export * }
  module "intrusive__detail__algorithm" { header "intrusive/detail/algorithm.hpp" export * }
  module "intrusive__detail__algo_type" { header "intrusive/detail/algo_type.hpp" export * }
  module "intrusive__detail__any_node_and_algorithms" { header "intrusive/detail/any_node_and_algorithms.hpp" export * }
  module "intrusive__detail__array_initializer" { header "intrusive/detail/array_initializer.hpp" export * }
  module "intrusive__detail__assert" { header "intrusive/detail/assert.hpp" export * }
  module "intrusive__detail__avltree_node" { header "intrusive/detail/avltree_node.hpp" export * }
  module "intrusive__detail__bstree_algorithms_base" { header "intrusive/detail/bstree_algorithms_base.hpp" export * }
  module "intrusive__detail__common_slist_algorithms" { header "intrusive/detail/common_slist_algorithms.hpp" export * }
  module "intrusive__detail__config_begin" { header "intrusive/detail/config_begin.hpp" export * }
  module "intrusive__detail__config_end" { header "intrusive/detail/config_end.hpp" export * }
  module "intrusive__detail__default_header_holder" { header "intrusive/detail/default_header_holder.hpp" export * }
  module "intrusive__detail__ebo_functor_holder" { header "intrusive/detail/ebo_functor_holder.hpp" export * }
  module "intrusive__detail__empty_node_checker" { header "intrusive/detail/empty_node_checker.hpp" export * }
  module "intrusive__detail__equal_to_value" { header "intrusive/detail/equal_to_value.hpp" export * }
  module "intrusive__detail__exception_disposer" { header "intrusive/detail/exception_disposer.hpp" export * }
  module "intrusive__detail__function_detector" { header "intrusive/detail/function_detector.hpp" export * }
  module "intrusive__detail__get_value_traits" { header "intrusive/detail/get_value_traits.hpp" export * }
  module "intrusive__detail__hashtable_node" { header "intrusive/detail/hashtable_node.hpp" export * }
  module "intrusive__detail__hook_traits" { header "intrusive/detail/hook_traits.hpp" export * }
  module "intrusive__detail__iiterator" { header "intrusive/detail/iiterator.hpp" export * }
  module "intrusive__detail__is_stateful_value_traits" { header "intrusive/detail/is_stateful_value_traits.hpp" export * }
  module "intrusive__detail__iterator" { header "intrusive/detail/iterator.hpp" export * }
  module "intrusive__detail__key_nodeptr_comp" { header "intrusive/detail/key_nodeptr_comp.hpp" export * }
  module "intrusive__detail__list_iterator" { header "intrusive/detail/list_iterator.hpp" export * }
  module "intrusive__detail__list_node" { header "intrusive/detail/list_node.hpp" export * }
  module "intrusive__detail__math" { header "intrusive/detail/math.hpp" export * }
  module "intrusive__detail__minimal_less_equal_header" { header "intrusive/detail/minimal_less_equal_header.hpp" export * }
  module "intrusive__detail__minimal_pair_header" { header "intrusive/detail/minimal_pair_header.hpp" export * }
  module "intrusive__detail__mpl" { header "intrusive/detail/mpl.hpp" export * }
  module "intrusive__detail__node_holder" { header "intrusive/detail/node_holder.hpp" export * }
  module "intrusive__detail__parent_from_member" { header "intrusive/detail/parent_from_member.hpp" export * }
  module "intrusive__detail__rbtree_node" { header "intrusive/detail/rbtree_node.hpp" export * }
  module "intrusive__detail__reverse_iterator" { header "intrusive/detail/reverse_iterator.hpp" export * }
  module "intrusive__detail__simple_disposers" { header "intrusive/detail/simple_disposers.hpp" export * }
  module "intrusive__detail__size_holder" { header "intrusive/detail/size_holder.hpp" export * }
  module "intrusive__detail__slist_iterator" { header "intrusive/detail/slist_iterator.hpp" export * }
  module "intrusive__detail__slist_node" { header "intrusive/detail/slist_node.hpp" export * }
  module "intrusive__detail__std_fwd" { header "intrusive/detail/std_fwd.hpp" export * }
  module "intrusive__detail__transform_iterator" { header "intrusive/detail/transform_iterator.hpp" export * }
  module "intrusive__detail__tree_iterator" { header "intrusive/detail/tree_iterator.hpp" export * }
  module "intrusive__detail__tree_node" { header "intrusive/detail/tree_node.hpp" export * }
  module "intrusive__detail__tree_value_compare" { header "intrusive/detail/tree_value_compare.hpp" export * }
  module "intrusive__detail__uncast" { header "intrusive/detail/uncast.hpp" export * }
  module "intrusive__detail__workaround" { header "intrusive/detail/workaround.hpp" export * }
  module "intrusive__hashtable" { header "intrusive/hashtable.hpp" export * }
  module "intrusive__intrusive_fwd" { header "intrusive/intrusive_fwd.hpp" export * }
  module "intrusive__linear_slist_algorithms" { header "intrusive/linear_slist_algorithms.hpp" export * }
  module "intrusive__link_mode" { header "intrusive/link_mode.hpp" export * }
  module "intrusive__list_hook" { header "intrusive/list_hook.hpp" export * }
  module "intrusive__list" { header "intrusive/list.hpp" export * }
  module "intrusive__member_value_traits" { header "intrusive/member_value_traits.hpp" export * }
  module "intrusive__options" { header "intrusive/options.hpp" export * }
  module "intrusive__pack_options" { header "intrusive/pack_options.hpp" export * }
  module "intrusive__parent_from_member" { header "intrusive/parent_from_member.hpp" export * }
  module "intrusive__pointer_plus_bits" { header "intrusive/pointer_plus_bits.hpp" export * }
  module "intrusive__pointer_rebind" { header "intrusive/pointer_rebind.hpp" export * }
  module "intrusive__pointer_traits" { header "intrusive/pointer_traits.hpp" export * }
  module "intrusive__priority_compare" { header "intrusive/priority_compare.hpp" export * }
  module "intrusive__rbtree_algorithms" { header "intrusive/rbtree_algorithms.hpp" export * }
  module "intrusive__rbtree" { header "intrusive/rbtree.hpp" export * }
  module "intrusive__set_hook" { header "intrusive/set_hook.hpp" export * }
  module "intrusive__set" { header "intrusive/set.hpp" export * }
  module "intrusive__sg_set" { header "intrusive/sg_set.hpp" export * }
  module "intrusive__sgtree_algorithms" { header "intrusive/sgtree_algorithms.hpp" export * }
  module "intrusive__sgtree" { header "intrusive/sgtree.hpp" export * }
  module "intrusive__slist_hook" { header "intrusive/slist_hook.hpp" export * }
  module "intrusive__slist" { header "intrusive/slist.hpp" export * }
  module "intrusive__splay_set" { header "intrusive/splay_set.hpp" export * }
  module "intrusive__splaytree_algorithms" { header "intrusive/splaytree_algorithms.hpp" export * }
  module "intrusive__splaytree" { header "intrusive/splaytree.hpp" export * }
  module "intrusive__treap_algorithms" { header "intrusive/treap_algorithms.hpp" export * }
  module "intrusive__treap" { header "intrusive/treap.hpp" export * }
  module "intrusive__treap_set" { header "intrusive/treap_set.hpp" export * }
  module "intrusive__trivial_value_traits" { header "intrusive/trivial_value_traits.hpp" export * }
  module "intrusive__unordered_set_hook" { header "intrusive/unordered_set_hook.hpp" export * }
  module "intrusive__unordered_set" { header "intrusive/unordered_set.hpp" export * }
}
module boost_io {
  export *
  module "io__ios_state" { header "io/ios_state.hpp" export * }
}
module boost_io_fwd { export * module "io_fwd" { header "io_fwd.hpp" export * } }
module boost_is_placeholder { export * module "is_placeholder" { header "is_placeholder.hpp" export * } }
module boost_iterator_adaptors { export * module "iterator_adaptors" { header "iterator_adaptors.hpp" export * } }
module boost_iterator {
  export *
  module "iterator__counting_iterator" { header "iterator/counting_iterator.hpp" export * }
  module "iterator__detail__any_conversion_eater" { header "iterator/detail/any_conversion_eater.hpp" export * }
  module "iterator__detail__enable_if" { header "iterator/detail/enable_if.hpp" export * }
  module "iterator__detail__facade_iterator_category" { header "iterator/detail/facade_iterator_category.hpp" export * }
  module "iterator__detail__minimum_category" { header "iterator/detail/minimum_category.hpp" export * }
  module "iterator__filter_iterator" { header "iterator/filter_iterator.hpp" export * }
  module "iterator__function_input_iterator" { header "iterator/function_input_iterator.hpp" export * }
  module "iterator" { header "iterator.hpp" export * }
  module "iterator__indirect_iterator" { header "iterator/indirect_iterator.hpp" export * }
  module "iterator__interoperable" { header "iterator/interoperable.hpp" export * }
  module "iterator__is_lvalue_iterator" { header "iterator/is_lvalue_iterator.hpp" export * }
  module "iterator__is_readable_iterator" { header "iterator/is_readable_iterator.hpp" export * }
  module "iterator__iterator_adaptor" { header "iterator/iterator_adaptor.hpp" export * }
  module "iterator__iterator_archetypes" { header "iterator/iterator_archetypes.hpp" export * }
  module "iterator__iterator_categories" { header "iterator/iterator_categories.hpp" export * }
  module "iterator__iterator_concepts" { header "iterator/iterator_concepts.hpp" export * }
  module "iterator__iterator_facade" { header "iterator/iterator_facade.hpp" export * }
  module "iterator__iterator_traits" { header "iterator/iterator_traits.hpp" export * }
  module "iterator__minimum_category" { header "iterator/minimum_category.hpp" export * }
  module "iterator__permutation_iterator" { header "iterator/permutation_iterator.hpp" export * }
  module "iterator__reverse_iterator" { header "iterator/reverse_iterator.hpp" export * }
  module "iterator__transform_iterator" { header "iterator/transform_iterator.hpp" export * }
  module "iterator__zip_iterator" { header "iterator/zip_iterator.hpp" export * }

  // Prevent a cycle between pointee <-> range; indirect_reference <-> range.
  module boost_pointee { export * module "pointee" { header "pointee.hpp" export * } }
  module boost_indirect_reference { export * module "indirect_reference" { header "indirect_reference.hpp" export * } }
}
  module boost_concept_archetype { export * module "concept_archetype" { header "concept_archetype.hpp" export * } }
module boost_lambda {
  export *
  module "lambda__algorithm" { header "lambda/algorithm.hpp" export * }
  module "lambda__bind" { header "lambda/bind.hpp" export * }
  module "lambda__casts" { header "lambda/casts.hpp" export * }
  module "lambda__closures" { header "lambda/closures.hpp" export * }
  module "lambda__construct" { header "lambda/construct.hpp" export * }
  module "lambda__control_structures" { header "lambda/control_structures.hpp" export * }
  module "lambda__core" { header "lambda/core.hpp" export * }
  module "lambda__detail__is_instance_of" { header "lambda/detail/is_instance_of.hpp" export * }
  module "lambda__detail__lambda_config" { header "lambda/detail/lambda_config.hpp" export * }
  module "lambda__detail__lambda_fwd" { header "lambda/detail/lambda_fwd.hpp" export * }
  module "lambda__detail__suppress_unused" { header "lambda/detail/suppress_unused.hpp" export * }
  module "lambda__exceptions" { header "lambda/exceptions.hpp" export * }
  module "lambda__if" { header "lambda/if.hpp" export * }
  module "lambda__lambda" { header "lambda/lambda.hpp" export * }
  module "lambda__loops" { header "lambda/loops.hpp" export * }
  module "lambda__numeric" { header "lambda/numeric.hpp" export * }
  module "lambda__switch" { header "lambda/switch.hpp" export * }
}
module boost_limits { export * module "limits" { header "limits.hpp" export * } }
module boost_locale {
  export *
  module "locale" { header "locale.hpp" export * }
  module "locale__boundary__facets" { header "locale/boundary/facets.hpp" export * }
  module "locale__boundary" { header "locale/boundary.hpp" export * }
  module "locale__boundary__index" { header "locale/boundary/index.hpp" export * }
  module "locale__boundary__types" { header "locale/boundary/types.hpp" export * }
  module "locale__collator" { header "locale/collator.hpp" export * }
  module "locale__config" { header "locale/config.hpp" export * }
  module "locale__conversion" { header "locale/conversion.hpp" export * }
  module "locale__date_time_facet" { header "locale/date_time_facet.hpp" export * }
  module "locale__date_time" { header "locale/date_time.hpp" export * }
  module "locale__definitions" { header "locale/definitions.hpp" export * }
  module "locale__encoding_errors" { header "locale/encoding_errors.hpp" export * }
  module "locale__encoding" { header "locale/encoding.hpp" export * }
  module "locale__encoding_utf" { header "locale/encoding_utf.hpp" export * }
  module "locale__formatting" { header "locale/formatting.hpp" export * }
  module "locale__generic_codecvt" { header "locale/generic_codecvt.hpp" export * }
  module "locale__gnu_gettext" { header "locale/gnu_gettext.hpp" export * }
  module "locale__hold_ptr" { header "locale/hold_ptr.hpp" export * }
  module "locale__info" { header "locale/info.hpp" export * }
  module "locale__message" { header "locale/message.hpp" export * }
  module "locale__time_zone" { header "locale/time_zone.hpp" export * }
  module "locale__utf8_codecvt" { header "locale/utf8_codecvt.hpp" export * }
  module "locale__utf" { header "locale/utf.hpp" export * }
}
module boost_local_function {
  export *
  module "local_function__aux___add_pointed_const" { header "local_function/aux_/add_pointed_const.hpp" export * }
  module "local_function__aux___macro__code___bind" { header "local_function/aux_/macro/code_/bind.hpp" export * }
  module "local_function__aux___macro__code___functor" { header "local_function/aux_/macro/code_/functor.hpp" export * }
  module "local_function__aux___macro__code___result" { header "local_function/aux_/macro/code_/result.hpp" export * }
  module "local_function__aux___macro__decl" { header "local_function/aux_/macro/decl.hpp" export * }
  module "local_function__aux___macro__name" { header "local_function/aux_/macro/name.hpp" export * }
  module "local_function__aux___macro__typeof" { header "local_function/aux_/macro/typeof.hpp" export * }
  module "local_function__aux___member" { header "local_function/aux_/member.hpp" export * }
  module "local_function__aux___nobind" { header "local_function/aux_/nobind.hpp" export * }
  module "local_function__aux___preprocessor__traits__bind" { header "local_function/aux_/preprocessor/traits/bind.hpp" export * }
  module "local_function__aux___preprocessor__traits__decl___append" { header "local_function/aux_/preprocessor/traits/decl_/append.hpp" export * }
  module "local_function__aux___preprocessor__traits__decl_binds" { header "local_function/aux_/preprocessor/traits/decl_binds.hpp" export * }
  module "local_function__aux___preprocessor__traits__decl_const_binds" { header "local_function/aux_/preprocessor/traits/decl_const_binds.hpp" export * }
  module "local_function__aux___preprocessor__traits__decl_error" { header "local_function/aux_/preprocessor/traits/decl_error.hpp" export * }
  module "local_function__aux___preprocessor__traits__decl" { header "local_function/aux_/preprocessor/traits/decl.hpp" export * }
  module "local_function__aux___preprocessor__traits__decl___index" { header "local_function/aux_/preprocessor/traits/decl_/index.hpp" export * }
  module "local_function__aux___preprocessor__traits__decl___nil" { header "local_function/aux_/preprocessor/traits/decl_/nil.hpp" export * }
  module "local_function__aux___preprocessor__traits__decl_params" { header "local_function/aux_/preprocessor/traits/decl_params.hpp" export * }
  module "local_function__aux___preprocessor__traits__decl_returns" { header "local_function/aux_/preprocessor/traits/decl_returns.hpp" export * }
  module "local_function__aux___preprocessor__traits__decl___set_error" { header "local_function/aux_/preprocessor/traits/decl_/set_error.hpp" export * }
  module "local_function__aux___preprocessor__traits__decl_sign___any_bind_type" { header "local_function/aux_/preprocessor/traits/decl_sign_/any_bind_type.hpp" export * }
  module "local_function__aux___preprocessor__traits__decl_sign___sign" { header "local_function/aux_/preprocessor/traits/decl_sign_/sign.hpp" export * }
  module "local_function__aux___preprocessor__traits__decl_sign___validate___defaults" { header "local_function/aux_/preprocessor/traits/decl_sign_/validate_/defaults.hpp" export * }
  module "local_function__aux___preprocessor__traits__decl_sign___validate" { header "local_function/aux_/preprocessor/traits/decl_sign_/validate.hpp" export * }
  module "local_function__aux___preprocessor__traits__decl_sign___validate___this" { header "local_function/aux_/preprocessor/traits/decl_sign_/validate_/this.hpp" export * }
  module "local_function__aux___preprocessor__traits__decl___validate" { header "local_function/aux_/preprocessor/traits/decl_/validate.hpp" export * }
  module "local_function__aux___preprocessor__traits__decl___validate___return_count" { header "local_function/aux_/preprocessor/traits/decl_/validate_/return_count.hpp" export * }
  module "local_function__aux___preprocessor__traits__decl___validate___this_count" { header "local_function/aux_/preprocessor/traits/decl_/validate_/this_count.hpp" export * }
  module "local_function__aux___preprocessor__traits__param" { header "local_function/aux_/preprocessor/traits/param.hpp" export * }
  module "local_function__aux___symbol" { header "local_function/aux_/symbol.hpp" export * }
  module "local_function__config" { header "local_function/config.hpp" export * }
  module "local_function__detail__preprocessor__keyword__auto" { header "local_function/detail/preprocessor/keyword/auto.hpp" export * }
  module "local_function__detail__preprocessor__keyword__bind" { header "local_function/detail/preprocessor/keyword/bind.hpp" export * }
  module "local_function__detail__preprocessor__keyword__const_bind" { header "local_function/detail/preprocessor/keyword/const_bind.hpp" export * }
  module "local_function__detail__preprocessor__keyword__const" { header "local_function/detail/preprocessor/keyword/const.hpp" export * }
  module "local_function__detail__preprocessor__keyword__default" { header "local_function/detail/preprocessor/keyword/default.hpp" export * }
  module "local_function__detail__preprocessor__keyword__facility__add" { header "local_function/detail/preprocessor/keyword/facility/add.hpp" export * }
  module "local_function__detail__preprocessor__keyword__facility__is" { header "local_function/detail/preprocessor/keyword/facility/is.hpp" export * }
  module "local_function__detail__preprocessor__keyword__facility__remove" { header "local_function/detail/preprocessor/keyword/facility/remove.hpp" export * }
  module "local_function__detail__preprocessor__keyword__inline" { header "local_function/detail/preprocessor/keyword/inline.hpp" export * }
  module "local_function__detail__preprocessor__keyword__recursive" { header "local_function/detail/preprocessor/keyword/recursive.hpp" export * }
  module "local_function__detail__preprocessor__keyword__register" { header "local_function/detail/preprocessor/keyword/register.hpp" export * }
  module "local_function__detail__preprocessor__keyword__return" { header "local_function/detail/preprocessor/keyword/return.hpp" export * }
  module "local_function__detail__preprocessor__keyword__this" { header "local_function/detail/preprocessor/keyword/this.hpp" export * }
  module "local_function__detail__preprocessor__keyword__thisunderscore" { header "local_function/detail/preprocessor/keyword/thisunderscore.hpp" export * }
  module "local_function__detail__preprocessor__keyword__void" { header "local_function/detail/preprocessor/keyword/void.hpp" export * }
  module "local_function__detail__preprocessor__line_counter" { header "local_function/detail/preprocessor/line_counter.hpp" export * }
  module "local_function__detail__preprocessor__void_list" { header "local_function/detail/preprocessor/void_list.hpp" export * }
  module "local_function" { header "local_function.hpp" export * }
}
module boost_lockfree {
  export *
  module "lockfree__detail__atomic" { header "lockfree/detail/atomic.hpp" export * }
  module "lockfree__detail__copy_payload" { header "lockfree/detail/copy_payload.hpp" export * }
  module "lockfree__detail__freelist" { header "lockfree/detail/freelist.hpp" export * }
  module "lockfree__detail__prefix" { header "lockfree/detail/prefix.hpp" export * }
  module "lockfree__detail__tagged_ptr" { header "lockfree/detail/tagged_ptr.hpp" export * }
  module "lockfree__detail__tagged_ptr_ptrcompression" { header "lockfree/detail/tagged_ptr_ptrcompression.hpp" export * }
  module "lockfree__lockfree_forward" { header "lockfree/lockfree_forward.hpp" export * }
  module "lockfree__policies" { header "lockfree/policies.hpp" export * }
  module "lockfree__queue" { header "lockfree/queue.hpp" export * }
  module "lockfree__spsc_queue" { header "lockfree/spsc_queue.hpp" export * }
  module "lockfree__stack" { header "lockfree/stack.hpp" export * }
}
module boost_log {
  export *
  module "log__attributes__attribute_cast" { header "log/attributes/attribute_cast.hpp" export * }
  module "log__attributes__attribute" { header "log/attributes/attribute.hpp" export * }
  module "log__attributes__attribute_name" { header "log/attributes/attribute_name.hpp" export * }
  module "log__attributes__attribute_set" { header "log/attributes/attribute_set.hpp" export * }
  module "log__attributes__attribute_value" { header "log/attributes/attribute_value.hpp" export * }
  module "log__attributes__attribute_value_impl" { header "log/attributes/attribute_value_impl.hpp" export * }
  module "log__attributes__attribute_value_set" { header "log/attributes/attribute_value_set.hpp" export * }
  module "log__attributes__clock" { header "log/attributes/clock.hpp" export * }
  module "log__attributes__constant" { header "log/attributes/constant.hpp" export * }
  module "log__attributes__counter" { header "log/attributes/counter.hpp" export * }
  module "log__attributes__current_process_id" { header "log/attributes/current_process_id.hpp" export * }
  module "log__attributes__current_process_name" { header "log/attributes/current_process_name.hpp" export * }
  module "log__attributes__current_thread_id" { header "log/attributes/current_thread_id.hpp" export * }
  module "log__attributes__fallback_policy_fwd" { header "log/attributes/fallback_policy_fwd.hpp" export * }
  module "log__attributes__function" { header "log/attributes/function.hpp" export * }
  module "log__attributes" { header "log/attributes.hpp" export * }
  module "log__attributes__mutable_constant" { header "log/attributes/mutable_constant.hpp" export * }
  module "log__attributes__named_scope" { header "log/attributes/named_scope.hpp" export * }
  module "log__attributes__scoped_attribute" { header "log/attributes/scoped_attribute.hpp" export * }
  module "log__attributes__timer" { header "log/attributes/timer.hpp" export * }
  module "log__attributes__time_traits" { header "log/attributes/time_traits.hpp" export * }
  module "log__attributes__value_extraction_fwd" { header "log/attributes/value_extraction_fwd.hpp" export * }
  module "log__attributes__value_visitation_fwd" { header "log/attributes/value_visitation_fwd.hpp" export * }
  module "log__core__core" { header "log/core/core.hpp" export * }
  module "log__core" { header "log/core.hpp" export * }
  module "log__core__record" { header "log/core/record.hpp" export * }
  module "log__core__record_view" { header "log/core/record_view.hpp" export * }
  module "log__detail__asio_fwd" { header "log/detail/asio_fwd.hpp" export * }
  module "log__detail__attachable_sstream_buf" { header "log/detail/attachable_sstream_buf.hpp" export * }
  module "log__detail__attribute_get_value_impl" { header "log/detail/attribute_get_value_impl.hpp" export * }
  module "log__detail__cleanup_scope_guard" { header "log/detail/cleanup_scope_guard.hpp" export * }
  module "log__detail__code_conversion" { header "log/detail/code_conversion.hpp" export * }
  module "log__detail__config" { header "log/detail/config.hpp" export * }
  module "log__detail__copy_cv" { header "log/detail/copy_cv.hpp" export * }
  module "log__detail__c_str" { header "log/detail/c_str.hpp" export * }
  module "log__detail__custom_terminal_spec" { header "log/detail/custom_terminal_spec.hpp" export * }
  module "log__detail__date_time_fmt_gen_traits_fwd" { header "log/detail/date_time_fmt_gen_traits_fwd.hpp" export * }
  module "log__detail__date_time_format_parser" { header "log/detail/date_time_format_parser.hpp" export * }
  module "log__detail__decomposed_time" { header "log/detail/decomposed_time.hpp" export * }
  module "log__detail__deduce_char_type" { header "log/detail/deduce_char_type.hpp" export * }
  module "log__detail__default_attribute_names" { header "log/detail/default_attribute_names.hpp" export * }
  module "log__detail__embedded_string_type" { header "log/detail/embedded_string_type.hpp" export * }
  module "log__detail__enqueued_record" { header "log/detail/enqueued_record.hpp" export * }
  module "log__detail__fake_mutex" { header "log/detail/fake_mutex.hpp" export * }
  module "log__detail__format" { header "log/detail/format.hpp" export * }
  module "log__detail__function_traits" { header "log/detail/function_traits.hpp" export * }
  module "log__detail__id" { header "log/detail/id.hpp" export * }
  module "log__detail__is_character_type" { header "log/detail/is_character_type.hpp" export * }
  module "log__detail__is_ostream" { header "log/detail/is_ostream.hpp" export * }
  module "log__detail__light_function" { header "log/detail/light_function.hpp" export * }
  module "log__detail__light_rw_mutex" { header "log/detail/light_rw_mutex.hpp" export * }
  module "log__detail__locking_ptr" { header "log/detail/locking_ptr.hpp" export * }
  module "log__detail__locks" { header "log/detail/locks.hpp" export * }
  module "log__detail__native_typeof" { header "log/detail/native_typeof.hpp" export * }
  module "log__detail__parameter_tools" { header "log/detail/parameter_tools.hpp" export * }
  module "log__detail__pause" { header "log/detail/pause.hpp" export * }
  module "log__detail__pp_identity" { header "log/detail/pp_identity.hpp" export * }
  module "log__detail__process_id" { header "log/detail/process_id.hpp" export * }
  module "log__detail__setup_config" { header "log/detail/setup_config.hpp" export * }
  module "log__detail__sfinae_tools" { header "log/detail/sfinae_tools.hpp" export * }
  module "log__detail__singleton" { header "log/detail/singleton.hpp" export * }
  module "log__detail__snprintf" { header "log/detail/snprintf.hpp" export * }
  module "log__detail__tagged_integer" { header "log/detail/tagged_integer.hpp" export * }
  module "log__detail__thread_id" { header "log/detail/thread_id.hpp" export * }
  module "log__detail__threadsafe_queue" { header "log/detail/threadsafe_queue.hpp" export * }
  module "log__detail__thread_specific" { header "log/detail/thread_specific.hpp" export * }
  module "log__detail__timestamp" { header "log/detail/timestamp.hpp" export * }
  module "log__detail__unary_function_terminal" { header "log/detail/unary_function_terminal.hpp" export * }
  module "log__detail__value_ref_visitation" { header "log/detail/value_ref_visitation.hpp" export * }
  module "log__expressions__attr_fwd" { header "log/expressions/attr_fwd.hpp" export * }
  module "log__expressions__filter" { header "log/expressions/filter.hpp" export * }
  module "log__expressions__formatters__c_decorator" { header "log/expressions/formatters/c_decorator.hpp" export * }
  module "log__expressions__formatters__char_decorator" { header "log/expressions/formatters/char_decorator.hpp" export * }
  module "log__expressions__formatters__csv_decorator" { header "log/expressions/formatters/csv_decorator.hpp" export * }
  module "log__expressions__formatters__format" { header "log/expressions/formatters/format.hpp" export * }
  module "log__expressions__formatters__if" { header "log/expressions/formatters/if.hpp" export * }
  module "log__expressions__formatters__max_size_decorator" { header "log/expressions/formatters/max_size_decorator.hpp" export * }
  module "log__expressions__formatters__stream" { header "log/expressions/formatters/stream.hpp" export * }
  module "log__expressions__formatters__wrap_formatter" { header "log/expressions/formatters/wrap_formatter.hpp" export * }
  module "log__expressions__formatters__xml_decorator" { header "log/expressions/formatters/xml_decorator.hpp" export * }
  module "log__expressions__is_keyword_descriptor" { header "log/expressions/is_keyword_descriptor.hpp" export * }
  module "log__expressions__keyword_fwd" { header "log/expressions/keyword_fwd.hpp" export * }
  module "log__expressions__predicates__is_debugger_present" { header "log/expressions/predicates/is_debugger_present.hpp" export * }
  module "log__expressions__record" { header "log/expressions/record.hpp" export * }
  module "log__keywords__auto_flush" { header "log/keywords/auto_flush.hpp" export * }
  module "log__keywords__block_size" { header "log/keywords/block_size.hpp" export * }
  module "log__keywords__capacity" { header "log/keywords/capacity.hpp" export * }
  module "log__keywords__channel" { header "log/keywords/channel.hpp" export * }
  module "log__keywords__delimiter" { header "log/keywords/delimiter.hpp" export * }
  module "log__keywords__depth" { header "log/keywords/depth.hpp" export * }
  module "log__keywords__empty_marker" { header "log/keywords/empty_marker.hpp" export * }
  module "log__keywords__enable_final_rotation" { header "log/keywords/enable_final_rotation.hpp" export * }
  module "log__keywords__facility" { header "log/keywords/facility.hpp" export * }
  module "log__keywords__file_name" { header "log/keywords/file_name.hpp" export * }
  module "log__keywords__filter" { header "log/keywords/filter.hpp" export * }
  module "log__keywords__format" { header "log/keywords/format.hpp" export * }
  module "log__keywords__ident" { header "log/keywords/ident.hpp" export * }
  module "log__keywords__incomplete_marker" { header "log/keywords/incomplete_marker.hpp" export * }
  module "log__keywords__ip_version" { header "log/keywords/ip_version.hpp" export * }
  module "log__keywords__iteration" { header "log/keywords/iteration.hpp" export * }
  module "log__keywords__log_name" { header "log/keywords/log_name.hpp" export * }
  module "log__keywords__log_source" { header "log/keywords/log_source.hpp" export * }
  module "log__keywords__max_files" { header "log/keywords/max_files.hpp" export * }
  module "log__keywords__max_size" { header "log/keywords/max_size.hpp" export * }
  module "log__keywords__message_file" { header "log/keywords/message_file.hpp" export * }
  module "log__keywords__min_free_space" { header "log/keywords/min_free_space.hpp" export * }
  module "log__keywords__name" { header "log/keywords/name.hpp" export * }
  module "log__keywords__open_mode" { header "log/keywords/open_mode.hpp" export * }
  module "log__keywords__order" { header "log/keywords/order.hpp" export * }
  module "log__keywords__ordering_window" { header "log/keywords/ordering_window.hpp" export * }
  module "log__keywords__overflow_policy" { header "log/keywords/overflow_policy.hpp" export * }
  module "log__keywords__permissions" { header "log/keywords/permissions.hpp" export * }
  module "log__keywords__registration" { header "log/keywords/registration.hpp" export * }
  module "log__keywords__rotation_size" { header "log/keywords/rotation_size.hpp" export * }
  module "log__keywords__scan_method" { header "log/keywords/scan_method.hpp" export * }
  module "log__keywords__severity" { header "log/keywords/severity.hpp" export * }
  module "log__keywords__start_thread" { header "log/keywords/start_thread.hpp" export * }
  module "log__keywords__target" { header "log/keywords/target.hpp" export * }
  module "log__keywords__time_based_rotation" { header "log/keywords/time_based_rotation.hpp" export * }
  module "log__keywords__use_impl" { header "log/keywords/use_impl.hpp" export * }
  module "log__sinks__basic_sink_backend" { header "log/sinks/basic_sink_backend.hpp" export * }
  module "log__sinks__debug_output_backend" { header "log/sinks/debug_output_backend.hpp" export * }
  module "log__sinks__drop_on_overflow" { header "log/sinks/drop_on_overflow.hpp" export * }
  module "log__sinks__event_log_backend" { header "log/sinks/event_log_backend.hpp" export * }
  module "log__sinks__event_log_constants" { header "log/sinks/event_log_constants.hpp" export * }
  module "log__sinks__frontend_requirements" { header "log/sinks/frontend_requirements.hpp" export * }
  module "log__sinks__sink" { header "log/sinks/sink.hpp" export * }
  module "log__sinks__syslog_constants" { header "log/sinks/syslog_constants.hpp" export * }
  module "log__sinks__text_ostream_backend" { header "log/sinks/text_ostream_backend.hpp" export * }
  module "log__sources__basic_logger" { header "log/sources/basic_logger.hpp" export * }
  module "log__sources__channel_feature" { header "log/sources/channel_feature.hpp" export * }
  module "log__sources__channel_logger" { header "log/sources/channel_logger.hpp" export * }
  module "log__sources__features" { header "log/sources/features.hpp" export * }
  module "log__sources__global_logger_storage" { header "log/sources/global_logger_storage.hpp" export * }
  module "log__sources__logger" { header "log/sources/logger.hpp" export * }
  module "log__sources__record_ostream" { header "log/sources/record_ostream.hpp" export * }
  module "log__sources__severity_channel_logger" { header "log/sources/severity_channel_logger.hpp" export * }
  module "log__sources__severity_feature" { header "log/sources/severity_feature.hpp" export * }
  module "log__sources__severity_logger" { header "log/sources/severity_logger.hpp" export * }
  module "log__sources__threading_models" { header "log/sources/threading_models.hpp" export * }
  module "log__support__date_time" { header "log/support/date_time.hpp" export * }
  module "log__support__exception" { header "log/support/exception.hpp" export * }
  module "log__support__regex" { header "log/support/regex.hpp" export * }
  module "log__support__spirit_classic" { header "log/support/spirit_classic.hpp" export * }
  module "log__support__spirit_qi" { header "log/support/spirit_qi.hpp" export * }
  module "log__support__std_regex" { header "log/support/std_regex.hpp" export * }
  module "log__support__xpressive" { header "log/support/xpressive.hpp" export * }
  module "log__trivial" { header "log/trivial.hpp" export * }
  module "log__utility__exception_handler" { header "log/utility/exception_handler.hpp" export * }
  module "log__utility__formatting_ostream_fwd" { header "log/utility/formatting_ostream_fwd.hpp" export * }
  module "log__utility__formatting_ostream" { header "log/utility/formatting_ostream.hpp" export * }
  module "log__utility__functional__as_action" { header "log/utility/functional/as_action.hpp" export * }
  module "log__utility__functional__begins_with" { header "log/utility/functional/begins_with.hpp" export * }
  module "log__utility__functional__bind_assign" { header "log/utility/functional/bind_assign.hpp" export * }
  module "log__utility__functional__bind" { header "log/utility/functional/bind.hpp" export * }
  module "log__utility__functional__bind_output" { header "log/utility/functional/bind_output.hpp" export * }
  module "log__utility__functional__bind_to_log" { header "log/utility/functional/bind_to_log.hpp" export * }
  module "log__utility__functional__contains" { header "log/utility/functional/contains.hpp" export * }
  module "log__utility__functional__ends_with" { header "log/utility/functional/ends_with.hpp" export * }
  module "log__utility__functional__fun_ref" { header "log/utility/functional/fun_ref.hpp" export * }
  module "log__utility__functional" { header "log/utility/functional.hpp" export * }
  module "log__utility__functional__in_range" { header "log/utility/functional/in_range.hpp" export * }
  module "log__utility__functional__logical" { header "log/utility/functional/logical.hpp" export * }
  module "log__utility__functional__matches" { header "log/utility/functional/matches.hpp" export * }
  module "log__utility__functional__nop" { header "log/utility/functional/nop.hpp" export * }
  module "log__utility__functional__save_result" { header "log/utility/functional/save_result.hpp" export * }
  module "log__utility__ipc__object_name" { header "log/utility/ipc/object_name.hpp" export * }
  module "log__utility__ipc__reliable_message_queue" { header "log/utility/ipc/reliable_message_queue.hpp" export * }
  module "log__utility__manipulators__add_value" { header "log/utility/manipulators/add_value.hpp" export * }
  module "log__utility__manipulators__dump" { header "log/utility/manipulators/dump.hpp" export * }
  module "log__utility__manipulators" { header "log/utility/manipulators.hpp" export * }
  module "log__utility__manipulators__to_log" { header "log/utility/manipulators/to_log.hpp" export * }
  module "log__utility__once_block" { header "log/utility/once_block.hpp" export * }
  module "log__utility__open_mode" { header "log/utility/open_mode.hpp" export * }
  module "log__utility__permissions" { header "log/utility/permissions.hpp" export * }
  module "log__utility__setup__common_attributes" { header "log/utility/setup/common_attributes.hpp" export * }
  module "log__utility__setup__from_settings" { header "log/utility/setup/from_settings.hpp" export * }
  module "log__utility__setup__from_stream" { header "log/utility/setup/from_stream.hpp" export * }
  module "log__utility__setup__settings" { header "log/utility/setup/settings.hpp" export * }
  module "log__utility__setup__settings_parser" { header "log/utility/setup/settings_parser.hpp" export * }
  module "log__utility__strictest_lock" { header "log/utility/strictest_lock.hpp" export * }
  module "log__utility__string_literal_fwd" { header "log/utility/string_literal_fwd.hpp" export * }
  module "log__utility__string_literal" { header "log/utility/string_literal.hpp" export * }
  module "log__utility__type_dispatch__date_time_types" { header "log/utility/type_dispatch/date_time_types.hpp" export * }
  module "log__utility__type_dispatch__dynamic_type_dispatcher" { header "log/utility/type_dispatch/dynamic_type_dispatcher.hpp" export * }
  module "log__utility__type_dispatch__standard_types" { header "log/utility/type_dispatch/standard_types.hpp" export * }
  module "log__utility__type_dispatch__static_type_dispatcher" { header "log/utility/type_dispatch/static_type_dispatcher.hpp" export * }
  module "log__utility__type_dispatch__type_dispatcher" { header "log/utility/type_dispatch/type_dispatcher.hpp" export * }
  module "log__utility__unique_identifier_name" { header "log/utility/unique_identifier_name.hpp" export * }
  module "log__utility__unused_variable" { header "log/utility/unused_variable.hpp" export * }
  module "log__utility__value_ref_fwd" { header "log/utility/value_ref_fwd.hpp" export * }
  module "log__utility__value_ref" { header "log/utility/value_ref.hpp" export * }
}
module boost_logic {
  export *
  module "logic__tribool_fwd" { header "logic/tribool_fwd.hpp" export * }
  module "logic__tribool" { header "logic/tribool.hpp" export * }
  module "logic__tribool_io" { header "logic/tribool_io.hpp" export * }
}
module boost_make_default { export * module "make_default" { header "make_default.hpp" export * } }
module boost_make_unique { export * module "make_unique" { header "make_unique.hpp" export * } }
module boost_math_fwd { export * module "math_fwd" { header "math_fwd.hpp" export * } }
module boost_memory_order { export * module "memory_order" { header "memory_order.hpp" export * } }
module boost_metaparse {
  export *
  module "metaparse__accept" { header "metaparse/accept.hpp" export * }
  module "metaparse__accept_tag" { header "metaparse/accept_tag.hpp" export * }
  module "metaparse__accept_when" { header "metaparse/accept_when.hpp" export * }
  module "metaparse__alphanum" { header "metaparse/alphanum.hpp" export * }
  module "metaparse__always_c" { header "metaparse/always_c.hpp" export * }
  module "metaparse__always" { header "metaparse/always.hpp" export * }
  module "metaparse__build_parser" { header "metaparse/build_parser.hpp" export * }
  module "metaparse__change_error_message" { header "metaparse/change_error_message.hpp" export * }
  module "metaparse__config" { header "metaparse/config.hpp" export * }
  module "metaparse__debug_parsing_error" { header "metaparse/debug_parsing_error.hpp" export * }
  module "metaparse__define_error" { header "metaparse/define_error.hpp" export * }
  module "metaparse__digit" { header "metaparse/digit.hpp" export * }
  module "metaparse__digit_val" { header "metaparse/digit_val.hpp" export * }
  module "metaparse__empty" { header "metaparse/empty.hpp" export * }
  module "metaparse__entire_input" { header "metaparse/entire_input.hpp" export * }
  module "metaparse__error__digit_expected" { header "metaparse/error/digit_expected.hpp" export * }
  module "metaparse__error__end_of_input_expected" { header "metaparse/error/end_of_input_expected.hpp" export * }
  module "metaparse__error__index_out_of_range" { header "metaparse/error/index_out_of_range.hpp" export * }
  module "metaparse__error__letter_expected" { header "metaparse/error/letter_expected.hpp" export * }
  module "metaparse__error__literal_expected" { header "metaparse/error/literal_expected.hpp" export * }
  module "metaparse__error__none_of_the_expected_cases_found" { header "metaparse/error/none_of_the_expected_cases_found.hpp" export * }
  module "metaparse__error__unexpected_character" { header "metaparse/error/unexpected_character.hpp" export * }
  module "metaparse__error__unexpected_end_of_input" { header "metaparse/error/unexpected_end_of_input.hpp" export * }
  module "metaparse__error__unpaired" { header "metaparse/error/unpaired.hpp" export * }
  module "metaparse__error__whitespace_expected" { header "metaparse/error/whitespace_expected.hpp" export * }
  module "metaparse__except" { header "metaparse/except.hpp" export * }
  module "metaparse__fail_at_first_char_expected" { header "metaparse/fail_at_first_char_expected.hpp" export * }
  module "metaparse__fail" { header "metaparse/fail.hpp" export * }
  module "metaparse__fail_tag" { header "metaparse/fail_tag.hpp" export * }
  module "metaparse__first_of" { header "metaparse/first_of.hpp" export * }
  module "metaparse__foldl1" { header "metaparse/foldl1.hpp" export * }
  module "metaparse__foldl" { header "metaparse/foldl.hpp" export * }
  module "metaparse__foldl_reject_incomplete1" { header "metaparse/foldl_reject_incomplete1.hpp" export * }
  module "metaparse__foldl_reject_incomplete" { header "metaparse/foldl_reject_incomplete.hpp" export * }
  module "metaparse__foldl_reject_incomplete_start_with_parser" { header "metaparse/foldl_reject_incomplete_start_with_parser.hpp" export * }
  module "metaparse__foldl_start_with_parser" { header "metaparse/foldl_start_with_parser.hpp" export * }
  module "metaparse__foldr1" { header "metaparse/foldr1.hpp" export * }
  module "metaparse__foldr" { header "metaparse/foldr.hpp" export * }
  module "metaparse__foldr_reject_incomplete1" { header "metaparse/foldr_reject_incomplete1.hpp" export * }
  module "metaparse__foldr_reject_incomplete" { header "metaparse/foldr_reject_incomplete.hpp" export * }
  module "metaparse__foldr_start_with_parser" { header "metaparse/foldr_start_with_parser.hpp" export * }
  module "metaparse__get_col" { header "metaparse/get_col.hpp" export * }
  module "metaparse__get_line" { header "metaparse/get_line.hpp" export * }
  module "metaparse__get_message" { header "metaparse/get_message.hpp" export * }
  module "metaparse__get_position" { header "metaparse/get_position.hpp" export * }
  module "metaparse__get_prev_char" { header "metaparse/get_prev_char.hpp" export * }
  module "metaparse__get_remaining" { header "metaparse/get_remaining.hpp" export * }
  module "metaparse__get_result" { header "metaparse/get_result.hpp" export * }
  module "metaparse__grammar" { header "metaparse/grammar.hpp" export * }
  module "metaparse" { header "metaparse.hpp" export * }
  module "metaparse__if_" { header "metaparse/if_.hpp" export * }
  module "metaparse__int_" { header "metaparse/int_.hpp" export * }
  module "metaparse__is_error" { header "metaparse/is_error.hpp" export * }
  module "metaparse__iterate_c" { header "metaparse/iterate_c.hpp" export * }
  module "metaparse__iterate" { header "metaparse/iterate.hpp" export * }
  module "metaparse__keyword" { header "metaparse/keyword.hpp" export * }
  module "metaparse__last_of" { header "metaparse/last_of.hpp" export * }
  module "metaparse__letter" { header "metaparse/letter.hpp" export * }
  module "metaparse__limit_one_char_except_size" { header "metaparse/limit_one_char_except_size.hpp" export * }
  module "metaparse__limit_one_of_size" { header "metaparse/limit_one_of_size.hpp" export * }
  module "metaparse__limit_sequence_size" { header "metaparse/limit_sequence_size.hpp" export * }
  module "metaparse__limit_string_size" { header "metaparse/limit_string_size.hpp" export * }
  module "metaparse__lit_c" { header "metaparse/lit_c.hpp" export * }
  module "metaparse__lit" { header "metaparse/lit.hpp" export * }
  module "metaparse__look_ahead" { header "metaparse/look_ahead.hpp" export * }
  module "metaparse__middle_of" { header "metaparse/middle_of.hpp" export * }
  module "metaparse__next_char" { header "metaparse/next_char.hpp" export * }
  module "metaparse__next_line" { header "metaparse/next_line.hpp" export * }
  module "metaparse__nth_of_c" { header "metaparse/nth_of_c.hpp" export * }
  module "metaparse__nth_of" { header "metaparse/nth_of.hpp" export * }
  module "metaparse__one_char_except_c" { header "metaparse/one_char_except_c.hpp" export * }
  module "metaparse__one_char_except" { header "metaparse/one_char_except.hpp" export * }
  module "metaparse__one_char" { header "metaparse/one_char.hpp" export * }
  module "metaparse__one_of_c" { header "metaparse/one_of_c.hpp" export * }
  module "metaparse__one_of" { header "metaparse/one_of.hpp" export * }
  module "metaparse__optional" { header "metaparse/optional.hpp" export * }
  module "metaparse__range_c" { header "metaparse/range_c.hpp" export * }
  module "metaparse__range" { header "metaparse/range.hpp" export * }
  module "metaparse__reject" { header "metaparse/reject.hpp" export * }
  module "metaparse__repeated1" { header "metaparse/repeated1.hpp" export * }
  module "metaparse__repeated" { header "metaparse/repeated.hpp" export * }
  module "metaparse__repeated_one_of1" { header "metaparse/repeated_one_of1.hpp" export * }
  module "metaparse__repeated_one_of" { header "metaparse/repeated_one_of.hpp" export * }
  module "metaparse__repeated_reject_incomplete1" { header "metaparse/repeated_reject_incomplete1.hpp" export * }
  module "metaparse__repeated_reject_incomplete" { header "metaparse/repeated_reject_incomplete.hpp" export * }
  module "metaparse__return_" { header "metaparse/return_.hpp" export * }
  module "metaparse__sequence_apply" { header "metaparse/sequence_apply.hpp" export * }
  module "metaparse__sequence" { header "metaparse/sequence.hpp" export * }
  module "metaparse__source_position" { header "metaparse/source_position.hpp" export * }
  module "metaparse__source_position_tag" { header "metaparse/source_position_tag.hpp" export * }
  module "metaparse__space" { header "metaparse/space.hpp" export * }
  module "metaparse__spaces" { header "metaparse/spaces.hpp" export * }
  module "metaparse__start" { header "metaparse/start.hpp" export * }
  module "metaparse__string" { header "metaparse/string.hpp" export * }
  module "metaparse__string_tag" { header "metaparse/string_tag.hpp" export * }
  module "metaparse__token" { header "metaparse/token.hpp" export * }
  module "metaparse__transform_error" { header "metaparse/transform_error.hpp" export * }
  module "metaparse__transform_error_message" { header "metaparse/transform_error_message.hpp" export * }
  module "metaparse__transform" { header "metaparse/transform.hpp" export * }
  module "metaparse__unless_error" { header "metaparse/unless_error.hpp" export * }
  module "metaparse__util__digit_to_int_c" { header "metaparse/util/digit_to_int_c.hpp" export * }
  module "metaparse__util__digit_to_int" { header "metaparse/util/digit_to_int.hpp" export * }
  module "metaparse__util__in_range_c" { header "metaparse/util/in_range_c.hpp" export * }
  module "metaparse__util__in_range" { header "metaparse/util/in_range.hpp" export * }
  module "metaparse__util__int_to_digit_c" { header "metaparse/util/int_to_digit_c.hpp" export * }
  module "metaparse__util__int_to_digit" { header "metaparse/util/int_to_digit.hpp" export * }
  module "metaparse__util__is_digit" { header "metaparse/util/is_digit.hpp" export * }
  module "metaparse__util__is_lcase_letter" { header "metaparse/util/is_lcase_letter.hpp" export * }
  module "metaparse__util__is_letter" { header "metaparse/util/is_letter.hpp" export * }
  module "metaparse__util__is_ucase_letter" { header "metaparse/util/is_ucase_letter.hpp" export * }
  module "metaparse__util__is_whitespace_c" { header "metaparse/util/is_whitespace_c.hpp" export * }
  module "metaparse__util__is_whitespace" { header "metaparse/util/is_whitespace.hpp" export * }
  module "metaparse__v1__accept" { header "metaparse/v1/accept.hpp" export * }
  module "metaparse__v1__accept_tag" { header "metaparse/v1/accept_tag.hpp" export * }
  module "metaparse__v1__accept_when" { header "metaparse/v1/accept_when.hpp" export * }
  module "metaparse__v1__alphanum" { header "metaparse/v1/alphanum.hpp" export * }
  module "metaparse__v1__always_c" { header "metaparse/v1/always_c.hpp" export * }
  module "metaparse__v1__always" { header "metaparse/v1/always.hpp" export * }
  module "metaparse__v1__build_parser" { header "metaparse/v1/build_parser.hpp" export * }
  module "metaparse__v1__change_error_message" { header "metaparse/v1/change_error_message.hpp" export * }
  module "metaparse__v1__debug_parsing_error" { header "metaparse/v1/debug_parsing_error.hpp" export * }
  module "metaparse__v1__define_error" { header "metaparse/v1/define_error.hpp" export * }
  module "metaparse__v1__digit" { header "metaparse/v1/digit.hpp" export * }
  module "metaparse__v1__digit_val" { header "metaparse/v1/digit_val.hpp" export * }
  module "metaparse__v1__empty" { header "metaparse/v1/empty.hpp" export * }
  module "metaparse__v1__entire_input" { header "metaparse/v1/entire_input.hpp" export * }
  module "metaparse__v1__error__digit_expected" { header "metaparse/v1/error/digit_expected.hpp" export * }
  module "metaparse__v1__error__end_of_input_expected" { header "metaparse/v1/error/end_of_input_expected.hpp" export * }
  module "metaparse__v1__error__expected_to_fail" { header "metaparse/v1/error/expected_to_fail.hpp" export * }
  module "metaparse__v1__error__index_out_of_range" { header "metaparse/v1/error/index_out_of_range.hpp" export * }
  module "metaparse__v1__error__letter_expected" { header "metaparse/v1/error/letter_expected.hpp" export * }
  module "metaparse__v1__error__literal_expected" { header "metaparse/v1/error/literal_expected.hpp" export * }
  module "metaparse__v1__error__none_of_the_expected_cases_found" { header "metaparse/v1/error/none_of_the_expected_cases_found.hpp" export * }
  module "metaparse__v1__error__unexpected_character" { header "metaparse/v1/error/unexpected_character.hpp" export * }
  module "metaparse__v1__error__unexpected_end_of_input" { header "metaparse/v1/error/unexpected_end_of_input.hpp" export * }
  module "metaparse__v1__error__unpaired" { header "metaparse/v1/error/unpaired.hpp" export * }
  module "metaparse__v1__error__whitespace_expected" { header "metaparse/v1/error/whitespace_expected.hpp" export * }
  module "metaparse__v1__except" { header "metaparse/v1/except.hpp" export * }
  module "metaparse__v1__fail_at_first_char_expected" { header "metaparse/v1/fail_at_first_char_expected.hpp" export * }
  module "metaparse__v1__fail" { header "metaparse/v1/fail.hpp" export * }
  module "metaparse__v1__fail_tag" { header "metaparse/v1/fail_tag.hpp" export * }
  module "metaparse__v1__first_of" { header "metaparse/v1/first_of.hpp" export * }
  module "metaparse__v1__foldl1" { header "metaparse/v1/foldl1.hpp" export * }
  module "metaparse__v1__foldl" { header "metaparse/v1/foldl.hpp" export * }
  module "metaparse__v1__foldl_reject_incomplete1" { header "metaparse/v1/foldl_reject_incomplete1.hpp" export * }
  module "metaparse__v1__foldl_reject_incomplete" { header "metaparse/v1/foldl_reject_incomplete.hpp" export * }
  module "metaparse__v1__foldl_reject_incomplete_start_with_parser" { header "metaparse/v1/foldl_reject_incomplete_start_with_parser.hpp" export * }
  module "metaparse__v1__foldl_start_with_parser" { header "metaparse/v1/foldl_start_with_parser.hpp" export * }
  module "metaparse__v1__foldr1" { header "metaparse/v1/foldr1.hpp" export * }
  module "metaparse__v1__foldr" { header "metaparse/v1/foldr.hpp" export * }
  module "metaparse__v1__foldr_reject_incomplete1" { header "metaparse/v1/foldr_reject_incomplete1.hpp" export * }
  module "metaparse__v1__foldr_reject_incomplete" { header "metaparse/v1/foldr_reject_incomplete.hpp" export * }
  module "metaparse__v1__foldr_start_with_parser" { header "metaparse/v1/foldr_start_with_parser.hpp" export * }
  module "metaparse__v1__fwd__accept" { header "metaparse/v1/fwd/accept.hpp" export * }
  module "metaparse__v1__fwd__build_parser" { header "metaparse/v1/fwd/build_parser.hpp" export * }
  module "metaparse__v1__fwd__get_col" { header "metaparse/v1/fwd/get_col.hpp" export * }
  module "metaparse__v1__fwd__get_line" { header "metaparse/v1/fwd/get_line.hpp" export * }
  module "metaparse__v1__fwd__get_message" { header "metaparse/v1/fwd/get_message.hpp" export * }
  module "metaparse__v1__fwd__get_position" { header "metaparse/v1/fwd/get_position.hpp" export * }
  module "metaparse__v1__fwd__get_prev_char" { header "metaparse/v1/fwd/get_prev_char.hpp" export * }
  module "metaparse__v1__fwd__get_remaining" { header "metaparse/v1/fwd/get_remaining.hpp" export * }
  module "metaparse__v1__fwd__get_result" { header "metaparse/v1/fwd/get_result.hpp" export * }
  module "metaparse__v1__fwd__next_char" { header "metaparse/v1/fwd/next_char.hpp" export * }
  module "metaparse__v1__fwd__next_line" { header "metaparse/v1/fwd/next_line.hpp" export * }
  module "metaparse__v1__fwd__reject" { header "metaparse/v1/fwd/reject.hpp" export * }
  module "metaparse__v1__fwd__source_position" { header "metaparse/v1/fwd/source_position.hpp" export * }
  module "metaparse__v1__fwd__string" { header "metaparse/v1/fwd/string.hpp" export * }
  module "metaparse__v1__get_col" { header "metaparse/v1/get_col.hpp" export * }
  module "metaparse__v1__get_line" { header "metaparse/v1/get_line.hpp" export * }
  module "metaparse__v1__get_message" { header "metaparse/v1/get_message.hpp" export * }
  module "metaparse__v1__get_position" { header "metaparse/v1/get_position.hpp" export * }
  module "metaparse__v1__get_prev_char" { header "metaparse/v1/get_prev_char.hpp" export * }
  module "metaparse__v1__get_remaining" { header "metaparse/v1/get_remaining.hpp" export * }
  module "metaparse__v1__get_result" { header "metaparse/v1/get_result.hpp" export * }
  module "metaparse__v1__grammar" { header "metaparse/v1/grammar.hpp" export * }
  module "metaparse__v1__if_" { header "metaparse/v1/if_.hpp" export * }
  module "metaparse__v1__impl__apply_parser" { header "metaparse/v1/impl/apply_parser.hpp" export * }
  module "metaparse__v1__impl__at_c" { header "metaparse/v1/impl/at_c.hpp" export * }
  module "metaparse__v1__impl__back_inserter" { header "metaparse/v1/impl/back_inserter.hpp" export * }
  module "metaparse__v1__impl__front_inserter" { header "metaparse/v1/impl/front_inserter.hpp" export * }
  module "metaparse__v1__impl__fwd__iterate_impl" { header "metaparse/v1/impl/fwd/iterate_impl.hpp" export * }
  module "metaparse__v1__impl__has_type" { header "metaparse/v1/impl/has_type.hpp" export * }
  module "metaparse__v1__impl__is_char_c" { header "metaparse/v1/impl/is_char_c.hpp" export * }
  module "metaparse__v1__impl__iterate_impl" { header "metaparse/v1/impl/iterate_impl.hpp" export * }
  module "metaparse__v1__impl__iterate_impl_unchecked" { header "metaparse/v1/impl/iterate_impl_unchecked.hpp" export * }
  module "metaparse__v1__impl__next_digit" { header "metaparse/v1/impl/next_digit.hpp" export * }
  module "metaparse__v1__impl__no_char" { header "metaparse/v1/impl/no_char.hpp" export * }
  module "metaparse__v1__impl__returns" { header "metaparse/v1/impl/returns.hpp" export * }
  module "metaparse__v1__impl__string_iterator" { header "metaparse/v1/impl/string_iterator.hpp" export * }
  module "metaparse__v1__impl__string_iterator_tag" { header "metaparse/v1/impl/string_iterator_tag.hpp" export * }
  module "metaparse__v1__impl__void_" { header "metaparse/v1/impl/void_.hpp" export * }
  module "metaparse__v1__int_" { header "metaparse/v1/int_.hpp" export * }
  module "metaparse__v1__is_error" { header "metaparse/v1/is_error.hpp" export * }
  module "metaparse__v1__iterate_c" { header "metaparse/v1/iterate_c.hpp" export * }
  module "metaparse__v1__iterate" { header "metaparse/v1/iterate.hpp" export * }
  module "metaparse__v1__keyword" { header "metaparse/v1/keyword.hpp" export * }
  module "metaparse__v1__last_of" { header "metaparse/v1/last_of.hpp" export * }
  module "metaparse__v1__letter" { header "metaparse/v1/letter.hpp" export * }
  module "metaparse__v1__lit_c" { header "metaparse/v1/lit_c.hpp" export * }
  module "metaparse__v1__lit" { header "metaparse/v1/lit.hpp" export * }
  module "metaparse__v1__look_ahead" { header "metaparse/v1/look_ahead.hpp" export * }
  module "metaparse__v1__middle_of" { header "metaparse/v1/middle_of.hpp" export * }
  module "metaparse__v1__next_char" { header "metaparse/v1/next_char.hpp" export * }
  module "metaparse__v1__next_line" { header "metaparse/v1/next_line.hpp" export * }
  module "metaparse__v1__nth_of_c" { header "metaparse/v1/nth_of_c.hpp" export * }
  module "metaparse__v1__nth_of" { header "metaparse/v1/nth_of.hpp" export * }
  module "metaparse__v1__one_char_except_c" { header "metaparse/v1/one_char_except_c.hpp" export * }
  module "metaparse__v1__one_char_except" { header "metaparse/v1/one_char_except.hpp" export * }
  module "metaparse__v1__one_char" { header "metaparse/v1/one_char.hpp" export * }
  module "metaparse__v1__one_of_c" { header "metaparse/v1/one_of_c.hpp" export * }
  module "metaparse__v1__one_of" { header "metaparse/v1/one_of.hpp" export * }
  module "metaparse__v1__optional" { header "metaparse/v1/optional.hpp" export * }
  module "metaparse__v1__range_c" { header "metaparse/v1/range_c.hpp" export * }
  module "metaparse__v1__range" { header "metaparse/v1/range.hpp" export * }
  module "metaparse__v1__reject" { header "metaparse/v1/reject.hpp" export * }
  module "metaparse__v1__repeated1" { header "metaparse/v1/repeated1.hpp" export * }
  module "metaparse__v1__repeated" { header "metaparse/v1/repeated.hpp" export * }
  module "metaparse__v1__repeated_one_of1" { header "metaparse/v1/repeated_one_of1.hpp" export * }
  module "metaparse__v1__repeated_one_of" { header "metaparse/v1/repeated_one_of.hpp" export * }
  module "metaparse__v1__repeated_reject_incomplete1" { header "metaparse/v1/repeated_reject_incomplete1.hpp" export * }
  module "metaparse__v1__repeated_reject_incomplete" { header "metaparse/v1/repeated_reject_incomplete.hpp" export * }
  module "metaparse__v1__return_" { header "metaparse/v1/return_.hpp" export * }
  module "metaparse__v1__sequence_apply" { header "metaparse/v1/sequence_apply.hpp" export * }
  module "metaparse__v1__sequence" { header "metaparse/v1/sequence.hpp" export * }
  module "metaparse__v1__source_position" { header "metaparse/v1/source_position.hpp" export * }
  module "metaparse__v1__source_position_tag" { header "metaparse/v1/source_position_tag.hpp" export * }
  module "metaparse__v1__space" { header "metaparse/v1/space.hpp" export * }
  module "metaparse__v1__spaces" { header "metaparse/v1/spaces.hpp" export * }
  module "metaparse__v1__start" { header "metaparse/v1/start.hpp" export * }
  module "metaparse__v1__string" { header "metaparse/v1/string.hpp" export * }
  module "metaparse__v1__string_tag" { header "metaparse/v1/string_tag.hpp" export * }
  module "metaparse__v1__swap" { header "metaparse/v1/swap.hpp" export * }
  module "metaparse__v1__token" { header "metaparse/v1/token.hpp" export * }
  module "metaparse__v1__transform_error" { header "metaparse/v1/transform_error.hpp" export * }
  module "metaparse__v1__transform_error_message" { header "metaparse/v1/transform_error_message.hpp" export * }
  module "metaparse__v1__transform" { header "metaparse/v1/transform.hpp" export * }
  module "metaparse__v1__unless_error" { header "metaparse/v1/unless_error.hpp" export * }
  module "metaparse__v1__util__digit_to_int_c" { header "metaparse/v1/util/digit_to_int_c.hpp" export * }
  module "metaparse__v1__util__digit_to_int" { header "metaparse/v1/util/digit_to_int.hpp" export * }
  module "metaparse__v1__util__in_range_c" { header "metaparse/v1/util/in_range_c.hpp" export * }
  module "metaparse__v1__util__in_range" { header "metaparse/v1/util/in_range.hpp" export * }
  module "metaparse__v1__util__int_to_digit_c" { header "metaparse/v1/util/int_to_digit_c.hpp" export * }
  module "metaparse__v1__util__int_to_digit" { header "metaparse/v1/util/int_to_digit.hpp" export * }
  module "metaparse__v1__util__is_digit" { header "metaparse/v1/util/is_digit.hpp" export * }
  module "metaparse__v1__util__is_lcase_letter" { header "metaparse/v1/util/is_lcase_letter.hpp" export * }
  module "metaparse__v1__util__is_letter" { header "metaparse/v1/util/is_letter.hpp" export * }
  module "metaparse__v1__util__is_ucase_letter" { header "metaparse/v1/util/is_ucase_letter.hpp" export * }
  module "metaparse__v1__util__is_whitespace_c" { header "metaparse/v1/util/is_whitespace_c.hpp" export * }
  module "metaparse__v1__util__is_whitespace" { header "metaparse/v1/util/is_whitespace.hpp" export * }
  module "metaparse__version" { header "metaparse/version.hpp" export * }
}
module boost_mpi {
  export *
  module "mpi__detail__computation_tree" { header "mpi/detail/computation_tree.hpp" export * }
  module "mpi__detail__forward_skeleton_oarchive" { header "mpi/detail/forward_skeleton_oarchive.hpp" export * }
  module "mpi__detail__ignore_skeleton_oarchive" { header "mpi/detail/ignore_skeleton_oarchive.hpp" export * }
  module "mpi__skeleton_and_content_fwd" { header "mpi/skeleton_and_content_fwd.hpp" export * }
}
module boost_mpl {
  export *
  module "mpl__accumulate" { header "mpl/accumulate.hpp" export * }
  module "mpl__advance_fwd" { header "mpl/advance_fwd.hpp" export * }
  module "mpl__advance" { header "mpl/advance.hpp" export * }
  module "mpl__always" { header "mpl/always.hpp" export * }
  module "mpl__and" { header "mpl/and.hpp" export * }
  module "mpl__apply_fwd" { header "mpl/apply_fwd.hpp" export * }
  module "mpl__apply" { header "mpl/apply.hpp" export * }
  module "mpl__apply_wrap" { header "mpl/apply_wrap.hpp" export * }
  module "mpl__arg_fwd" { header "mpl/arg_fwd.hpp" export * }
  module "mpl__arg" { header "mpl/arg.hpp" export * }
  module "mpl__arithmetic" { header "mpl/arithmetic.hpp" export * }
  module "mpl__as_sequence" { header "mpl/as_sequence.hpp" export * }
  module "mpl__assert" { header "mpl/assert.hpp" export * }
  module "mpl__at_fwd" { header "mpl/at_fwd.hpp" export * }
  module "mpl__at" { header "mpl/at.hpp" export * }
  module "mpl__aux___adl_barrier" { header "mpl/aux_/adl_barrier.hpp" export * }
  module "mpl__aux___advance_backward" { header "mpl/aux_/advance_backward.hpp" export * }
  module "mpl__aux___advance_forward" { header "mpl/aux_/advance_forward.hpp" export * }
  module "mpl__aux___apply_1st" { header "mpl/aux_/apply_1st.hpp" export * }
  module "mpl__aux___arg_typedef" { header "mpl/aux_/arg_typedef.hpp" export * }
  module "mpl__aux___arity" { header "mpl/aux_/arity.hpp" export * }
  module "mpl__aux___arity_spec" { header "mpl/aux_/arity_spec.hpp" export * }
  module "mpl__aux___at_impl" { header "mpl/aux_/at_impl.hpp" export * }
  module "mpl__aux___back_impl" { header "mpl/aux_/back_impl.hpp" export * }
  module "mpl__aux___basic_bind" { header "mpl/aux_/basic_bind.hpp" export * }
  module "mpl__aux___begin_end_impl" { header "mpl/aux_/begin_end_impl.hpp" export * }
  module "mpl__aux___clear_impl" { header "mpl/aux_/clear_impl.hpp" export * }
  module "mpl__aux___common_name_wknd" { header "mpl/aux_/common_name_wknd.hpp" export * }
  module "mpl__aux___config__adl" { header "mpl/aux_/config/adl.hpp" export * }
  module "mpl__aux___config__arrays" { header "mpl/aux_/config/arrays.hpp" export * }
  module "mpl__aux___config__bcc" { header "mpl/aux_/config/bcc.hpp" export * }
  module "mpl__aux___config__bind" { header "mpl/aux_/config/bind.hpp" export * }
  module "mpl__aux___config__compiler" { header "mpl/aux_/config/compiler.hpp" export * }
  module "mpl__aux___config__ctps" { header "mpl/aux_/config/ctps.hpp" export * }
  module "mpl__aux___config__dependent_nttp" { header "mpl/aux_/config/dependent_nttp.hpp" export * }
  module "mpl__aux___config__dmc_ambiguous_ctps" { header "mpl/aux_/config/dmc_ambiguous_ctps.hpp" export * }
  module "mpl__aux___config__dtp" { header "mpl/aux_/config/dtp.hpp" export * }
  module "mpl__aux___config__eti" { header "mpl/aux_/config/eti.hpp" export * }
  module "mpl__aux___config__forwarding" { header "mpl/aux_/config/forwarding.hpp" export * }
  module "mpl__aux___config__gcc" { header "mpl/aux_/config/gcc.hpp" export * }
  module "mpl__aux___config__gpu" { header "mpl/aux_/config/gpu.hpp" export * }
  module "mpl__aux___config__has_apply" { header "mpl/aux_/config/has_apply.hpp" export * }
  module "mpl__aux___config__has_xxx" { header "mpl/aux_/config/has_xxx.hpp" export * }
  module "mpl__aux___config__integral" { header "mpl/aux_/config/integral.hpp" export * }
  module "mpl__aux___config__intel" { header "mpl/aux_/config/intel.hpp" export * }
  module "mpl__aux___config__lambda" { header "mpl/aux_/config/lambda.hpp" export * }
  module "mpl__aux___config__msvc" { header "mpl/aux_/config/msvc.hpp" export * }
  module "mpl__aux___config__msvc_typename" { header "mpl/aux_/config/msvc_typename.hpp" export * }
  module "mpl__aux___config__nttp" { header "mpl/aux_/config/nttp.hpp" export * }
  module "mpl__aux___config__operators" { header "mpl/aux_/config/operators.hpp" export * }
  module "mpl__aux___config__overload_resolution" { header "mpl/aux_/config/overload_resolution.hpp" export * }
  module "mpl__aux___config__preprocessor" { header "mpl/aux_/config/preprocessor.hpp" export * }
  module "mpl__aux___config__static_constant" { header "mpl/aux_/config/static_constant.hpp" export * }
  module "mpl__aux___config__ttp" { header "mpl/aux_/config/ttp.hpp" export * }
  module "mpl__aux___config__typeof" { header "mpl/aux_/config/typeof.hpp" export * }
  module "mpl__aux___config__use_preprocessed" { header "mpl/aux_/config/use_preprocessed.hpp" export * }
  module "mpl__aux___config__workaround" { header "mpl/aux_/config/workaround.hpp" export * }
  module "mpl__aux___contains_impl" { header "mpl/aux_/contains_impl.hpp" export * }
  module "mpl__aux___count_impl" { header "mpl/aux_/count_impl.hpp" export * }
  module "mpl__aux___empty_impl" { header "mpl/aux_/empty_impl.hpp" export * }
  module "mpl__aux___erase_impl" { header "mpl/aux_/erase_impl.hpp" export * }
  module "mpl__aux___erase_key_impl" { header "mpl/aux_/erase_key_impl.hpp" export * }
  module "mpl__aux___filter_iter" { header "mpl/aux_/filter_iter.hpp" export * }
  module "mpl__aux___find_if_pred" { header "mpl/aux_/find_if_pred.hpp" export * }
  module "mpl__aux___fold_impl" { header "mpl/aux_/fold_impl.hpp" export * }
  module "mpl__aux___fold_op" { header "mpl/aux_/fold_op.hpp" export * }
  module "mpl__aux___fold_pred" { header "mpl/aux_/fold_pred.hpp" export * }
  module "mpl__aux___front_impl" { header "mpl/aux_/front_impl.hpp" export * }
  module "mpl__aux___full_lambda" { header "mpl/aux_/full_lambda.hpp" export * }
  module "mpl__aux___has_apply" { header "mpl/aux_/has_apply.hpp" export * }
  module "mpl__aux___has_begin" { header "mpl/aux_/has_begin.hpp" export * }
  module "mpl__aux___has_key_impl" { header "mpl/aux_/has_key_impl.hpp" export * }
  module "mpl__aux___has_rebind" { header "mpl/aux_/has_rebind.hpp" export * }
  module "mpl__aux___has_size" { header "mpl/aux_/has_size.hpp" export * }
  module "mpl__aux___has_tag" { header "mpl/aux_/has_tag.hpp" export * }
  module "mpl__aux___has_type" { header "mpl/aux_/has_type.hpp" export * }
  module "mpl__aux___inserter_algorithm" { header "mpl/aux_/inserter_algorithm.hpp" export * }
  module "mpl__aux___insert_impl" { header "mpl/aux_/insert_impl.hpp" export * }
  module "mpl__aux___insert_range_impl" { header "mpl/aux_/insert_range_impl.hpp" export * }
  module "mpl__aux___is_msvc_eti_arg" { header "mpl/aux_/is_msvc_eti_arg.hpp" export * }
  module "mpl__aux___iter_apply" { header "mpl/aux_/iter_apply.hpp" export * }
  module "mpl__aux___iter_fold_if_impl" { header "mpl/aux_/iter_fold_if_impl.hpp" export * }
  module "mpl__aux___iter_fold_impl" { header "mpl/aux_/iter_fold_impl.hpp" export * }
  module "mpl__aux___iter_push_front" { header "mpl/aux_/iter_push_front.hpp" export * }
  module "mpl__aux___joint_iter" { header "mpl/aux_/joint_iter.hpp" export * }
  module "mpl__aux___lambda_arity_param" { header "mpl/aux_/lambda_arity_param.hpp" export * }
  module "mpl__aux___lambda_no_ctps" { header "mpl/aux_/lambda_no_ctps.hpp" export * }
  module "mpl__aux___lambda_spec" { header "mpl/aux_/lambda_spec.hpp" export * }
  module "mpl__aux___lambda_support" { header "mpl/aux_/lambda_support.hpp" export * }
  module "mpl__aux___largest_int" { header "mpl/aux_/largest_int.hpp" export * }
  module "mpl__aux___msvc_eti_base" { header "mpl/aux_/msvc_eti_base.hpp" export * }
  module "mpl__aux___msvc_never_true" { header "mpl/aux_/msvc_never_true.hpp" export * }
  module "mpl__aux___msvc_type" { header "mpl/aux_/msvc_type.hpp" export * }
  module "mpl__aux___na_assert" { header "mpl/aux_/na_assert.hpp" export * }
  module "mpl__aux___na_fwd" { header "mpl/aux_/na_fwd.hpp" export * }
  module "mpl__aux___na" { header "mpl/aux_/na.hpp" export * }
  module "mpl__aux___na_spec" { header "mpl/aux_/na_spec.hpp" export * }
  module "mpl__aux___nested_type_wknd" { header "mpl/aux_/nested_type_wknd.hpp" export * }
  module "mpl__aux___nttp_decl" { header "mpl/aux_/nttp_decl.hpp" export * }
  module "mpl__aux___numeric_cast_utils" { header "mpl/aux_/numeric_cast_utils.hpp" export * }
  module "mpl__aux___numeric_op" { header "mpl/aux_/numeric_op.hpp" export * }
  module "mpl__aux___O1_size_impl" { header "mpl/aux_/O1_size_impl.hpp" export * }
  module "mpl__aux___order_impl" { header "mpl/aux_/order_impl.hpp" export * }
  module "mpl__aux___overload_names" { header "mpl/aux_/overload_names.hpp" export * }
  module "mpl__aux___partition_op" { header "mpl/aux_/partition_op.hpp" export * }
  module "mpl__aux___pop_back_impl" { header "mpl/aux_/pop_back_impl.hpp" export * }
  module "mpl__aux___pop_front_impl" { header "mpl/aux_/pop_front_impl.hpp" export * }
  module "mpl__aux___preprocessed__bcc551__bind_fwd" { header "mpl/aux_/preprocessed/bcc551/bind_fwd.hpp" export * }
  module "mpl__aux___preprocessed__bcc551__quote" { header "mpl/aux_/preprocessed/bcc551/quote.hpp" export * }
  module "mpl__aux___preprocessed__bcc__bind_fwd" { header "mpl/aux_/preprocessed/bcc/bind_fwd.hpp" export * }
  module "mpl__aux___preprocessed__bcc_pre590__bind_fwd" { header "mpl/aux_/preprocessed/bcc_pre590/bind_fwd.hpp" export * }
  module "mpl__aux___preprocessed__bcc_pre590__quote" { header "mpl/aux_/preprocessed/bcc_pre590/quote.hpp" export * }
  module "mpl__aux___preprocessed__dmc__template_arity" { header "mpl/aux_/preprocessed/dmc/template_arity.hpp" export * }
  module "mpl__aux___preprocessed__msvc60__apply_fwd" { header "mpl/aux_/preprocessed/msvc60/apply_fwd.hpp" export * }
  module "mpl__aux___preprocessed__msvc60__bind_fwd" { header "mpl/aux_/preprocessed/msvc60/bind_fwd.hpp" export * }
  module "mpl__aux___preprocessed__msvc60__quote" { header "mpl/aux_/preprocessed/msvc60/quote.hpp" export * }
  module "mpl__aux___preprocessed__msvc70__apply_fwd" { header "mpl/aux_/preprocessed/msvc70/apply_fwd.hpp" export * }
  module "mpl__aux___preprocessed__msvc70__bind_fwd" { header "mpl/aux_/preprocessed/msvc70/bind_fwd.hpp" export * }
  module "mpl__aux___preprocessed__mwcw__template_arity" { header "mpl/aux_/preprocessed/mwcw/template_arity.hpp" export * }
  module "mpl__aux___preprocessed__no_ttp__quote" { header "mpl/aux_/preprocessed/no_ttp/quote.hpp" export * }
  module "mpl__aux___preprocessed__plain__template_arity" { header "mpl/aux_/preprocessed/plain/template_arity.hpp" export * }
  module "mpl__aux___preprocessor__add" { header "mpl/aux_/preprocessor/add.hpp" export * }
  module "mpl__aux___preprocessor__default_params" { header "mpl/aux_/preprocessor/default_params.hpp" export * }
  module "mpl__aux___preprocessor__def_params_tail" { header "mpl/aux_/preprocessor/def_params_tail.hpp" export * }
  module "mpl__aux___preprocessor__enum" { header "mpl/aux_/preprocessor/enum.hpp" export * }
  module "mpl__aux___preprocessor__ext_params" { header "mpl/aux_/preprocessor/ext_params.hpp" export * }
  module "mpl__aux___preprocessor__filter_params" { header "mpl/aux_/preprocessor/filter_params.hpp" export * }
  module "mpl__aux___preprocessor__is_seq" { header "mpl/aux_/preprocessor/is_seq.hpp" export * }
  module "mpl__aux___preprocessor__params" { header "mpl/aux_/preprocessor/params.hpp" export * }
  module "mpl__aux___preprocessor__partial_spec_params" { header "mpl/aux_/preprocessor/partial_spec_params.hpp" export * }
  module "mpl__aux___preprocessor__range" { header "mpl/aux_/preprocessor/range.hpp" export * }
  module "mpl__aux___preprocessor__repeat" { header "mpl/aux_/preprocessor/repeat.hpp" export * }
  module "mpl__aux___preprocessor__sub" { header "mpl/aux_/preprocessor/sub.hpp" export * }
  module "mpl__aux___preprocessor__token_equal" { header "mpl/aux_/preprocessor/token_equal.hpp" export * }
  module "mpl__aux___preprocessor__tuple" { header "mpl/aux_/preprocessor/tuple.hpp" export * }
  module "mpl__aux___ptr_to_ref" { header "mpl/aux_/ptr_to_ref.hpp" export * }
  module "mpl__aux___push_back_impl" { header "mpl/aux_/push_back_impl.hpp" export * }
  module "mpl__aux___push_front_impl" { header "mpl/aux_/push_front_impl.hpp" export * }
  module "mpl__aux___range_c__back" { header "mpl/aux_/range_c/back.hpp" export * }
  module "mpl__aux___range_c__empty" { header "mpl/aux_/range_c/empty.hpp" export * }
  module "mpl__aux___range_c__front" { header "mpl/aux_/range_c/front.hpp" export * }
  module "mpl__aux___range_c__O1_size" { header "mpl/aux_/range_c/O1_size.hpp" export * }
  module "mpl__aux___range_c__size" { header "mpl/aux_/range_c/size.hpp" export * }
  module "mpl__aux___range_c__tag" { header "mpl/aux_/range_c/tag.hpp" export * }
  module "mpl__aux___reverse_fold_impl" { header "mpl/aux_/reverse_fold_impl.hpp" export * }
  module "mpl__aux___reverse_iter_fold_impl" { header "mpl/aux_/reverse_iter_fold_impl.hpp" export * }
  module "mpl__aux___single_element_iter" { header "mpl/aux_/single_element_iter.hpp" export * }
  module "mpl__aux___size_impl" { header "mpl/aux_/size_impl.hpp" export * }
  module "mpl__aux___sort_impl" { header "mpl/aux_/sort_impl.hpp" export * }
  module "mpl__aux___static_cast" { header "mpl/aux_/static_cast.hpp" export * }
  module "mpl__aux___template_arity_fwd" { header "mpl/aux_/template_arity_fwd.hpp" export * }
  module "mpl__aux___template_arity" { header "mpl/aux_/template_arity.hpp" export * }
  module "mpl__aux___test__assert" { header "mpl/aux_/test/assert.hpp" export * }
  module "mpl__aux___test__data" { header "mpl/aux_/test/data.hpp" export * }
  module "mpl__aux___test__test_case" { header "mpl/aux_/test/test_case.hpp" export * }
  module "mpl__aux___traits_lambda_spec" { header "mpl/aux_/traits_lambda_spec.hpp" export * }
  module "mpl__aux___transform_iter" { header "mpl/aux_/transform_iter.hpp" export * }
  module "mpl__aux___type_wrapper" { header "mpl/aux_/type_wrapper.hpp" export * }
  module "mpl__aux___unwrap" { header "mpl/aux_/unwrap.hpp" export * }
  module "mpl__aux___value_wknd" { header "mpl/aux_/value_wknd.hpp" export * }
  module "mpl__aux___yes_no" { header "mpl/aux_/yes_no.hpp" export * }
  module "mpl__back_fwd" { header "mpl/back_fwd.hpp" export * }
  module "mpl__back" { header "mpl/back.hpp" export * }
  module "mpl__back_inserter" { header "mpl/back_inserter.hpp" export * }
  module "mpl__base" { header "mpl/base.hpp" export * }
  module "mpl__begin_end_fwd" { header "mpl/begin_end_fwd.hpp" export * }
  module "mpl__begin_end" { header "mpl/begin_end.hpp" export * }
  module "mpl__begin" { header "mpl/begin.hpp" export * }
  module "mpl__bind_fwd" { header "mpl/bind_fwd.hpp" export * }
  module "mpl__bind" { header "mpl/bind.hpp" export * }
  module "mpl__bitand" { header "mpl/bitand.hpp" export * }
  module "mpl__bitor" { header "mpl/bitor.hpp" export * }
  module "mpl__bitwise" { header "mpl/bitwise.hpp" export * }
  module "mpl__bitxor" { header "mpl/bitxor.hpp" export * }
  module "mpl__bool_fwd" { header "mpl/bool_fwd.hpp" export * }
  module "mpl__bool" { header "mpl/bool.hpp" export * }
  module "mpl__char_fwd" { header "mpl/char_fwd.hpp" export * }
  module "mpl__char" { header "mpl/char.hpp" export * }
  module "mpl__clear_fwd" { header "mpl/clear_fwd.hpp" export * }
  module "mpl__clear" { header "mpl/clear.hpp" export * }
  module "mpl__comparison" { header "mpl/comparison.hpp" export * }
  module "mpl__contains_fwd" { header "mpl/contains_fwd.hpp" export * }
  module "mpl__contains" { header "mpl/contains.hpp" export * }
  module "mpl__copy" { header "mpl/copy.hpp" export * }
  module "mpl__copy_if" { header "mpl/copy_if.hpp" export * }
  module "mpl__count_fwd" { header "mpl/count_fwd.hpp" export * }
  module "mpl__count" { header "mpl/count.hpp" export * }
  module "mpl__count_if" { header "mpl/count_if.hpp" export * }
  module "mpl__deque" { header "mpl/deque.hpp" export * }
  module "mpl__deref" { header "mpl/deref.hpp" export * }
  module "mpl__distance_fwd" { header "mpl/distance_fwd.hpp" export * }
  module "mpl__distance" { header "mpl/distance.hpp" export * }
  module "mpl__divides" { header "mpl/divides.hpp" export * }
  module "mpl__empty_base" { header "mpl/empty_base.hpp" export * }
  module "mpl__empty_fwd" { header "mpl/empty_fwd.hpp" export * }
  module "mpl__empty" { header "mpl/empty.hpp" export * }
  module "mpl__empty_sequence" { header "mpl/empty_sequence.hpp" export * }
  module "mpl__end" { header "mpl/end.hpp" export * }
  module "mpl__equal" { header "mpl/equal.hpp" export * }
  module "mpl__equal_to" { header "mpl/equal_to.hpp" export * }
  module "mpl__erase_fwd" { header "mpl/erase_fwd.hpp" export * }
  module "mpl__erase" { header "mpl/erase.hpp" export * }
  module "mpl__erase_key_fwd" { header "mpl/erase_key_fwd.hpp" export * }
  module "mpl__erase_key" { header "mpl/erase_key.hpp" export * }
  module "mpl__eval_if" { header "mpl/eval_if.hpp" export * }
  module "mpl__filter_view" { header "mpl/filter_view.hpp" export * }
  module "mpl__find" { header "mpl/find.hpp" export * }
  module "mpl__find_if" { header "mpl/find_if.hpp" export * }
  module "mpl__fold" { header "mpl/fold.hpp" export * }
  // cyclic dependency utility <-> mpl module "mpl__for_each" { header "mpl/for_each.hpp" export * }
  module "mpl__front_fwd" { header "mpl/front_fwd.hpp" export * }
  module "mpl__front" { header "mpl/front.hpp" export * }
  module "mpl__front_inserter" { header "mpl/front_inserter.hpp" export * }
  module "mpl__greater_equal" { header "mpl/greater_equal.hpp" export * }
  module "mpl__greater" { header "mpl/greater.hpp" export * }
  module "mpl__has_key_fwd" { header "mpl/has_key_fwd.hpp" export * }
  module "mpl__has_key" { header "mpl/has_key.hpp" export * }
  module "mpl__has_xxx" { header "mpl/has_xxx.hpp" export * }
  module "mpl__identity" { header "mpl/identity.hpp" export * }
  module "mpl__if" { header "mpl/if.hpp" export * }
  module "mpl__index_if" { header "mpl/index_if.hpp" export * }
  module "mpl__index_of" { header "mpl/index_of.hpp" export * }
  module "mpl__inherit" { header "mpl/inherit.hpp" export * }
  module "mpl__inherit_linearly" { header "mpl/inherit_linearly.hpp" export * }
  module "mpl__inserter" { header "mpl/inserter.hpp" export * }
  module "mpl__insert_fwd" { header "mpl/insert_fwd.hpp" export * }
  module "mpl__insert" { header "mpl/insert.hpp" export * }
  module "mpl__insert_range_fwd" { header "mpl/insert_range_fwd.hpp" export * }
  module "mpl__insert_range" { header "mpl/insert_range.hpp" export * }
  module "mpl__integral_c_fwd" { header "mpl/integral_c_fwd.hpp" export * }
  module "mpl__integral_c" { header "mpl/integral_c.hpp" export * }
  module "mpl__integral_c_tag" { header "mpl/integral_c_tag.hpp" export * }
  module "mpl__int_fwd" { header "mpl/int_fwd.hpp" export * }
  module "mpl__int" { header "mpl/int.hpp" export * }
  module "mpl__is_placeholder" { header "mpl/is_placeholder.hpp" export * }
  module "mpl__is_sequence" { header "mpl/is_sequence.hpp" export * }
  module "mpl__iterator_category" { header "mpl/iterator_category.hpp" export * }
  module "mpl__iterator_range" { header "mpl/iterator_range.hpp" export * }
  module "mpl__iterator_tags" { header "mpl/iterator_tags.hpp" export * }
  module "mpl__iter_fold" { header "mpl/iter_fold.hpp" export * }
  module "mpl__iter_fold_if" { header "mpl/iter_fold_if.hpp" export * }
  module "mpl__joint_view" { header "mpl/joint_view.hpp" export * }
  module "mpl__key_type_fwd" { header "mpl/key_type_fwd.hpp" export * }
  module "mpl__key_type" { header "mpl/key_type.hpp" export * }
  module "mpl__lambda_fwd" { header "mpl/lambda_fwd.hpp" export * }
  module "mpl__lambda" { header "mpl/lambda.hpp" export * }
  module "mpl__less_equal" { header "mpl/less_equal.hpp" export * }
  module "mpl__less" { header "mpl/less.hpp" export * }
  module "mpl__limits__arity" { header "mpl/limits/arity.hpp" export * }
  module "mpl__limits__list" { header "mpl/limits/list.hpp" export * }
  module "mpl__limits__map" { header "mpl/limits/map.hpp" export * }
  module "mpl__limits__set" { header "mpl/limits/set.hpp" export * }
  module "mpl__limits__string" { header "mpl/limits/string.hpp" export * }
  module "mpl__limits__unrolling" { header "mpl/limits/unrolling.hpp" export * }
  module "mpl__limits__vector" { header "mpl/limits/vector.hpp" export * }
  module "mpl__list__aux___begin_end" { header "mpl/list/aux_/begin_end.hpp" export * }
  module "mpl__list__aux___clear" { header "mpl/list/aux_/clear.hpp" export * }
  module "mpl__list__aux___empty" { header "mpl/list/aux_/empty.hpp" export * }
  module "mpl__list__aux___front" { header "mpl/list/aux_/front.hpp" export * }
  module "mpl__list__aux___item" { header "mpl/list/aux_/item.hpp" export * }
  module "mpl__list__aux___iterator" { header "mpl/list/aux_/iterator.hpp" export * }
  module "mpl__list__aux___numbered_c" { header "mpl/list/aux_/numbered_c.hpp" export * }
  module "mpl__list__aux___numbered" { header "mpl/list/aux_/numbered.hpp" export * }
  module "mpl__list__aux___O1_size" { header "mpl/list/aux_/O1_size.hpp" export * }
  module "mpl__list__aux___pop_front" { header "mpl/list/aux_/pop_front.hpp" export * }
  module "mpl__list__aux___push_back" { header "mpl/list/aux_/push_back.hpp" export * }
  module "mpl__list__aux___push_front" { header "mpl/list/aux_/push_front.hpp" export * }
  module "mpl__list__aux___size" { header "mpl/list/aux_/size.hpp" export * }
  module "mpl__list__aux___tag" { header "mpl/list/aux_/tag.hpp" export * }
  module "mpl__list_c" { header "mpl/list_c.hpp" export * }
  module "mpl__list" { header "mpl/list.hpp" export * }
  module "mpl__list__list0_c" { header "mpl/list/list0_c.hpp" export * }
  module "mpl__list__list0" { header "mpl/list/list0.hpp" export * }
  module "mpl__list__list10_c" { header "mpl/list/list10_c.hpp" export * }
  module "mpl__list__list10" { header "mpl/list/list10.hpp" export * }
  module "mpl__list__list20_c" { header "mpl/list/list20_c.hpp" export * }
  module "mpl__list__list20" { header "mpl/list/list20.hpp" export * }
  module "mpl__list__list30_c" { header "mpl/list/list30_c.hpp" export * }
  module "mpl__list__list30" { header "mpl/list/list30.hpp" export * }
  module "mpl__list__list40_c" { header "mpl/list/list40_c.hpp" export * }
  module "mpl__list__list40" { header "mpl/list/list40.hpp" export * }
  module "mpl__list__list50_c" { header "mpl/list/list50_c.hpp" export * }
  module "mpl__list__list50" { header "mpl/list/list50.hpp" export * }
  module "mpl__logical" { header "mpl/logical.hpp" export * }
  module "mpl__long_fwd" { header "mpl/long_fwd.hpp" export * }
  module "mpl__long" { header "mpl/long.hpp" export * }
  module "mpl__lower_bound" { header "mpl/lower_bound.hpp" export * }
  module "mpl__map__aux___at_impl" { header "mpl/map/aux_/at_impl.hpp" export * }
  module "mpl__map__aux___begin_end_impl" { header "mpl/map/aux_/begin_end_impl.hpp" export * }
  module "mpl__map__aux___clear_impl" { header "mpl/map/aux_/clear_impl.hpp" export * }
  module "mpl__map__aux___contains_impl" { header "mpl/map/aux_/contains_impl.hpp" export * }
  module "mpl__map__aux___empty_impl" { header "mpl/map/aux_/empty_impl.hpp" export * }
  module "mpl__map__aux___erase_impl" { header "mpl/map/aux_/erase_impl.hpp" export * }
  module "mpl__map__aux___erase_key_impl" { header "mpl/map/aux_/erase_key_impl.hpp" export * }
  module "mpl__map__aux___has_key_impl" { header "mpl/map/aux_/has_key_impl.hpp" export * }
  module "mpl__map__aux___insert_impl" { header "mpl/map/aux_/insert_impl.hpp" export * }
  module "mpl__map__aux___insert_range_impl" { header "mpl/map/aux_/insert_range_impl.hpp" export * }
  module "mpl__map__aux___item" { header "mpl/map/aux_/item.hpp" export * }
  module "mpl__map__aux___iterator" { header "mpl/map/aux_/iterator.hpp" export * }
  module "mpl__map__aux___key_type_impl" { header "mpl/map/aux_/key_type_impl.hpp" export * }
  module "mpl__map__aux___map0" { header "mpl/map/aux_/map0.hpp" export * }
  module "mpl__map__aux___numbered" { header "mpl/map/aux_/numbered.hpp" export * }
  module "mpl__map__aux___size_impl" { header "mpl/map/aux_/size_impl.hpp" export * }
  module "mpl__map__aux___tag" { header "mpl/map/aux_/tag.hpp" export * }
  module "mpl__map__aux___value_type_impl" { header "mpl/map/aux_/value_type_impl.hpp" export * }
  module "mpl__map" { header "mpl/map.hpp" export * }
  module "mpl__map__map0" { header "mpl/map/map0.hpp" export * }
  module "mpl__map__map10" { header "mpl/map/map10.hpp" export * }
  module "mpl__map__map20" { header "mpl/map/map20.hpp" export * }
  module "mpl__map__map30" { header "mpl/map/map30.hpp" export * }
  module "mpl__map__map40" { header "mpl/map/map40.hpp" export * }
  module "mpl__map__map50" { header "mpl/map/map50.hpp" export * }
  module "mpl__math__fixed_c" { header "mpl/math/fixed_c.hpp" export * }
  module "mpl__math__is_even" { header "mpl/math/is_even.hpp" export * }
  module "mpl__math__rational_c" { header "mpl/math/rational_c.hpp" export * }
  module "mpl__max_element" { header "mpl/max_element.hpp" export * }
  module "mpl__max" { header "mpl/max.hpp" export * }
  module "mpl__min_element" { header "mpl/min_element.hpp" export * }
  module "mpl__min" { header "mpl/min.hpp" export * }
  module "mpl__min_max" { header "mpl/min_max.hpp" export * }
  module "mpl__minus" { header "mpl/minus.hpp" export * }
  module "mpl__modulus" { header "mpl/modulus.hpp" export * }
  module "mpl__multiplies" { header "mpl/multiplies.hpp" export * }
  module "mpl__multiset__aux___count_impl" { header "mpl/multiset/aux_/count_impl.hpp" export * }
  module "mpl__multiset__aux___insert_impl" { header "mpl/multiset/aux_/insert_impl.hpp" export * }
  module "mpl__multiset__aux___item" { header "mpl/multiset/aux_/item.hpp" export * }
  module "mpl__multiset__aux___multiset0" { header "mpl/multiset/aux_/multiset0.hpp" export * }
  module "mpl__multiset__aux___tag" { header "mpl/multiset/aux_/tag.hpp" export * }
  module "mpl__multiset__multiset0" { header "mpl/multiset/multiset0.hpp" export * }
  module "mpl__negate" { header "mpl/negate.hpp" export * }
  module "mpl__next" { header "mpl/next.hpp" export * }
  module "mpl__next_prior" { header "mpl/next_prior.hpp" export * }
  module "mpl__not_equal_to" { header "mpl/not_equal_to.hpp" export * }
  module "mpl__not" { header "mpl/not.hpp" export * }
  module "mpl__numeric_cast" { header "mpl/numeric_cast.hpp" export * }
  module "mpl__O1_size_fwd" { header "mpl/O1_size_fwd.hpp" export * }
  module "mpl__O1_size" { header "mpl/O1_size.hpp" export * }
  module "mpl__order_fwd" { header "mpl/order_fwd.hpp" export * }
  module "mpl__order" { header "mpl/order.hpp" export * }
  module "mpl__or" { header "mpl/or.hpp" export * }
  module "mpl__pair" { header "mpl/pair.hpp" export * }
  module "mpl__pair_view" { header "mpl/pair_view.hpp" export * }
  module "mpl__partition" { header "mpl/partition.hpp" export * }
  module "mpl__placeholders" { header "mpl/placeholders.hpp" export * }
  module "mpl__plus" { header "mpl/plus.hpp" export * }
  module "mpl__pop_back_fwd" { header "mpl/pop_back_fwd.hpp" export * }
  module "mpl__pop_back" { header "mpl/pop_back.hpp" export * }
  module "mpl__pop_front_fwd" { header "mpl/pop_front_fwd.hpp" export * }
  module "mpl__pop_front" { header "mpl/pop_front.hpp" export * }
  module "mpl__print" { header "mpl/print.hpp" export * }
  module "mpl__prior" { header "mpl/prior.hpp" export * }
  module "mpl__protect" { header "mpl/protect.hpp" export * }
  module "mpl__push_back_fwd" { header "mpl/push_back_fwd.hpp" export * }
  module "mpl__push_back" { header "mpl/push_back.hpp" export * }
  module "mpl__push_front_fwd" { header "mpl/push_front_fwd.hpp" export * }
  module "mpl__push_front" { header "mpl/push_front.hpp" export * }
  module "mpl__quote" { header "mpl/quote.hpp" export * }
  module "mpl__range_c" { header "mpl/range_c.hpp" export * }
  module "mpl__remove" { header "mpl/remove.hpp" export * }
  module "mpl__remove_if" { header "mpl/remove_if.hpp" export * }
  module "mpl__replace" { header "mpl/replace.hpp" export * }
  module "mpl__replace_if" { header "mpl/replace_if.hpp" export * }
  module "mpl__reverse_fold" { header "mpl/reverse_fold.hpp" export * }
  module "mpl__reverse" { header "mpl/reverse.hpp" export * }
  module "mpl__reverse_iter_fold" { header "mpl/reverse_iter_fold.hpp" export * }
  module "mpl__same_as" { header "mpl/same_as.hpp" export * }
  module "mpl__sequence_tag_fwd" { header "mpl/sequence_tag_fwd.hpp" export * }
  module "mpl__sequence_tag" { header "mpl/sequence_tag.hpp" export * }
  module "mpl__set__aux___at_impl" { header "mpl/set/aux_/at_impl.hpp" export * }
  module "mpl__set__aux___begin_end_impl" { header "mpl/set/aux_/begin_end_impl.hpp" export * }
  module "mpl__set__aux___clear_impl" { header "mpl/set/aux_/clear_impl.hpp" export * }
  module "mpl__set__aux___empty_impl" { header "mpl/set/aux_/empty_impl.hpp" export * }
  module "mpl__set__aux___has_key_impl" { header "mpl/set/aux_/has_key_impl.hpp" export * }
  module "mpl__set__aux___insert_range_impl" { header "mpl/set/aux_/insert_range_impl.hpp" export * }
  module "mpl__set__aux___iterator" { header "mpl/set/aux_/iterator.hpp" export * }
  module "mpl__set__aux___key_type_impl" { header "mpl/set/aux_/key_type_impl.hpp" export * }
  module "mpl__set__aux___numbered_c" { header "mpl/set/aux_/numbered_c.hpp" export * }
  module "mpl__set__aux___numbered" { header "mpl/set/aux_/numbered.hpp" export * }
  module "mpl__set__aux___set0" { header "mpl/set/aux_/set0.hpp" export * }
  module "mpl__set__aux___size_impl" { header "mpl/set/aux_/size_impl.hpp" export * }
  module "mpl__set__aux___tag" { header "mpl/set/aux_/tag.hpp" export * }
  module "mpl__set__aux___value_type_impl" { header "mpl/set/aux_/value_type_impl.hpp" export * }
  module "mpl__set_c" { header "mpl/set_c.hpp" export * }
  module "mpl__set" { header "mpl/set.hpp" export * }
  module "mpl__set__set0_c" { header "mpl/set/set0_c.hpp" export * }
  module "mpl__set__set0" { header "mpl/set/set0.hpp" export * }
  module "mpl__set__set10_c" { header "mpl/set/set10_c.hpp" export * }
  module "mpl__set__set10" { header "mpl/set/set10.hpp" export * }
  module "mpl__set__set20_c" { header "mpl/set/set20_c.hpp" export * }
  module "mpl__set__set20" { header "mpl/set/set20.hpp" export * }
  module "mpl__set__set30_c" { header "mpl/set/set30_c.hpp" export * }
  module "mpl__set__set30" { header "mpl/set/set30.hpp" export * }
  module "mpl__set__set40_c" { header "mpl/set/set40_c.hpp" export * }
  module "mpl__set__set40" { header "mpl/set/set40.hpp" export * }
  module "mpl__set__set50_c" { header "mpl/set/set50_c.hpp" export * }
  module "mpl__set__set50" { header "mpl/set/set50.hpp" export * }
  module "mpl__shift_left" { header "mpl/shift_left.hpp" export * }
  module "mpl__shift_right" { header "mpl/shift_right.hpp" export * }
  module "mpl__single_view" { header "mpl/single_view.hpp" export * }
  module "mpl__size_fwd" { header "mpl/size_fwd.hpp" export * }
  module "mpl__size" { header "mpl/size.hpp" export * }
  module "mpl__sizeof" { header "mpl/sizeof.hpp" export * }
  module "mpl__size_t_fwd" { header "mpl/size_t_fwd.hpp" export * }
  module "mpl__size_t" { header "mpl/size_t.hpp" export * }
  module "mpl__sort" { header "mpl/sort.hpp" export * }
  module "mpl__stable_partition" { header "mpl/stable_partition.hpp" export * }
  module "mpl__string" { header "mpl/string.hpp" export * }
  module "mpl__switch" { header "mpl/switch.hpp" export * }
  module "mpl__tag" { header "mpl/tag.hpp" export * }
  module "mpl__times" { header "mpl/times.hpp" export * }
  module "mpl__transform" { header "mpl/transform.hpp" export * }
  module "mpl__transform_view" { header "mpl/transform_view.hpp" export * }
  module "mpl__unique" { header "mpl/unique.hpp" export * }
  module "mpl__unpack_args" { header "mpl/unpack_args.hpp" export * }
  module "mpl__upper_bound" { header "mpl/upper_bound.hpp" export * }
  module "mpl__value_type_fwd" { header "mpl/value_type_fwd.hpp" export * }
  module "mpl__value_type" { header "mpl/value_type.hpp" export * }
  module "mpl__vector__aux___at" { header "mpl/vector/aux_/at.hpp" export * }
  module "mpl__vector__aux___back" { header "mpl/vector/aux_/back.hpp" export * }
  module "mpl__vector__aux___begin_end" { header "mpl/vector/aux_/begin_end.hpp" export * }
  module "mpl__vector__aux___clear" { header "mpl/vector/aux_/clear.hpp" export * }
  module "mpl__vector__aux___empty" { header "mpl/vector/aux_/empty.hpp" export * }
  module "mpl__vector__aux___front" { header "mpl/vector/aux_/front.hpp" export * }
  module "mpl__vector__aux___item" { header "mpl/vector/aux_/item.hpp" export * }
  module "mpl__vector__aux___iterator" { header "mpl/vector/aux_/iterator.hpp" export * }
  module "mpl__vector__aux___numbered_c" { header "mpl/vector/aux_/numbered_c.hpp" export * }
  module "mpl__vector__aux___numbered" { header "mpl/vector/aux_/numbered.hpp" export * }
  module "mpl__vector__aux___O1_size" { header "mpl/vector/aux_/O1_size.hpp" export * }
  module "mpl__vector__aux___pop_back" { header "mpl/vector/aux_/pop_back.hpp" export * }
  module "mpl__vector__aux___pop_front" { header "mpl/vector/aux_/pop_front.hpp" export * }
  module "mpl__vector__aux___push_back" { header "mpl/vector/aux_/push_back.hpp" export * }
  module "mpl__vector__aux___push_front" { header "mpl/vector/aux_/push_front.hpp" export * }
  module "mpl__vector__aux___size" { header "mpl/vector/aux_/size.hpp" export * }
  module "mpl__vector__aux___tag" { header "mpl/vector/aux_/tag.hpp" export * }
  module "mpl__vector__aux___vector0" { header "mpl/vector/aux_/vector0.hpp" export * }
  module "mpl__vector_c" { header "mpl/vector_c.hpp" export * }
  module "mpl__vector" { header "mpl/vector.hpp" export * }
  module "mpl__vector__vector0_c" { header "mpl/vector/vector0_c.hpp" export * }
  module "mpl__vector__vector0" { header "mpl/vector/vector0.hpp" export * }
  module "mpl__vector__vector10_c" { header "mpl/vector/vector10_c.hpp" export * }
  module "mpl__vector__vector10" { header "mpl/vector/vector10.hpp" export * }
  module "mpl__vector__vector20_c" { header "mpl/vector/vector20_c.hpp" export * }
  module "mpl__vector__vector20" { header "mpl/vector/vector20.hpp" export * }
  module "mpl__vector__vector30_c" { header "mpl/vector/vector30_c.hpp" export * }
  module "mpl__vector__vector30" { header "mpl/vector/vector30.hpp" export * }
  module "mpl__vector__vector40_c" { header "mpl/vector/vector40_c.hpp" export * }
  module "mpl__vector__vector40" { header "mpl/vector/vector40.hpp" export * }
  module "mpl__vector__vector50_c" { header "mpl/vector/vector50_c.hpp" export * }
  module "mpl__vector__vector50" { header "mpl/vector/vector50.hpp" export * }
  module "mpl__void_fwd" { header "mpl/void_fwd.hpp" export * }
  module "mpl__void" { header "mpl/void.hpp" export * }
  module "mpl__zip_view" { header "mpl/zip_view.hpp" export * }
}
module boost_msm {
  export *
  module "msm__active_state_switching_policies" { header "msm/active_state_switching_policies.hpp" export * }
  module "msm__back__args" { header "msm/back/args.hpp" export * }
  module "msm__back__bind_helpers" { header "msm/back/bind_helpers.hpp" export * }
  module "msm__back__common_types" { header "msm/back/common_types.hpp" export * }
  module "msm__back__copy_policies" { header "msm/back/copy_policies.hpp" export * }
  module "msm__back__default_compile_policy" { header "msm/back/default_compile_policy.hpp" export * }
  module "msm__back__dispatch_table" { header "msm/back/dispatch_table.hpp" export * }
  module "msm__back__favor_compile_time" { header "msm/back/favor_compile_time.hpp" export * }
  module "msm__back__fold_to_list" { header "msm/back/fold_to_list.hpp" export * }
  module "msm__back__history_policies" { header "msm/back/history_policies.hpp" export * }
  module "msm__back__metafunctions" { header "msm/back/metafunctions.hpp" export * }
  module "msm__back__mpl_graph_fsm_check" { header "msm/back/mpl_graph_fsm_check.hpp" export * }
  module "msm__back__no_fsm_check" { header "msm/back/no_fsm_check.hpp" export * }
  module "msm__back__queue_container_circular" { header "msm/back/queue_container_circular.hpp" export * }
  module "msm__back__queue_container_deque" { header "msm/back/queue_container_deque.hpp" export * }
  module "msm__back__state_machine" { header "msm/back/state_machine.hpp" export * }
  module "msm__back__tools" { header "msm/back/tools.hpp" export * }
  module "msm__common" { header "msm/common.hpp" export * }
  module "msm__event_traits" { header "msm/event_traits.hpp" export * }
  module "msm__front__common_states" { header "msm/front/common_states.hpp" export * }
  module "msm__front__completion_event" { header "msm/front/completion_event.hpp" export * }
  module "msm__front__detail__common_states" { header "msm/front/detail/common_states.hpp" export * }
  module "msm__front__detail__row2_helper" { header "msm/front/detail/row2_helper.hpp" export * }
  module "msm__front__euml__algorithm" { header "msm/front/euml/algorithm.hpp" export * }
  module "msm__front__euml__common" { header "msm/front/euml/common.hpp" export * }
  module "msm__front__euml__container" { header "msm/front/euml/container.hpp" export * }
  module "msm__front__euml__euml" { header "msm/front/euml/euml.hpp" export * }
  module "msm__front__euml__euml_typeof" { header "msm/front/euml/euml_typeof.hpp" export * }
  module "msm__front__euml__guard_grammar" { header "msm/front/euml/guard_grammar.hpp" export * }
  module "msm__front__euml__iteration" { header "msm/front/euml/iteration.hpp" export * }
  module "msm__front__euml__operator" { header "msm/front/euml/operator.hpp" export * }
  module "msm__front__euml__phoenix_placeholders" { header "msm/front/euml/phoenix_placeholders.hpp" export * }
  module "msm__front__euml__querying" { header "msm/front/euml/querying.hpp" export * }
  module "msm__front__euml__state_grammar" { header "msm/front/euml/state_grammar.hpp" export * }
  module "msm__front__euml__stl" { header "msm/front/euml/stl.hpp" export * }
  module "msm__front__euml__stt_grammar" { header "msm/front/euml/stt_grammar.hpp" export * }
  module "msm__front__functor_row" { header "msm/front/functor_row.hpp" export * }
  module "msm__front__internal_row" { header "msm/front/internal_row.hpp" export * }
  module "msm__front__row2" { header "msm/front/row2.hpp" export * }
  module "msm__front__state_machine_def" { header "msm/front/state_machine_def.hpp" export * }
  module "msm__front__states" { header "msm/front/states.hpp" export * }
  module "msm__mpl_graph__adjacency_list_graph" { header "msm/mpl_graph/adjacency_list_graph.hpp" export * }
  module "msm__mpl_graph__breadth_first_search" { header "msm/mpl_graph/breadth_first_search.hpp" export * }
  module "msm__mpl_graph__depth_first_search" { header "msm/mpl_graph/depth_first_search.hpp" export * }
  module "msm__mpl_graph__incidence_list_graph" { header "msm/mpl_graph/incidence_list_graph.hpp" export * }
  module "msm__mpl_graph__mpl_graph" { header "msm/mpl_graph/mpl_graph.hpp" export * }
  module "msm__mpl_graph__mpl_utils" { header "msm/mpl_graph/mpl_utils.hpp" export * }
  module "msm__msm_grammar" { header "msm/msm_grammar.hpp" export * }
  module "msm__proto_config" { header "msm/proto_config.hpp" export * }
  module "msm__row_tags" { header "msm/row_tags.hpp" export * }
}
module boost_multi_array {
  export *
  module "multi_array__algorithm" { header "multi_array/algorithm.hpp" export * }
  module "multi_array__base" { header "multi_array/base.hpp" export * }
  module "multi_array__collection_concept" { header "multi_array/collection_concept.hpp" export * }
  module "multi_array__concept_checks" { header "multi_array/concept_checks.hpp" export * }
  module "multi_array__extent_gen" { header "multi_array/extent_gen.hpp" export * }
  module "multi_array__extent_range" { header "multi_array/extent_range.hpp" export * }
  module "multi_array" { header "multi_array.hpp" export * }
  module "multi_array__index_gen" { header "multi_array/index_gen.hpp" export * }
  module "multi_array__index_range" { header "multi_array/index_range.hpp" export * }
  module "multi_array__iterator" { header "multi_array/iterator.hpp" export * }
  module "multi_array__multi_array_ref" { header "multi_array/multi_array_ref.hpp" export * }
  module "multi_array__range_list" { header "multi_array/range_list.hpp" export * }
  module "multi_array__storage_order" { header "multi_array/storage_order.hpp" export * }
  module "multi_array__subarray" { header "multi_array/subarray.hpp" export * }
  module "multi_array__types" { header "multi_array/types.hpp" export * }
  module "multi_array__view" { header "multi_array/view.hpp" export * }
}
module boost_multi_index_wrapper {
  export *
  module boost_multi_index {
    export *
    module "multi_index__composite_key" { header "multi_index/composite_key.hpp" export * }
    module "multi_index__detail__access_specifier" { header "multi_index/detail/access_specifier.hpp" export * }
    module "multi_index__detail__adl_swap" { header "multi_index/detail/adl_swap.hpp" export * }
    module "multi_index__detail__auto_space" { header "multi_index/detail/auto_space.hpp" export * }
    module "multi_index__detail__base_type" { header "multi_index/detail/base_type.hpp" export * }
    module "multi_index__detail__bidir_node_iterator" { header "multi_index/detail/bidir_node_iterator.hpp" export * }
    module "multi_index__detail__bucket_array" { header "multi_index/detail/bucket_array.hpp" export * }
    module "multi_index__detail__cons_stdtuple" { header "multi_index/detail/cons_stdtuple.hpp" export * }
    module "multi_index__detail__converter" { header "multi_index/detail/converter.hpp" export * }
    module "multi_index__detail__copy_map" { header "multi_index/detail/copy_map.hpp" export * }
    module "multi_index__detail__do_not_copy_elements_tag" { header "multi_index/detail/do_not_copy_elements_tag.hpp" export * }
    module "multi_index__detail__duplicates_iterator" { header "multi_index/detail/duplicates_iterator.hpp" export * }
    module "multi_index__detail__hash_index_args" { header "multi_index/detail/hash_index_args.hpp" export * }
    module "multi_index__detail__hash_index_iterator" { header "multi_index/detail/hash_index_iterator.hpp" export * }
    module "multi_index__detail__hash_index_node" { header "multi_index/detail/hash_index_node.hpp" export * }
    module "multi_index__detail__has_tag" { header "multi_index/detail/has_tag.hpp" export * }
    module "multi_index__detail__header_holder" { header "multi_index/detail/header_holder.hpp" export * }
/*
In file included from <module-includes>:5:
In file included from /home/travis/build/Teemperor/boost-compile/inc/boost/multi_index/detail/base_type.hpp:21:
In file included from /home/travis/build/Teemperor/boost-compile/inc/boost/multi_index/detail/index_base.hpp:25:
In file included from /home/travis/build/Teemperor/boost-compile/inc/boost/multi_index/detail/node_type.hpp:23:
/home/travis/build/Teemperor/boost-compile/inc/boost/multi_index/detail/index_node_base.hpp:52:1: fatal error:
      import of module
      'boost_multi_index_wrapper.boost_multi_index.multi_index__detail__ignore_wstrict_aliasing'
      appears within 'index_node_base<Value, Allocator>'
#include <boost/multi_index/detail/ignore_wstrict_aliasing.hpp>
^
*/
    //module "multi_index__detail__ignore_wstrict_aliasing" { header "multi_index/detail/ignore_wstrict_aliasing.hpp" export * }
    //module "multi_index__detail__restore_wstrict_aliasing" { header "multi_index/detail/restore_wstrict_aliasing.hpp" export * }

    module "multi_index__detail__index_base" { header "multi_index/detail/index_base.hpp" export * }
    module "multi_index__detail__index_loader" { header "multi_index/detail/index_loader.hpp" export * }
    module "multi_index__detail__index_matcher" { header "multi_index/detail/index_matcher.hpp" export * }
    module "multi_index__detail__index_node_base" { header "multi_index/detail/index_node_base.hpp" export * }
    module "multi_index__detail__index_saver" { header "multi_index/detail/index_saver.hpp" export * }
    module "multi_index__detail__invariant_assert" { header "multi_index/detail/invariant_assert.hpp" export * }
    module "multi_index__detail__is_index_list" { header "multi_index/detail/is_index_list.hpp" export * }
    module "multi_index__detail__is_transparent" { header "multi_index/detail/is_transparent.hpp" export * }
    module "multi_index__detail__iter_adaptor" { header "multi_index/detail/iter_adaptor.hpp" export * }
    module "multi_index__detail__modify_key_adaptor" { header "multi_index/detail/modify_key_adaptor.hpp" export * }
    module "multi_index__detail__node_type" { header "multi_index/detail/node_type.hpp" export * }
    module "multi_index__detail__no_duplicate_tags" { header "multi_index/detail/no_duplicate_tags.hpp" export * }
    module "multi_index__detail__ord_index_args" { header "multi_index/detail/ord_index_args.hpp" export * }
    module "multi_index__detail__ord_index_impl_fwd" { header "multi_index/detail/ord_index_impl_fwd.hpp" export * }
    module "multi_index__detail__ord_index_impl" { header "multi_index/detail/ord_index_impl.hpp" export * }
    module "multi_index__detail__ord_index_node" { header "multi_index/detail/ord_index_node.hpp" export * }
    module "multi_index__detail__ord_index_ops" { header "multi_index/detail/ord_index_ops.hpp" export * }
    module "multi_index__detail__promotes_arg" { header "multi_index/detail/promotes_arg.hpp" export * }
    module "multi_index__detail__raw_ptr" { header "multi_index/detail/raw_ptr.hpp" export * }
    module "multi_index__detail__rnd_index_loader" { header "multi_index/detail/rnd_index_loader.hpp" export * }
    module "multi_index__detail__rnd_index_node" { header "multi_index/detail/rnd_index_node.hpp" export * }
    module "multi_index__detail__rnd_index_ops" { header "multi_index/detail/rnd_index_ops.hpp" export * }
    module "multi_index__detail__rnd_index_ptr_array" { header "multi_index/detail/rnd_index_ptr_array.hpp" export * }
    module "multi_index__detail__rnd_node_iterator" { header "multi_index/detail/rnd_node_iterator.hpp" export * }
    module "multi_index__detail__rnk_index_ops" { header "multi_index/detail/rnk_index_ops.hpp" export * }
    module "multi_index__detail__safe_mode" { header "multi_index/detail/safe_mode.hpp" export * }
    module "multi_index__detail__scope_guard" { header "multi_index/detail/scope_guard.hpp" export * }
    module "multi_index__detail__seq_index_node" { header "multi_index/detail/seq_index_node.hpp" export * }
    module "multi_index__detail__seq_index_ops" { header "multi_index/detail/seq_index_ops.hpp" export * }
    module "multi_index__detail__serialization_version" { header "multi_index/detail/serialization_version.hpp" export * }
    module "multi_index__detail__uintptr_type" { header "multi_index/detail/uintptr_type.hpp" export * }
    module "multi_index__detail__unbounded" { header "multi_index/detail/unbounded.hpp" export * }
    module "multi_index__detail__value_compare" { header "multi_index/detail/value_compare.hpp" export * }
    module "multi_index__detail__vartempl_support" { header "multi_index/detail/vartempl_support.hpp" export * }
    module "multi_index__global_fun" { header "multi_index/global_fun.hpp" export * }
    module "multi_index__hashed_index_fwd" { header "multi_index/hashed_index_fwd.hpp" export * }
    module "multi_index__hashed_index" { header "multi_index/hashed_index.hpp" export * }
    module "multi_index__identity_fwd" { header "multi_index/identity_fwd.hpp" export * }
    module "multi_index__identity" { header "multi_index/identity.hpp" export * }
    module "multi_index__indexed_by" { header "multi_index/indexed_by.hpp" export * }
    module "multi_index__key_extractors" { header "multi_index/key_extractors.hpp" export * }
    module "multi_index__member" { header "multi_index/member.hpp" export * }
    module "multi_index__mem_fun" { header "multi_index/mem_fun.hpp" export * }
    module "multi_index__ordered_index_fwd" { header "multi_index/ordered_index_fwd.hpp" export * }
    module "multi_index__ordered_index" { header "multi_index/ordered_index.hpp" export * }
    module "multi_index__random_access_index_fwd" { header "multi_index/random_access_index_fwd.hpp" export * }
    module "multi_index__random_access_index" { header "multi_index/random_access_index.hpp" export * }
    module "multi_index__ranked_index_fwd" { header "multi_index/ranked_index_fwd.hpp" export * }
    module "multi_index__ranked_index" { header "multi_index/ranked_index.hpp" export * }
    module "multi_index__safe_mode_errors" { header "multi_index/safe_mode_errors.hpp" export * }
    module "multi_index__sequenced_index_fwd" { header "multi_index/sequenced_index_fwd.hpp" export * }
    module "multi_index__sequenced_index" { header "multi_index/sequenced_index.hpp" export * }
    module "multi_index__tag" { header "multi_index/tag.hpp" export * }
  }
  module boost_multi_index_container_fwd { export * module "multi_index_container_fwd" { header "multi_index_container_fwd.hpp" export * } }
}
module boost_multi_index_container { export * module "multi_index_container" { header "multi_index_container.hpp" export * } }
module boost_multiprecision {
  export *
  module "multiprecision__concepts__mp_number_archetypes" { header "multiprecision/concepts/mp_number_archetypes.hpp" export * }
  module "multiprecision__cpp_bin_float" { header "multiprecision/cpp_bin_float.hpp" export * }
  module "multiprecision__cpp_dec_float" { header "multiprecision/cpp_dec_float.hpp" export * }
  module "multiprecision__cpp_int__cpp_int_config" { header "multiprecision/cpp_int/cpp_int_config.hpp" export * }
  module "multiprecision__cpp_int" { header "multiprecision/cpp_int.hpp" export * }
  module "multiprecision__debug_adaptor" { header "multiprecision/debug_adaptor.hpp" export * }
  module "multiprecision__detail__default_ops" { header "multiprecision/detail/default_ops.hpp" export * }
  module "multiprecision__detail__digits" { header "multiprecision/detail/digits.hpp" export * }
  module "multiprecision__detail__generic_interconvert" { header "multiprecision/detail/generic_interconvert.hpp" export * }
  module "multiprecision__detail__integer_ops" { header "multiprecision/detail/integer_ops.hpp" export * }
  module "multiprecision__detail__min_max" { header "multiprecision/detail/min_max.hpp" export * }
  module "multiprecision__detail__number_base" { header "multiprecision/detail/number_base.hpp" export * }
  module "multiprecision__detail__rebind" { header "multiprecision/detail/rebind.hpp" export * }
  module "multiprecision__detail__utype_helper" { header "multiprecision/detail/utype_helper.hpp" export * }
  module "multiprecision__gmp" { header "multiprecision/gmp.hpp" export * }
  module "multiprecision__integer" { header "multiprecision/integer.hpp" export * }
  module "multiprecision__logged_adaptor" { header "multiprecision/logged_adaptor.hpp" export * }
  module "multiprecision__miller_rabin" { header "multiprecision/miller_rabin.hpp" export * }
  module "multiprecision__number" { header "multiprecision/number.hpp" export * }
  module "multiprecision__random" { header "multiprecision/random.hpp" export * }
  module "multiprecision__rational_adaptor" { header "multiprecision/rational_adaptor.hpp" export * }
  module "multiprecision__traits__extract_exponent_type" { header "multiprecision/traits/extract_exponent_type.hpp" export * }
  module "multiprecision__traits__is_backend" { header "multiprecision/traits/is_backend.hpp" export * }
  module "multiprecision__traits__is_byte_container" { header "multiprecision/traits/is_byte_container.hpp" export * }
}
module boost_next_prior { export * module "next_prior" { header "next_prior.hpp" export * } }
module boost_noncopyable { export * module "noncopyable" { header "noncopyable.hpp" export * } }
module boost_nondet_random { export * module "nondet_random" { header "nondet_random.hpp" export * } }
module boost_none { export * module "none" { header "none.hpp" export * } }
module boost_none_t { export * module "none_t" { header "none_t.hpp" export * } }
module boost_non_type { export * module "non_type" { header "non_type.hpp" export * } }
module boost_operators { export * module "operators" { header "operators.hpp" export * } }
module boost_operators_v1 { export * module "operators_v1" { header "operators_v1.hpp" export * } }
module boost_optional {
  export *
  module "optional__bad_optional_access" { header "optional/bad_optional_access.hpp" export * }
  module "optional__detail__optional_config" { header "optional/detail/optional_config.hpp" export * }
  module "optional" { header "optional.hpp" export * }
  module "optional__optional_fwd" { header "optional/optional_fwd.hpp" export * }
  module "optional__optional" { header "optional/optional.hpp" export * }
  module "optional__optional_io" { header "optional/optional_io.hpp" export * }
}
module boost_parameter {
  export *
  module "parameter__aux___arg_list" { header "parameter/aux_/arg_list.hpp" export * }
  module "parameter__aux___default" { header "parameter/aux_/default.hpp" export * }
  module "parameter__aux___is_maybe" { header "parameter/aux_/is_maybe.hpp" export * }
  module "parameter__aux___maybe" { header "parameter/aux_/maybe.hpp" export * }
  module "parameter__aux___parameter_requirements" { header "parameter/aux_/parameter_requirements.hpp" export * }
  module "parameter__aux___parenthesized_type" { header "parameter/aux_/parenthesized_type.hpp" export * }
  module "parameter__aux___preprocessor__flatten" { header "parameter/aux_/preprocessor/flatten.hpp" export * }
  module "parameter__aux___preprocessor__for_each" { header "parameter/aux_/preprocessor/for_each.hpp" export * }
  module "parameter__aux___result_of0" { header "parameter/aux_/result_of0.hpp" export * }
  module "parameter__aux___set" { header "parameter/aux_/set.hpp" export * }
  //module "parameter__aux___tagged_argument" { header "parameter/aux_/tagged_argument.hpp" export * }
  module "parameter__aux___tag" { header "parameter/aux_/tag.hpp" export * }
  module "parameter__aux___template_keyword" { header "parameter/aux_/template_keyword.hpp" export * }
  module "parameter__aux___unwrap_cv_reference" { header "parameter/aux_/unwrap_cv_reference.hpp" export * }
  module "parameter__aux___void" { header "parameter/aux_/void.hpp" export * }
  module "parameter__aux___yesno" { header "parameter/aux_/yesno.hpp" export * }
  module "parameter__binding" { header "parameter/binding.hpp" export * }
  module "parameter__config" { header "parameter/config.hpp" export * }
  module "parameter" { header "parameter.hpp" export * }
  module "parameter__keyword" { header "parameter/keyword.hpp" export * }
  module "parameter__macros" { header "parameter/macros.hpp" export * }
  module "parameter__match" { header "parameter/match.hpp" export * }
  module "parameter__name" { header "parameter/name.hpp" export * }
  module "parameter__parameters" { header "parameter/parameters.hpp" export * }
  module "parameter__preprocessor" { header "parameter/preprocessor.hpp" export * }
  module "parameter__value_type" { header "parameter/value_type.hpp" export * }
}
module boost_pointer_cast { export * module "pointer_cast" { header "pointer_cast.hpp" export * } }
module boost_pointer_to_other { export * module "pointer_to_other" { header "pointer_to_other.hpp" export * } }
module boost_polygon {
  export *
  module "polygon__detail__polygon_sort_adaptor" { header "polygon/detail/polygon_sort_adaptor.hpp" export * }
  module "polygon__detail__voronoi_ctypes" { header "polygon/detail/voronoi_ctypes.hpp" export * }
  module "polygon__detail__voronoi_predicates" { header "polygon/detail/voronoi_predicates.hpp" export * }
  module "polygon__detail__voronoi_robust_fpt" { header "polygon/detail/voronoi_robust_fpt.hpp" export * }
  module "polygon__detail__voronoi_structures" { header "polygon/detail/voronoi_structures.hpp" export * }
  module "polygon__gtl" { header "polygon/gtl.hpp" export * }
  module "polygon__interval_concept" { header "polygon/interval_concept.hpp" export * }
  module "polygon__interval_data" { header "polygon/interval_data.hpp" export * }
  module "polygon__interval_traits" { header "polygon/interval_traits.hpp" export * }
  module "polygon__isotropy" { header "polygon/isotropy.hpp" export * }
  module "polygon__point_concept" { header "polygon/point_concept.hpp" export * }
  module "polygon__point_data" { header "polygon/point_data.hpp" export * }
  module "polygon__point_traits" { header "polygon/point_traits.hpp" export * }
  module "polygon__polygon" { header "polygon/polygon.hpp" export * }
  module "polygon__rectangle_concept" { header "polygon/rectangle_concept.hpp" export * }
  module "polygon__rectangle_data" { header "polygon/rectangle_data.hpp" export * }
  module "polygon__rectangle_traits" { header "polygon/rectangle_traits.hpp" export * }
  module "polygon__segment_concept" { header "polygon/segment_concept.hpp" export * }
  module "polygon__segment_data" { header "polygon/segment_data.hpp" export * }
  module "polygon__segment_traits" { header "polygon/segment_traits.hpp" export * }
  module "polygon__voronoi_builder" { header "polygon/voronoi_builder.hpp" export * }
  module "polygon__voronoi_diagram" { header "polygon/voronoi_diagram.hpp" export * }
  module "polygon__voronoi_geometry_type" { header "polygon/voronoi_geometry_type.hpp" export * }
  module "polygon__voronoi" { header "polygon/voronoi.hpp" export * }
}
module boost_polymorphic_cast { export * module "polymorphic_cast" { header "polymorphic_cast.hpp" export * } }
module boost_polymorphic_pointer_cast { export * module "polymorphic_pointer_cast" { header "polymorphic_pointer_cast.hpp" export * } }
module boost_pool {
  export *
  module "pool__detail__guard" { header "pool/detail/guard.hpp" export * }
  module "pool__detail__mutex" { header "pool/detail/mutex.hpp" export * }
  module "pool__object_pool" { header "pool/object_pool.hpp" export * }
  module "pool__pool_alloc" { header "pool/pool_alloc.hpp" export * }
  module "pool__poolfwd" { header "pool/poolfwd.hpp" export * }
  module "pool__pool" { header "pool/pool.hpp" export * }
  module "pool__simple_segregated_storage" { header "pool/simple_segregated_storage.hpp" export * }
  module "pool__singleton_pool" { header "pool/singleton_pool.hpp" export * }
}

/*
module boost_preprocessor {
  export *
  module "preprocessor__arithmetic__add" { header "preprocessor/arithmetic/add.hpp" export * }
  module "preprocessor__arithmetic__dec" { header "preprocessor/arithmetic/dec.hpp" export * }
  module "preprocessor__arithmetic__detail__div_base" { header "preprocessor/arithmetic/detail/div_base.hpp" export * }
  module "preprocessor__arithmetic__div" { header "preprocessor/arithmetic/div.hpp" export * }
  module "preprocessor__arithmetic" { header "preprocessor/arithmetic.hpp" export * }
  module "preprocessor__arithmetic__inc" { header "preprocessor/arithmetic/inc.hpp" export * }
  module "preprocessor__arithmetic__mod" { header "preprocessor/arithmetic/mod.hpp" export * }
  module "preprocessor__arithmetic__mul" { header "preprocessor/arithmetic/mul.hpp" export * }
  module "preprocessor__arithmetic__sub" { header "preprocessor/arithmetic/sub.hpp" export * }
  module "preprocessor__array__data" { header "preprocessor/array/data.hpp" export * }
  module "preprocessor__array__detail__get_data" { header "preprocessor/array/detail/get_data.hpp" export * }
  module "preprocessor__array__elem" { header "preprocessor/array/elem.hpp" export * }
  module "preprocessor__array__enum" { header "preprocessor/array/enum.hpp" export * }
  module "preprocessor__array" { header "preprocessor/array.hpp" export * }
  module "preprocessor__array__insert" { header "preprocessor/array/insert.hpp" export * }
  module "preprocessor__array__pop_back" { header "preprocessor/array/pop_back.hpp" export * }
  module "preprocessor__array__pop_front" { header "preprocessor/array/pop_front.hpp" export * }
  module "preprocessor__array__push_back" { header "preprocessor/array/push_back.hpp" export * }
  module "preprocessor__array__push_front" { header "preprocessor/array/push_front.hpp" export * }
  module "preprocessor__array__remove" { header "preprocessor/array/remove.hpp" export * }
  module "preprocessor__array__replace" { header "preprocessor/array/replace.hpp" export * }
  module "preprocessor__array__reverse" { header "preprocessor/array/reverse.hpp" export * }
  module "preprocessor__array__size" { header "preprocessor/array/size.hpp" export * }
  module "preprocessor__array__to_list" { header "preprocessor/array/to_list.hpp" export * }
  module "preprocessor__array__to_seq" { header "preprocessor/array/to_seq.hpp" export * }
  module "preprocessor__array__to_tuple" { header "preprocessor/array/to_tuple.hpp" export * }
  module "preprocessor__assert_msg" { header "preprocessor/assert_msg.hpp" export * }
  module "preprocessor__cat" { header "preprocessor/cat.hpp" export * }
  module "preprocessor__comma" { header "preprocessor/comma.hpp" export * }
  module "preprocessor__comma_if" { header "preprocessor/comma_if.hpp" export * }
  module "preprocessor__comparison__equal" { header "preprocessor/comparison/equal.hpp" export * }
  module "preprocessor__comparison__greater_equal" { header "preprocessor/comparison/greater_equal.hpp" export * }
  module "preprocessor__comparison__greater" { header "preprocessor/comparison/greater.hpp" export * }
  module "preprocessor__comparison" { header "preprocessor/comparison.hpp" export * }
  module "preprocessor__comparison__less_equal" { header "preprocessor/comparison/less_equal.hpp" export * }
  module "preprocessor__comparison__less" { header "preprocessor/comparison/less.hpp" export * }
  module "preprocessor__comparison__not_equal" { header "preprocessor/comparison/not_equal.hpp" export * }
  module "preprocessor__config__config" { header "preprocessor/config/config.hpp" export * }
  module "preprocessor__config__limits" { header "preprocessor/config/limits.hpp" export * }
  module "preprocessor__control__deduce_d" { header "preprocessor/control/deduce_d.hpp" export * }
  module "preprocessor__control__detail__dmc__while" { header "preprocessor/control/detail/dmc/while.hpp" export * }
  module "preprocessor__control__detail__edg__while" { header "preprocessor/control/detail/edg/while.hpp" export * }
  module "preprocessor__control__detail__msvc__while" { header "preprocessor/control/detail/msvc/while.hpp" export * }
  module "preprocessor__control__detail__while" { header "preprocessor/control/detail/while.hpp" export * }
  module "preprocessor__control__expr_if" { header "preprocessor/control/expr_if.hpp" export * }
  module "preprocessor__control__expr_iif" { header "preprocessor/control/expr_iif.hpp" export * }
  module "preprocessor__control" { header "preprocessor/control.hpp" export * }
  module "preprocessor__control__if" { header "preprocessor/control/if.hpp" export * }
  module "preprocessor__control__iif" { header "preprocessor/control/iif.hpp" export * }
  module "preprocessor__control__while" { header "preprocessor/control/while.hpp" export * }
  module "preprocessor__debug__assert" { header "preprocessor/debug/assert.hpp" export * }
  module "preprocessor__debug__error" { header "preprocessor/debug/error.hpp" export * }
  module "preprocessor__debug" { header "preprocessor/debug.hpp" export * }
  module "preprocessor__debug__line" { header "preprocessor/debug/line.hpp" export * }
  module "preprocessor__dec" { header "preprocessor/dec.hpp" export * }
  module "preprocessor__detail__auto_rec" { header "preprocessor/detail/auto_rec.hpp" export * }
  module "preprocessor__detail__check" { header "preprocessor/detail/check.hpp" export * }
  module "preprocessor__detail__dmc__auto_rec" { header "preprocessor/detail/dmc/auto_rec.hpp" export * }
  module "preprocessor__detail__is_binary" { header "preprocessor/detail/is_binary.hpp" export * }
  module "preprocessor__detail__is_nullary" { header "preprocessor/detail/is_nullary.hpp" export * }
  module "preprocessor__detail__is_unary" { header "preprocessor/detail/is_unary.hpp" export * }
  module "preprocessor__detail__null" { header "preprocessor/detail/null.hpp" export * }
  module "preprocessor__detail__split" { header "preprocessor/detail/split.hpp" export * }
  module "preprocessor__empty" { header "preprocessor/empty.hpp" export * }
  module "preprocessor__enum" { header "preprocessor/enum.hpp" export * }
  module "preprocessor__enum_params" { header "preprocessor/enum_params.hpp" export * }
  module "preprocessor__enum_params_with_a_default" { header "preprocessor/enum_params_with_a_default.hpp" export * }
  module "preprocessor__enum_params_with_defaults" { header "preprocessor/enum_params_with_defaults.hpp" export * }
  module "preprocessor__enum_shifted" { header "preprocessor/enum_shifted.hpp" export * }
  module "preprocessor__enum_shifted_params" { header "preprocessor/enum_shifted_params.hpp" export * }
  module "preprocessor__expand" { header "preprocessor/expand.hpp" export * }
  module "preprocessor__expr_if" { header "preprocessor/expr_if.hpp" export * }
  module "preprocessor__facilities__apply" { header "preprocessor/facilities/apply.hpp" export * }
  module "preprocessor__facilities__detail__is_empty" { header "preprocessor/facilities/detail/is_empty.hpp" export * }
  module "preprocessor__facilities__empty" { header "preprocessor/facilities/empty.hpp" export * }
  module "preprocessor__facilities__expand" { header "preprocessor/facilities/expand.hpp" export * }
  module "preprocessor__facilities" { header "preprocessor/facilities.hpp" export * }
  module "preprocessor__facilities__identity" { header "preprocessor/facilities/identity.hpp" export * }
  module "preprocessor__facilities__intercept" { header "preprocessor/facilities/intercept.hpp" export * }
  module "preprocessor__facilities__is_1" { header "preprocessor/facilities/is_1.hpp" export * }
  module "preprocessor__facilities__is_empty" { header "preprocessor/facilities/is_empty.hpp" export * }
  module "preprocessor__facilities__is_empty_or_1" { header "preprocessor/facilities/is_empty_or_1.hpp" export * }
  module "preprocessor__facilities__is_empty_variadic" { header "preprocessor/facilities/is_empty_variadic.hpp" export * }
  module "preprocessor__facilities__overload" { header "preprocessor/facilities/overload.hpp" export * }
  module "preprocessor__for" { header "preprocessor/for.hpp" export * }
  module "preprocessor" { header "preprocessor.hpp" export * }
  module "preprocessor__identity" { header "preprocessor/identity.hpp" export * }
  module "preprocessor__if" { header "preprocessor/if.hpp" export * }
  module "preprocessor__inc" { header "preprocessor/inc.hpp" export * }
  module "preprocessor__iterate" { header "preprocessor/iterate.hpp" export * }
  module "preprocessor__iteration" { header "preprocessor/iteration.hpp" export * }
  module "preprocessor__iteration__iterate" { header "preprocessor/iteration/iterate.hpp" export * }
  module "preprocessor__iteration__local" { header "preprocessor/iteration/local.hpp" export * }
  module "preprocessor__iteration__self" { header "preprocessor/iteration/self.hpp" export * }
  module "preprocessor__library" { header "preprocessor/library.hpp" export * }
  module "preprocessor__limits" { header "preprocessor/limits.hpp" export * }
  module "preprocessor__list__adt" { header "preprocessor/list/adt.hpp" export * }
  module "preprocessor__list__append" { header "preprocessor/list/append.hpp" export * }
  module "preprocessor__list__at" { header "preprocessor/list/at.hpp" export * }
  module "preprocessor__list__cat" { header "preprocessor/list/cat.hpp" export * }
  module "preprocessor__list__detail__dmc__fold_left" { header "preprocessor/list/detail/dmc/fold_left.hpp" export * }
  module "preprocessor__list__detail__edg__fold_left" { header "preprocessor/list/detail/edg/fold_left.hpp" export * }
  module "preprocessor__list__detail__edg__fold_right" { header "preprocessor/list/detail/edg/fold_right.hpp" export * }
  module "preprocessor__list__detail__fold_left" { header "preprocessor/list/detail/fold_left.hpp" export * }
  module "preprocessor__list__detail__fold_right" { header "preprocessor/list/detail/fold_right.hpp" export * }
  module "preprocessor__list__enum" { header "preprocessor/list/enum.hpp" export * }
  module "preprocessor__list__filter" { header "preprocessor/list/filter.hpp" export * }
  module "preprocessor__list__first_n" { header "preprocessor/list/first_n.hpp" export * }
  module "preprocessor__list__fold_left" { header "preprocessor/list/fold_left.hpp" export * }
  module "preprocessor__list__fold_right" { header "preprocessor/list/fold_right.hpp" export * }
  module "preprocessor__list__for_each" { header "preprocessor/list/for_each.hpp" export * }
  module "preprocessor__list__for_each_i" { header "preprocessor/list/for_each_i.hpp" export * }
  module "preprocessor__list__for_each_product" { header "preprocessor/list/for_each_product.hpp" export * }
  module "preprocessor__list" { header "preprocessor/list.hpp" export * }
  module "preprocessor__list__rest_n" { header "preprocessor/list/rest_n.hpp" export * }
  module "preprocessor__list__reverse" { header "preprocessor/list/reverse.hpp" export * }
  module "preprocessor__list__size" { header "preprocessor/list/size.hpp" export * }
  module "preprocessor__list__to_array" { header "preprocessor/list/to_array.hpp" export * }
  module "preprocessor__list__to_seq" { header "preprocessor/list/to_seq.hpp" export * }
  module "preprocessor__list__to_tuple" { header "preprocessor/list/to_tuple.hpp" export * }
  module "preprocessor__list__transform" { header "preprocessor/list/transform.hpp" export * }
  module "preprocessor__logical__and" { header "preprocessor/logical/and.hpp" export * }
  module "preprocessor__logical__bitand" { header "preprocessor/logical/bitand.hpp" export * }
  module "preprocessor__logical__bitnor" { header "preprocessor/logical/bitnor.hpp" export * }
  module "preprocessor__logical__bitor" { header "preprocessor/logical/bitor.hpp" export * }
  module "preprocessor__logical__bitxor" { header "preprocessor/logical/bitxor.hpp" export * }
  module "preprocessor__logical__bool" { header "preprocessor/logical/bool.hpp" export * }
  module "preprocessor__logical__compl" { header "preprocessor/logical/compl.hpp" export * }
  module "preprocessor__logical" { header "preprocessor/logical.hpp" export * }
  module "preprocessor__logical__nor" { header "preprocessor/logical/nor.hpp" export * }
  module "preprocessor__logical__not" { header "preprocessor/logical/not.hpp" export * }
  module "preprocessor__logical__or" { header "preprocessor/logical/or.hpp" export * }
  module "preprocessor__logical__xor" { header "preprocessor/logical/xor.hpp" export * }
  module "preprocessor__max" { header "preprocessor/max.hpp" export * }
  module "preprocessor__min" { header "preprocessor/min.hpp" export * }
  module "preprocessor__punctuation__comma" { header "preprocessor/punctuation/comma.hpp" export * }
  module "preprocessor__punctuation__comma_if" { header "preprocessor/punctuation/comma_if.hpp" export * }
  module "preprocessor__punctuation__detail__is_begin_parens" { header "preprocessor/punctuation/detail/is_begin_parens.hpp" export * }
  module "preprocessor__punctuation" { header "preprocessor/punctuation.hpp" export * }
  module "preprocessor__punctuation__is_begin_parens" { header "preprocessor/punctuation/is_begin_parens.hpp" export * }
  module "preprocessor__punctuation__paren" { header "preprocessor/punctuation/paren.hpp" export * }
  module "preprocessor__punctuation__paren_if" { header "preprocessor/punctuation/paren_if.hpp" export * }
  module "preprocessor__punctuation__remove_parens" { header "preprocessor/punctuation/remove_parens.hpp" export * }
  module "preprocessor__repeat_2nd" { header "preprocessor/repeat_2nd.hpp" export * }
  module "preprocessor__repeat_3rd" { header "preprocessor/repeat_3rd.hpp" export * }
  module "preprocessor__repeat_from_to_2nd" { header "preprocessor/repeat_from_to_2nd.hpp" export * }
  module "preprocessor__repeat_from_to_3rd" { header "preprocessor/repeat_from_to_3rd.hpp" export * }
  module "preprocessor__repeat_from_to" { header "preprocessor/repeat_from_to.hpp" export * }
  module "preprocessor__repeat" { header "preprocessor/repeat.hpp" export * }
  module "preprocessor__repetition__deduce_r" { header "preprocessor/repetition/deduce_r.hpp" export * }
  module "preprocessor__repetition__deduce_z" { header "preprocessor/repetition/deduce_z.hpp" export * }
  module "preprocessor__repetition__detail__dmc__for" { header "preprocessor/repetition/detail/dmc/for.hpp" export * }
  module "preprocessor__repetition__detail__edg__for" { header "preprocessor/repetition/detail/edg/for.hpp" export * }
  module "preprocessor__repetition__detail__for" { header "preprocessor/repetition/detail/for.hpp" export * }
  module "preprocessor__repetition__detail__msvc__for" { header "preprocessor/repetition/detail/msvc/for.hpp" export * }
  module "preprocessor__repetition__enum_binary_params" { header "preprocessor/repetition/enum_binary_params.hpp" export * }
  module "preprocessor__repetition__enum" { header "preprocessor/repetition/enum.hpp" export * }
  module "preprocessor__repetition__enum_params" { header "preprocessor/repetition/enum_params.hpp" export * }
  module "preprocessor__repetition__enum_params_with_a_default" { header "preprocessor/repetition/enum_params_with_a_default.hpp" export * }
  module "preprocessor__repetition__enum_params_with_defaults" { header "preprocessor/repetition/enum_params_with_defaults.hpp" export * }
  module "preprocessor__repetition__enum_shifted_binary_params" { header "preprocessor/repetition/enum_shifted_binary_params.hpp" export * }
  module "preprocessor__repetition__enum_shifted" { header "preprocessor/repetition/enum_shifted.hpp" export * }
  module "preprocessor__repetition__enum_shifted_params" { header "preprocessor/repetition/enum_shifted_params.hpp" export * }
  module "preprocessor__repetition__enum_trailing_binary_params" { header "preprocessor/repetition/enum_trailing_binary_params.hpp" export * }
  module "preprocessor__repetition__enum_trailing" { header "preprocessor/repetition/enum_trailing.hpp" export * }
  module "preprocessor__repetition__enum_trailing_params" { header "preprocessor/repetition/enum_trailing_params.hpp" export * }
  module "preprocessor__repetition__for" { header "preprocessor/repetition/for.hpp" export * }
  module "preprocessor__repetition" { header "preprocessor/repetition.hpp" export * }
  module "preprocessor__repetition__repeat_from_to" { header "preprocessor/repetition/repeat_from_to.hpp" export * }
  module "preprocessor__repetition__repeat" { header "preprocessor/repetition/repeat.hpp" export * }
  module "preprocessor__selection" { header "preprocessor/selection.hpp" export * }
  module "preprocessor__selection__max" { header "preprocessor/selection/max.hpp" export * }
  module "preprocessor__selection__min" { header "preprocessor/selection/min.hpp" export * }
  module "preprocessor__seq__cat" { header "preprocessor/seq/cat.hpp" export * }
  module "preprocessor__seq__detail__binary_transform" { header "preprocessor/seq/detail/binary_transform.hpp" export * }
  module "preprocessor__seq__detail__is_empty" { header "preprocessor/seq/detail/is_empty.hpp" export * }
  module "preprocessor__seq__detail__split" { header "preprocessor/seq/detail/split.hpp" export * }
  module "preprocessor__seq__detail__to_list_msvc" { header "preprocessor/seq/detail/to_list_msvc.hpp" export * }
  module "preprocessor__seq__elem" { header "preprocessor/seq/elem.hpp" export * }
  module "preprocessor__seq__enum" { header "preprocessor/seq/enum.hpp" export * }
  module "preprocessor__seq__filter" { header "preprocessor/seq/filter.hpp" export * }
  module "preprocessor__seq__first_n" { header "preprocessor/seq/first_n.hpp" export * }
  module "preprocessor__seq__fold_left" { header "preprocessor/seq/fold_left.hpp" export * }
  module "preprocessor__seq__fold_right" { header "preprocessor/seq/fold_right.hpp" export * }
  module "preprocessor__seq__for_each" { header "preprocessor/seq/for_each.hpp" export * }
  module "preprocessor__seq__for_each_i" { header "preprocessor/seq/for_each_i.hpp" export * }
  module "preprocessor__seq__for_each_product" { header "preprocessor/seq/for_each_product.hpp" export * }
  module "preprocessor__seq" { header "preprocessor/seq.hpp" export * }
  module "preprocessor__seq__insert" { header "preprocessor/seq/insert.hpp" export * }
  module "preprocessor__seq__pop_back" { header "preprocessor/seq/pop_back.hpp" export * }
  module "preprocessor__seq__pop_front" { header "preprocessor/seq/pop_front.hpp" export * }
  module "preprocessor__seq__push_back" { header "preprocessor/seq/push_back.hpp" export * }
  module "preprocessor__seq__push_front" { header "preprocessor/seq/push_front.hpp" export * }
  module "preprocessor__seq__remove" { header "preprocessor/seq/remove.hpp" export * }
  module "preprocessor__seq__replace" { header "preprocessor/seq/replace.hpp" export * }
  module "preprocessor__seq__rest_n" { header "preprocessor/seq/rest_n.hpp" export * }
  module "preprocessor__seq__reverse" { header "preprocessor/seq/reverse.hpp" export * }
  module "preprocessor__seq__seq" { header "preprocessor/seq/seq.hpp" export * }
  module "preprocessor__seq__size" { header "preprocessor/seq/size.hpp" export * }
  module "preprocessor__seq__subseq" { header "preprocessor/seq/subseq.hpp" export * }
  module "preprocessor__seq__to_array" { header "preprocessor/seq/to_array.hpp" export * }
  module "preprocessor__seq__to_list" { header "preprocessor/seq/to_list.hpp" export * }
  module "preprocessor__seq__to_tuple" { header "preprocessor/seq/to_tuple.hpp" export * }
  module "preprocessor__seq__transform" { header "preprocessor/seq/transform.hpp" export * }
  module "preprocessor__seq__variadic_seq_to_seq" { header "preprocessor/seq/variadic_seq_to_seq.hpp" export * }
  module "preprocessor__slot__counter" { header "preprocessor/slot/counter.hpp" export * }
  module "preprocessor__slot__detail__def" { header "preprocessor/slot/detail/def.hpp" export * }
  module "preprocessor__slot" { header "preprocessor/slot.hpp" export * }
  module "preprocessor__slot__slot" { header "preprocessor/slot/slot.hpp" export * }
  module "preprocessor__stringize" { header "preprocessor/stringize.hpp" export * }
  module "preprocessor__tuple__detail__is_single_return" { header "preprocessor/tuple/detail/is_single_return.hpp" export * }
  module "preprocessor__tuple__eat" { header "preprocessor/tuple/eat.hpp" export * }
  module "preprocessor__tuple__elem" { header "preprocessor/tuple/elem.hpp" export * }
  module "preprocessor__tuple__enum" { header "preprocessor/tuple/enum.hpp" export * }
  module "preprocessor__tuple" { header "preprocessor/tuple.hpp" export * }
  module "preprocessor__tuple__insert" { header "preprocessor/tuple/insert.hpp" export * }
  module "preprocessor__tuple__pop_back" { header "preprocessor/tuple/pop_back.hpp" export * }
  module "preprocessor__tuple__pop_front" { header "preprocessor/tuple/pop_front.hpp" export * }
  module "preprocessor__tuple__push_back" { header "preprocessor/tuple/push_back.hpp" export * }
  module "preprocessor__tuple__push_front" { header "preprocessor/tuple/push_front.hpp" export * }
  module "preprocessor__tuple__rem" { header "preprocessor/tuple/rem.hpp" export * }
  module "preprocessor__tuple__remove" { header "preprocessor/tuple/remove.hpp" export * }
  module "preprocessor__tuple__replace" { header "preprocessor/tuple/replace.hpp" export * }
  module "preprocessor__tuple__reverse" { header "preprocessor/tuple/reverse.hpp" export * }
  module "preprocessor__tuple__size" { header "preprocessor/tuple/size.hpp" export * }
  module "preprocessor__tuple__to_array" { header "preprocessor/tuple/to_array.hpp" export * }
  module "preprocessor__tuple__to_list" { header "preprocessor/tuple/to_list.hpp" export * }
  module "preprocessor__tuple__to_seq" { header "preprocessor/tuple/to_seq.hpp" export * }
  module "preprocessor__variadic__detail__is_single_return" { header "preprocessor/variadic/detail/is_single_return.hpp" export * }
  module "preprocessor__variadic__elem" { header "preprocessor/variadic/elem.hpp" export * }
  module "preprocessor__variadic" { header "preprocessor/variadic.hpp" export * }
  module "preprocessor__variadic__size" { header "preprocessor/variadic/size.hpp" export * }
  module "preprocessor__variadic__to_array" { header "preprocessor/variadic/to_array.hpp" export * }
  module "preprocessor__variadic__to_list" { header "preprocessor/variadic/to_list.hpp" export * }
  module "preprocessor__variadic__to_seq" { header "preprocessor/variadic/to_seq.hpp" export * }
  module "preprocessor__variadic__to_tuple" { header "preprocessor/variadic/to_tuple.hpp" export * }
  module "preprocessor__while" { header "preprocessor/while.hpp" export * }
  module "preprocessor__wstringize" { header "preprocessor/wstringize.hpp" export * }
} */
module boost_process {
  export *
  module "process.hpp" { header "process.hpp" export * }
  module "process_args.hpp" { header "process/args.hpp" export * }
  module "process_async.hpp" { header "process/async.hpp" export * }
  module "process_async_pipe.hpp" { header "process/async_pipe.hpp" export * }
  module "process_async_system.hpp" { header "process/async_system.hpp" export * }
  module "process_child.hpp" { header "process/child.hpp" export * }
  module "process_cmd.hpp" { header "process/cmd.hpp" export * }
  module "process_environment.hpp" { header "process/environment.hpp" export * }
  module "process_error.hpp" { header "process/error.hpp" export * }
  module "process_exception.hpp" { header "process/exception.hpp" export * }
  module "process_exe.hpp" { header "process/exe.hpp" export * }
  module "process_extend.hpp" { header "process/extend.hpp" export * }
  module "process_group.hpp" { header "process/group.hpp" export * }
  module "process_io.hpp" { header "process/io.hpp" export * }
  module "process_pipe.hpp" { header "process/pipe.hpp" export * }
  module "process_search_path.hpp" { header "process/search_path.hpp" export * }
  module "process_shell.hpp" { header "process/shell.hpp" export * }
  module "process_spawn.hpp" { header "process/spawn.hpp" export * }
  module "process_system.hpp" { header "process/system.hpp" export * }
}
module boost_program_options {
  export *
  module "program_options__cmdline" { header "program_options/cmdline.hpp" export * }
  module "program_options__config" { header "program_options/config.hpp" export * }
  module "program_options__detail__cmdline" { header "program_options/detail/cmdline.hpp" export * }
  module "program_options__detail__config_file" { header "program_options/detail/config_file.hpp" export * }
  module "program_options__detail__convert" { header "program_options/detail/convert.hpp" export * }
  module "program_options__detail__utf8_codecvt_facet" { header "program_options/detail/utf8_codecvt_facet.hpp" export * }
  module "program_options__environment_iterator" { header "program_options/environment_iterator.hpp" export * }
  module "program_options__eof_iterator" { header "program_options/eof_iterator.hpp" export * }
  module "program_options__errors" { header "program_options/errors.hpp" export * }
  module "program_options" { header "program_options.hpp" export * }
  module "program_options__option" { header "program_options/option.hpp" export * }
  module "program_options__options_description" { header "program_options/options_description.hpp" export * }
  module "program_options__parsers" { header "program_options/parsers.hpp" export * }
  module "program_options__positional_options" { header "program_options/positional_options.hpp" export * }
  module "program_options__value_semantic" { header "program_options/value_semantic.hpp" export * }
  module "program_options__variables_map" { header "program_options/variables_map.hpp" export * }
  module "program_options__version" { header "program_options/version.hpp" export * }
}
module boost_progress {
  export *
  module "progress" { header "progress.hpp" export * }
}
module boost_property_map {
  export *
  module "property_map__compose_property_map" { header "property_map/compose_property_map.hpp" export * }
  module "property_map__dynamic_property_map" { header "property_map/dynamic_property_map.hpp" export * }
  module "property_map__function_property_map" { header "property_map/function_property_map.hpp" export * }
  module "property_map__parallel__caching_property_map" { header "property_map/parallel/caching_property_map.hpp" export * }
  module "property_map__parallel__global_index_map" { header "property_map/parallel/global_index_map.hpp" export * }
  module "property_map__parallel__local_property_map" { header "property_map/parallel/local_property_map.hpp" export * }
  module "property_map__parallel__process_group" { header "property_map/parallel/process_group.hpp" export * }
  module "property_map__parallel__simple_trigger" { header "property_map/parallel/simple_trigger.hpp" export * }
  module "property_map__property_map" { header "property_map/property_map.hpp" export * }
  module "property_map__property_map_iterator" { header "property_map/property_map_iterator.hpp" export * }
  module "property_map__shared_array_property_map" { header "property_map/shared_array_property_map.hpp" export * }
  module "property_map__transform_value_property_map" { header "property_map/transform_value_property_map.hpp" export * }
  module "property_map__vector_property_map" { header "property_map/vector_property_map.hpp" export * }
}
module boost_property_tree {
  export *
  module "property_tree__detail__file_parser_error" { header "property_tree/detail/file_parser_error.hpp" export * }
  module "property_tree__detail__info_parser_error" { header "property_tree/detail/info_parser_error.hpp" export * }
  module "property_tree__detail__info_parser_read" { header "property_tree/detail/info_parser_read.hpp" export * }
  module "property_tree__detail__info_parser_utils" { header "property_tree/detail/info_parser_utils.hpp" export * }
  module "property_tree__detail__info_parser_writer_settings" { header "property_tree/detail/info_parser_writer_settings.hpp" export * }
  module "property_tree__detail__ptree_utils" { header "property_tree/detail/ptree_utils.hpp" export * }
  module "property_tree__detail__rapidxml" { header "property_tree/detail/rapidxml.hpp" export * }
  module "property_tree__detail__xml_parser_error" { header "property_tree/detail/xml_parser_error.hpp" export * }
  module "property_tree__detail__xml_parser_flags" { header "property_tree/detail/xml_parser_flags.hpp" export * }
  module "property_tree__detail__xml_parser_read_rapidxml" { header "property_tree/detail/xml_parser_read_rapidxml.hpp" export * }
  module "property_tree__detail__xml_parser_utils" { header "property_tree/detail/xml_parser_utils.hpp" export * }
  module "property_tree__detail__xml_parser_write" { header "property_tree/detail/xml_parser_write.hpp" export * }
  module "property_tree__detail__xml_parser_writer_settings" { header "property_tree/detail/xml_parser_writer_settings.hpp" export * }
  module "property_tree__exceptions" { header "property_tree/exceptions.hpp" export * }
  module "property_tree__id_translator" { header "property_tree/id_translator.hpp" export * }
  module "property_tree__info_parser" { header "property_tree/info_parser.hpp" export * }
  module "property_tree__ini_parser" { header "property_tree/ini_parser.hpp" export * }
  module "property_tree__json_parser__detail__narrow_encoding" { header "property_tree/json_parser/detail/narrow_encoding.hpp" export * }
  module "property_tree__json_parser__detail__parser" { header "property_tree/json_parser/detail/parser.hpp" export * }
  module "property_tree__json_parser__detail__read" { header "property_tree/json_parser/detail/read.hpp" export * }
  module "property_tree__json_parser__detail__standard_callbacks" { header "property_tree/json_parser/detail/standard_callbacks.hpp" export * }
  module "property_tree__json_parser__detail__wide_encoding" { header "property_tree/json_parser/detail/wide_encoding.hpp" export * }
  module "property_tree__json_parser__error" { header "property_tree/json_parser/error.hpp" export * }
  module "property_tree__json_parser" { header "property_tree/json_parser.hpp" export * }
  module "property_tree__ptree_fwd" { header "property_tree/ptree_fwd.hpp" export * }
  module "property_tree__ptree" { header "property_tree/ptree.hpp" export * }
  module "property_tree__stream_translator" { header "property_tree/stream_translator.hpp" export * }
  module "property_tree__string_path" { header "property_tree/string_path.hpp" export * }
  module "property_tree__xml_parser" { header "property_tree/xml_parser.hpp" export * }
}
module boost_ptr_container {
  export *
  module "ptr_container__clone_allocator" { header "ptr_container/clone_allocator.hpp" export * }
  module "ptr_container__detail__associative_ptr_container" { header "ptr_container/detail/associative_ptr_container.hpp" export * }
  module "ptr_container__detail__default_deleter" { header "ptr_container/detail/default_deleter.hpp" export * }
  module "ptr_container__detail__is_convertible" { header "ptr_container/detail/is_convertible.hpp" export * }
  module "ptr_container__detail__map_iterator" { header "ptr_container/detail/map_iterator.hpp" export * }
  module "ptr_container__detail__meta_functions" { header "ptr_container/detail/meta_functions.hpp" export * }
  module "ptr_container__detail__reversible_ptr_container" { header "ptr_container/detail/reversible_ptr_container.hpp" export * }
  module "ptr_container__detail__scoped_deleter" { header "ptr_container/detail/scoped_deleter.hpp" export * }
  module "ptr_container__detail__serialize_ptr_map_adapter" { header "ptr_container/detail/serialize_ptr_map_adapter.hpp" export * }
  module "ptr_container__detail__serialize_reversible_cont" { header "ptr_container/detail/serialize_reversible_cont.hpp" export * }
  module "ptr_container__detail__serialize_xml_names" { header "ptr_container/detail/serialize_xml_names.hpp" export * }
  module "ptr_container__detail__static_move_ptr" { header "ptr_container/detail/static_move_ptr.hpp" export * }
  module "ptr_container__detail__throw_exception" { header "ptr_container/detail/throw_exception.hpp" export * }
  //module "ptr_container__detail__void_ptr_iterator" { header "ptr_container/detail/void_ptr_iterator.hpp" export * }
  module "ptr_container__exception" { header "ptr_container/exception.hpp" export * }
  module "ptr_container__indirect_fun" { header "ptr_container/indirect_fun.hpp" export * }
  module "ptr_container__nullable" { header "ptr_container/nullable.hpp" export * }
  module "ptr_container__ptr_array" { header "ptr_container/ptr_array.hpp" export * }
  module "ptr_container__ptr_circular_buffer" { header "ptr_container/ptr_circular_buffer.hpp" export * }
  module "ptr_container__ptr_container" { header "ptr_container/ptr_container.hpp" export * }
  module "ptr_container__ptr_deque" { header "ptr_container/ptr_deque.hpp" export * }
  module "ptr_container__ptr_inserter" { header "ptr_container/ptr_inserter.hpp" export * }
  module "ptr_container__ptr_list" { header "ptr_container/ptr_list.hpp" export * }
  module "ptr_container__ptr_map_adapter" { header "ptr_container/ptr_map_adapter.hpp" export * }
  module "ptr_container__ptr_map" { header "ptr_container/ptr_map.hpp" export * }
  module "ptr_container__ptr_sequence_adapter" { header "ptr_container/ptr_sequence_adapter.hpp" export * }
  module "ptr_container__ptr_set_adapter" { header "ptr_container/ptr_set_adapter.hpp" export * }
  module "ptr_container__ptr_set" { header "ptr_container/ptr_set.hpp" export * }
  module "ptr_container__ptr_unordered_map" { header "ptr_container/ptr_unordered_map.hpp" export * }
  module "ptr_container__ptr_unordered_set" { header "ptr_container/ptr_unordered_set.hpp" export * }
  module "ptr_container__ptr_vector" { header "ptr_container/ptr_vector.hpp" export * }
  module "ptr_container__serialize_ptr_array" { header "ptr_container/serialize_ptr_array.hpp" export * }
  module "ptr_container__serialize_ptr_circular_buffer" { header "ptr_container/serialize_ptr_circular_buffer.hpp" export * }
  module "ptr_container__serialize_ptr_container" { header "ptr_container/serialize_ptr_container.hpp" export * }
  module "ptr_container__serialize_ptr_deque" { header "ptr_container/serialize_ptr_deque.hpp" export * }
  module "ptr_container__serialize_ptr_list" { header "ptr_container/serialize_ptr_list.hpp" export * }
  module "ptr_container__serialize_ptr_map" { header "ptr_container/serialize_ptr_map.hpp" export * }
  module "ptr_container__serialize_ptr_set" { header "ptr_container/serialize_ptr_set.hpp" export * }
  module "ptr_container__serialize_ptr_unordered_map" { header "ptr_container/serialize_ptr_unordered_map.hpp" export * }
  module "ptr_container__serialize_ptr_unordered_set" { header "ptr_container/serialize_ptr_unordered_set.hpp" export * }
  module "ptr_container__serialize_ptr_vector" { header "ptr_container/serialize_ptr_vector.hpp" export * }
}
module boost_python {
  export *
  module python_python { export * header "python.hpp" }
}
module boost_qvm {
  export *
  module "qvm__all" { header "qvm/all.hpp" export * }
  module "qvm__assert" { header "qvm/assert.hpp" export * }
  module "qvm__deduce_mat" { header "qvm/deduce_mat.hpp" export * }
  module "qvm__deduce_quat" { header "qvm/deduce_quat.hpp" export * }
  module "qvm__deduce_scalar" { header "qvm/deduce_scalar.hpp" export * }
  module "qvm__deduce_vec" { header "qvm/deduce_vec.hpp" export * }
  module "qvm__detail__cofactor_impl" { header "qvm/detail/cofactor_impl.hpp" export * }
  module "qvm__detail__determinant_impl" { header "qvm/detail/determinant_impl.hpp" export * }
  module "qvm__detail__remove_const" { header "qvm/detail/remove_const.hpp" export * }
  module "qvm__detail__swizzle_traits" { header "qvm/detail/swizzle_traits.hpp" export * }
  module "qvm__detail__transp_impl" { header "qvm/detail/transp_impl.hpp" export * }
  module "qvm__enable_if" { header "qvm/enable_if.hpp" export * }
  module "qvm__error" { header "qvm/error.hpp" export * }
  module "qvm__gen__mat_operations2" { header "qvm/gen/mat_operations2.hpp" export * }
  module "qvm__gen__mat_operations3" { header "qvm/gen/mat_operations3.hpp" export * }
  module "qvm__gen__mat_operations4" { header "qvm/gen/mat_operations4.hpp" export * }
  module "qvm__gen__swizzle2" { header "qvm/gen/swizzle2.hpp" export * }
  module "qvm__gen__swizzle3" { header "qvm/gen/swizzle3.hpp" export * }
  module "qvm__gen__swizzle4" { header "qvm/gen/swizzle4.hpp" export * }
  module "qvm__gen__vec_mat_operations2" { header "qvm/gen/vec_mat_operations2.hpp" export * }
  module "qvm__gen__vec_mat_operations3" { header "qvm/gen/vec_mat_operations3.hpp" export * }
  module "qvm__gen__vec_mat_operations4" { header "qvm/gen/vec_mat_operations4.hpp" export * }
  module "qvm__gen__vec_operations2" { header "qvm/gen/vec_operations2.hpp" export * }
  module "qvm__gen__vec_operations3" { header "qvm/gen/vec_operations3.hpp" export * }
  module "qvm__gen__vec_operations4" { header "qvm/gen/vec_operations4.hpp" export * }
  module "qvm__inline" { header "qvm/inline.hpp" export * }
  module "qvm__map" { header "qvm/map.hpp" export * }
  module "qvm__map_mat_mat" { header "qvm/map_mat_mat.hpp" export * }
  module "qvm__map_mat_vec" { header "qvm/map_mat_vec.hpp" export * }
  module "qvm__map_vec_mat" { header "qvm/map_vec_mat.hpp" export * }
  module "qvm__mat_access" { header "qvm/mat_access.hpp" export * }
  module "qvm__math" { header "qvm/math.hpp" export * }
  module "qvm__mat" { header "qvm/mat.hpp" export * }
  module "qvm__mat_operations2" { header "qvm/mat_operations2.hpp" export * }
  module "qvm__mat_operations3" { header "qvm/mat_operations3.hpp" export * }
  module "qvm__mat_operations4" { header "qvm/mat_operations4.hpp" export * }
  module "qvm__mat_operations" { header "qvm/mat_operations.hpp" export * }
  module "qvm__mat_traits_array" { header "qvm/mat_traits_array.hpp" export * }
  module "qvm__mat_traits_defaults" { header "qvm/mat_traits_defaults.hpp" export * }
  module "qvm__mat_traits" { header "qvm/mat_traits.hpp" export * }
  module "qvm__operations" { header "qvm/operations.hpp" export * }
  module "qvm__quat_access" { header "qvm/quat_access.hpp" export * }
  module "qvm__quat" { header "qvm/quat.hpp" export * }
  module "qvm__quat_operations" { header "qvm/quat_operations.hpp" export * }
  module "qvm__quat_traits_array" { header "qvm/quat_traits_array.hpp" export * }
  module "qvm__quat_traits_defaults" { header "qvm/quat_traits_defaults.hpp" export * }
  module "qvm__quat_traits" { header "qvm/quat_traits.hpp" export * }
  module "qvm__quat_vec_operations" { header "qvm/quat_vec_operations.hpp" export * }
  module "qvm__scalar_traits" { header "qvm/scalar_traits.hpp" export * }
  module "qvm__static_assert" { header "qvm/static_assert.hpp" export * }
  module "qvm__swizzle2" { header "qvm/swizzle2.hpp" export * }
  module "qvm__swizzle3" { header "qvm/swizzle3.hpp" export * }
  module "qvm__swizzle4" { header "qvm/swizzle4.hpp" export * }
  module "qvm__swizzle" { header "qvm/swizzle.hpp" export * }
  module "qvm__throw_exception" { header "qvm/throw_exception.hpp" export * }
  module "qvm__to_string" { header "qvm/to_string.hpp" export * }
  module "qvm__vec_access" { header "qvm/vec_access.hpp" export * }
  module "qvm__vec" { header "qvm/vec.hpp" export * }
  module "qvm__vec_mat_operations2" { header "qvm/vec_mat_operations2.hpp" export * }
  module "qvm__vec_mat_operations3" { header "qvm/vec_mat_operations3.hpp" export * }
  module "qvm__vec_mat_operations4" { header "qvm/vec_mat_operations4.hpp" export * }
  module "qvm__vec_mat_operations" { header "qvm/vec_mat_operations.hpp" export * }
  module "qvm__vec_operations2" { header "qvm/vec_operations2.hpp" export * }
  module "qvm__vec_operations3" { header "qvm/vec_operations3.hpp" export * }
  module "qvm__vec_operations4" { header "qvm/vec_operations4.hpp" export * }
  module "qvm__vec_operations" { header "qvm/vec_operations.hpp" export * }
  module "qvm__vec_traits_array" { header "qvm/vec_traits_array.hpp" export * }
  module "qvm__vec_traits_defaults" { header "qvm/vec_traits_defaults.hpp" export * }
  module "qvm__vec_traits" { header "qvm/vec_traits.hpp" export * }
}

module boost_date_time {
  export *
  // Cannot compile. Remove once we have this in: boostorg#date_time@d335a54 ships in 1.74
  exclude header "date_time/tz_db_base.hpp"
  exclude header "date_time/gregorian/gregorian_io.hpp"
  // Likely fixed by the the same commit:
  exclude header "date_time/posix_time/time_formatters.hpp"
  exclude header "date_time/posix_time/time_formatters_limited.hpp"
  //error: too many template arguments for class template 'date_formatter'
  //  std::basic_string<charT> s(date_time::date_formatter<date,date_time::iso_format<charT>,charT>::date_to_string(d.begin()));
  exclude header "date_time/posix_time/posix_time_types.hpp"
  exclude header "date_time/dst_rules.hpp"
  exclude header "date_time/gregorian/formatters.hpp"
  exclude header "date_time/gregorian/gregorian.hpp"
  exclude header "date_time/gregorian/formatters_limited.hpp"
  exclude header "date_time/date_formatting.hpp"
  exclude header "date_time/date_formatting_limited.hpp"
  // Disentangle from boost_serialization. Fixed by boostorg/date_time@356c5c2
  exclude header "date_time/gregorian/greg_serialize.hpp"
  exclude header "date_time/posix_time/time_serialize.hpp"
  umbrella "date_time"
  module * { export * }
}

// boost_archive and boost_serialization are intertwined.
module boost_archive_and_serialization {
  export *
  module boost_archive {
    export *
    exclude header "archive/detail/abi_prefix.hpp"
    exclude header "archive/detail/abi_suffix.hpp"
    // Depends on spirit and brings a lot of other dependencies
    exclude header "archive/impl/basic_xml_grammar.hpp"
    // FIXME: This is due to an error:
    // c++/8.4.0/bits/stl_iterator.h:497:7: error: 'std::back_insert_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::operator=' from module 'std.algorithm' is not present in definition of 'std::back_insert_iterator<basic_string<char> >' in module 'boost_archive_and_serialization.boost_archive.dinkumware'
    exclude header "archive/dinkumware.hpp"
    umbrella "archive"
    module * { export * }
  }

  module boost_serialization {
    export *
    exclude header "config/abi_prefix.hpp"
    // undefined BOOST_SERIALIZATION_ASSUME_ABSTRACT
    exclude header "serialization/detail/shared_count_132.hpp"
    exclude header "serialization/detail/shared_ptr_132.hpp"
    // misssing noexcept specifier 
    exclude header "serialization/detail/shared_ptr_nmt_132.hpp"
    umbrella "serialization"
    module * { export * }
  }
}


// boost_math and boost_lexical_cast are interwtined due to inf_nan
module boost_math_and_lexical_cast {
   export *
  // lexical_cast/detail/inf_nan.hpp uses boost_math
  module boost_lexical_cast {
    export *
    module "lexical_cast" { header "lexical_cast.hpp" export * }
    umbrella "lexical_cast"
    module * { export * }
  }

  module boost_math {
    export *

    module math_interpolators {
      export *
      // Depends on fftw3
      exclude header "math/interpolators/detail/cardinal_trigonometric_detail.hpp"
      umbrella "math/interpolators" module * { export * }
     }
    // Intentionally disabled due to pulling content from math/tools.
    //module math_bindings { export * umbrella "math/bindings" module * { export * } }
    module math_complex { export * umbrella "math/complex" module * { export * } }
    module math_concepts {
      export *
      // Missing includes
      exclude header "math/concepts/distributions.hpp"
      umbrella "math/concepts"
      module * { export * }
    }
    module math_constants { export * umbrella "math/constants" module * { export * } }
    // Intentionally ignored due to a cycle with boost_cstdfloat.
    //module math_cstdfloat { export * umbrella "math/cstdfloat" module * { export * } }
    //module math_differentiation { export * umbrella "math/differentiation" module * { export * } }
    /*module math_distributions {
      export *
      // Missing includes
      exclude header "math/distributions/detail/inv_discrete_quantile.hpp"
      umbrella "math/distributions"
       module * { export * }
    }*/
    module math_policies { export * umbrella "math/policies" module * { export * } }
    //module math_quadrature { export * umbrella "math/quadrature" module * { export * } }
    // FIXME: Revisit next upgrade. 1.72 has math/special_functions broken.
    //module special_functions_special_functions { header "math/special_functions.hpp" export * }
    /*module math_special_functions {
      export *
      // Missing includes
      exclude header "math/special_functions/detail/bessel_ik.hpp"
      exclude header "math/special_functions/detail/hypergeometric_1F1_large_abz.hpp"
      exclude header "math/special_functions/detail/bessel_k0.hpp"
      exclude header "math/special_functions/detail/hypergeometric_1F1_cf.hpp"
      exclude header "math/special_functions/detail/hypergeometric_1F1_scaled_series.hpp"
      exclude header "math/special_functions/detail/bernoulli_details.hpp"
      exclude header "math/special_functions/detail/polygamma.hpp"
      exclude header "math/special_functions/detail/ibeta_inv_ab.hpp"
      exclude header "math/special_functions/detail/hypergeometric_pade.hpp"
      exclude header "math/special_functions/detail/bessel_jy_series.hpp"
      exclude header "math/special_functions/detail/igamma_inverse.hpp"
      exclude header "math/special_functions/detail/lgamma_small.hpp"
      exclude header "math/special_functions/detail/hypergeometric_separated_series.hpp"
      exclude header "math/special_functions/detail/bessel_jy_asym.hpp"
      exclude header "math/special_functions/detail/bessel_k1.hpp"
      exclude header "math/special_functions/detail/bessel_kn.hpp"
      exclude header "math/special_functions/detail/bessel_jy_derivatives_series.hpp"
      exclude header "math/special_functions/detail/round_fwd.hpp"
      exclude header "math/special_functions/detail/hypergeometric_1F1_addition_theorems_on_z.hpp"
      exclude header "math/special_functions/detail/hypergeometric_1F1_negative_b_regions.hpp"
      exclude header "math/special_functions/detail/fp_traits.hpp"
      exclude header "math/special_functions/detail/bessel_y0.hpp"
      exclude header "math/special_functions/detail/bessel_i0.hpp"
      exclude header "math/special_functions/detail/bessel_derivatives_linear.hpp"
      exclude header "math/special_functions/detail/gamma_inva.hpp"
      exclude header "math/special_functions/detail/hypergeometric_rational.hpp"
      exclude header "math/special_functions/detail/ibeta_inverse.hpp"
      exclude header "math/special_functions/detail/lambert_w_lookup_table.ipp"
      exclude header "math/special_functions/detail/t_distribution_inv.hpp"
      exclude header "math/special_functions/detail/bessel_j1.hpp"
      exclude header "math/special_functions/detail/hypergeometric_1F1_large_a.hpp"
      exclude header "math/special_functions/detail/hypergeometric_series.hpp"
      exclude header "math/special_functions/detail/bessel_jy_derivatives_asym.hpp"
      exclude header "math/special_functions/detail/bessel_y1.hpp"
      exclude header "math/special_functions/detail/unchecked_bernoulli.hpp"
      exclude header "math/special_functions/detail/bessel_jn.hpp"
      exclude header "math/special_functions/detail/airy_ai_bi_zero.hpp"
      exclude header "math/special_functions/detail/bessel_yn.hpp"
      exclude header "math/special_functions/detail/erf_inv.hpp"
      exclude header "math/special_functions/detail/bessel_i1.hpp"
      exclude header "math/special_functions/detail/lanczos_sse2.hpp"
      exclude header "math/special_functions/detail/unchecked_factorial.hpp"
      exclude header "math/special_functions/detail/hypergeometric_asym.hpp"
      exclude header "math/special_functions/detail/bessel_j0.hpp"
      exclude header "math/special_functions/detail/iconv.hpp"
      exclude header "math/special_functions/detail/hypergeometric_1F1_bessel.hpp"
      exclude header "math/special_functions/detail/hypergeometric_cf.hpp"
      exclude header "math/special_functions/detail/bessel_jy.hpp"
      exclude header "math/special_functions/detail/hypergeometric_1F1_by_ratios.hpp"
      exclude header "math/special_functions/detail/bessel_jy_zero.hpp"
      exclude header "math/special_functions/detail/hypergeometric_0F1_bessel.hpp"
      exclude header "math/special_functions/detail/hypergeometric_1F1_small_a_negative_b_by_ratio.hpp"
      exclude header "math/special_functions/detail/igamma_large.hpp"
      exclude header "math/special_functions/detail/hypergeometric_1F1_recurrence.hpp"
      exclude header "math/special_functions/detail/hypergeometric_pFq_checked_series.hpp"
      module zeta_gama {
        // gamma.hpp includes zeta.hpp which includes gamma.hpp
        export *
        header "math/special_functions/gamma.hpp"
        header "math/special_functions/next.hpp"
        header "math/special_functions/zeta.hpp"
        header "math/special_functions/factorials.hpp"
        header "math/special_functions/erf.hpp"
        header "math/special_functions/legendre_stieltjes.hpp"
        header "math/special_functions/hypergeometric_1F0.hpp"
      }
      umbrella "math/special_functions"
      module * { export * }
    }*/
    //module special_functions_special_functions { header "math/special_functions.hpp" export * }
    // We cannot build boost/math/statistics/runs_test.hpp:15:
    // In file included from  boost/math/distributions/normal.hpp:19:
    // In file included from  boost/math/special_functions/erf.hpp:15:
    // In file included from  boost/math/special_functions/gamma.hpp:2210:
    // In file included from  boost/math/special_functions/detail/igamma_inverse.hpp:16:
    // In file included from  boost/math/tools/roots.hpp:34:
    // boost/math/special_functions/next.hpp:340:13: error: no matching function for call to 'ldexp'
    //module math_statistics { export * umbrella "math/statistics" module * { export * } }
    // Ignored due to many missing includes
    //module math_tools { export * umbrella "math/tools" module * { export * } }
/*
    // Avoid cycle with boost_cstdfloat.
    exclude header "math/cstdfloat/cstdfloat_cmath.hpp"
    exclude header "math/cstdfloat/cstdfloat_complex_std.hpp"
    exclude header "math/cstdfloat/cstdfloat_limits.hpp"
    exclude header "math/cstdfloat/cstdfloat_complex.hpp"
    exclude header "math/cstdfloat/cstdfloat_iostream.hpp"
    exclude header "math/cstdfloat/cstdfloat_types.hpp"
    exclude header "math/tools/test_value.hpp"
    // Triggers a lot of underlying headers with missing includes
    exclude header "math/complex.hpp"
    // Missing includes.
    exclude header "math/tools/detail/polynomial_horner1_3.hpp"
    exclude header "math/tools/recurrence.hpp"

    umbrella "math"
    module * { export * }*/
  }
}


module boost_algorithm_and_range { export *
module boost_range {
  export *
  module range_range { header "range.hpp" export * }
  umbrella "range"
  exclude header "range/detail/msvc_has_iterator_workaround.hpp"
  // afx.h (some legacy cstring header) is missing.
  exclude header "range/mfc.hpp"
  exclude header "range/mfc_map.hpp"
  // atldef.h not found
  exclude header "range/atl.hpp"
  // Missing includes
  exclude header "range/traversal.hpp"
  // Excluded entire details folder due to various inconsistencies
  // such as missing includes.
  exclude header "range/detail/has_member_size.hpp"
  exclude header "range/detail/collection_traits_detail.hpp"
  exclude header "range/detail/common.hpp"
  exclude header "range/detail/any_iterator_buffer.hpp"
  exclude header "range/detail/combine_rvalue.hpp"
  exclude header "range/detail/safe_bool.hpp"
  exclude header "range/detail/extract_optional_type.hpp"
  exclude header "range/detail/combine_cxx11.hpp"
  exclude header "range/detail/sfinae.hpp"
  exclude header "range/detail/default_constructible_unary_fn.hpp"
  exclude header "range/detail/microsoft.hpp"
  exclude header "range/detail/less.hpp"
  exclude header "range/detail/combine_cxx03.hpp"
  exclude header "range/detail/join_iterator.hpp"
  exclude header "range/detail/any_iterator_wrapper.hpp"
  exclude header "range/detail/any_iterator.hpp"
  exclude header "range/detail/range_return.hpp"
  exclude header "range/detail/demote_iterator_traversal_tag.hpp"
  exclude header "range/detail/str_types.hpp"
  exclude header "range/detail/combine_no_rvalue.hpp"
  exclude header "range/detail/empty.hpp"
  exclude header "range/detail/any_iterator_interface.hpp"
  exclude header "range/detail/implementation_help.hpp"
  exclude header "range/detail/sizer.hpp"
  exclude header "range/detail/msvc_has_iterator_workaround.hpp"
  exclude header "range/detail/collection_traits.hpp"
  exclude header "range/detail/difference_type.hpp"
  exclude header "range/detail/misc_concept.hpp"
  module * { export * }
}
module boost_algorithm {
  export *
  // Missing rope.h header.
  exclude header "algorithm/string/std/rope_traits.hpp"
  umbrella "algorithm"
  module * { export * }
}
}

module boost_numeric {
  export *
  module interval_interval { header "numeric/interval.hpp" export *}
  /*module interval {
    export *
    umbrella "numeric/interval"
    module * { export * }
  }*/
  //exclude opencl
  exclude header "numeric/ublas/opencl/library.hpp"
  exclude header "numeric/ublas/opencl/elementwise.hpp"

  // intentionally do not include conversion; it leads to cycles mostly via boost_cast
  //module odeint_odeint { header "numeric/odeint.hpp" export * }
  module odeint {
    export *
    module config { export * header "numeric/odeint/config.hpp" }
    module version { export * header "numeric/odeint/version.hpp" }
    module algebra { export * umbrella "numeric/odeint/algebra" module * { export * }}
    // We may not have openmp or other externals installed.
    //module external { export * umbrella "numeric/odeint/external" module * { export * }}
    module integrate {
      export *
      // Missing includes:
      exclude header "numeric/odeint/integrate/integrate_n_steps.hpp"
      exclude header "numeric/odeint/integrate/detail/integrate_n_steps.hpp"
      exclude header "numeric/odeint/integrate/detail/integrate_times.hpp"
      exclude header "numeric/odeint/integrate/detail/functors.hpp"
      exclude header "numeric/odeint/integrate/detail/integrate_const.hpp"
      exclude header "numeric/odeint/util/detail/is_range.hpp"
      exclude header "numeric/odeint/integrate/detail/integrate_adaptive.hpp"
      exclude header "numeric/odeint/integrate/integrate_times.hpp"
      exclude header "numeric/odeint/integrate/integrate_const.hpp"
      exclude header "numeric/odeint/integrate/check_adapter.hpp"

      umbrella "numeric/odeint/integrate"
       module * { export * }
    }
    // FIXME: Missing includes
    //module iterator { export * umbrella "numeric/odeint/iterator" module * { export * }}
    //module stepper { export * umbrella "numeric/odeint/stepper" module * { export * }}
    module util { export * umbrella "numeric/odeint/util" module * { export * }}
  }

  module ublas {
    export *
    // Missing includes.
    exclude header "numeric/ublas/detail/definitions.hpp"
    exclude header "numeric/ublas/detail/matrix_assign.hpp"
    exclude header "numeric/ublas/detail/raw.hpp"
    exclude header "numeric/ublas/detail/concepts.hpp"
    exclude header "numeric/ublas/tensor/multi_index_utility.hpp"
    exclude header "numeric/ublas/tensor/multiplication.hpp"
    exclude header "numeric/ublas/tensor/multi_index.hpp"
    exclude header "numeric/ublas/tensor.hpp"
    exclude header "numeric/ublas/tensor/tensor.hpp"
    exclude header "numeric/ublas/operation_sparse.hpp"

    umbrella "numeric/ublas"
    module * { export * }
  }

}
module boost_cast { export * module "cast" { header "cast.hpp" export * } }

module boost_variant {
  export *
  // Missing includes:
  exclude header "variant/detail/over_sequence.hpp"
  exclude header "variant/detail/multivisitors_cpp14_based.hpp"
  module variant_variant { header "variant.hpp" export * }
  umbrella "variant"
  module * { export * }
}

module boost_thread {
  export *
  module "thread_once" { header "thread/once.hpp" export * }
  module "thread_thread" { header "thread/thread.hpp" export * }
  // Included in the middle of source code includes "thread/detail/atomic_undef_macros.hpp"
  module "thread_future" { textual header "thread/future.hpp" export * }
  module "thread_lock_options" { header "thread/lock_options.hpp" export * }

  exclude header "thread/thread_time.hpp"
  // Logically goes together with thread_only.hpp and thread.hpp due to thread_data_base
  exclude header "thread/detail/thread_group.hpp"
  // Broken and seems never included.
  exclude header "thread/detail/function_wrapper.hpp"

  module thread_concurrent_queues {
    umbrella "thread/concurrent_queues"
    // error: use of undeclared identifier 'sync_deque_is_closed'
    exclude header "thread/concurrent_queues/detail/sync_deque_base.hpp"
    module * { export * }
 }
  module thread_csbl { umbrella "thread/csbl" module * { export * } }
  module thread_detail {

    umbrella "thread/detail" module * { export * }
  }
  //module thread_executors { umbrella "thread/executors" module * { export * } }
  //module thread_experimental { umbrella "thread/experimental" module * { export * } }
  module thread_futures { umbrella "thread/futures" module * { export * } }
  module thread_pthread {
    // error: no member named 'storage' in 'boost::once_flag'
    exclude header "thread/pthread/once_atomic.hpp"
    exclude header "thread/pthread/once.hpp"
    umbrella "thread/pthread" module * { export * }
  }
  module thread_v2 { umbrella "thread/v2" module * { export * } }
  //module thread_win32 { umbrella "thread/win32" module * { export * } }
}

module boost_units {
  export *
  umbrella "units"
  module * { export * }
}

module boost_foreach { export * module "foreach" { header "foreach.hpp" export * } }
// FIXME: Combine with boost_foreach
module boost_foreach_fwd { export * module "foreach_fwd" { header "foreach_fwd.hpp" export * } }

  module boost_spirit {
    export *
    module "spirit__home__classic__actor__assign_actor" { header "spirit/home/classic/actor/assign_actor.hpp" export * }
    module "spirit__home__classic__actor__assign_key_actor" { header "spirit/home/classic/actor/assign_key_actor.hpp" export * }
    module "spirit__home__classic__actor__clear_actor" { header "spirit/home/classic/actor/clear_actor.hpp" export * }
    module "spirit__home__classic__actor__decrement_actor" { header "spirit/home/classic/actor/decrement_actor.hpp" export * }
    module "spirit__home__classic__actor__erase_actor" { header "spirit/home/classic/actor/erase_actor.hpp" export * }
    module "spirit__home__classic__actor" { header "spirit/home/classic/actor.hpp" export * }
    module "spirit__home__classic__actor__increment_actor" { header "spirit/home/classic/actor/increment_actor.hpp" export * }
    module "spirit__home__classic__actor__insert_at_actor" { header "spirit/home/classic/actor/insert_at_actor.hpp" export * }
    module "spirit__home__classic__actor__insert_key_actor" { header "spirit/home/classic/actor/insert_key_actor.hpp" export * }
    module "spirit__home__classic__actor__push_back_actor" { header "spirit/home/classic/actor/push_back_actor.hpp" export * }
    module "spirit__home__classic__actor__push_front_actor" { header "spirit/home/classic/actor/push_front_actor.hpp" export * }
    module "spirit__home__classic__actor__ref_actor" { header "spirit/home/classic/actor/ref_actor.hpp" export * }
    module "spirit__home__classic__actor__ref_const_ref_actor" { header "spirit/home/classic/actor/ref_const_ref_actor.hpp" export * }
    module "spirit__home__classic__actor__ref_const_ref_const_ref_a" { header "spirit/home/classic/actor/ref_const_ref_const_ref_a.hpp" export * }
    module "spirit__home__classic__actor__ref_const_ref_value_actor" { header "spirit/home/classic/actor/ref_const_ref_value_actor.hpp" export * }
    module "spirit__home__classic__actor__ref_value_actor" { header "spirit/home/classic/actor/ref_value_actor.hpp" export * }
    module "spirit__home__classic__actor__swap_actor" { header "spirit/home/classic/actor/swap_actor.hpp" export * }
    module "spirit__home__classic__actor__typeof" { header "spirit/home/classic/actor/typeof.hpp" export * }
    module "spirit__home__classic__attribute__closure_context" { header "spirit/home/classic/attribute/closure_context.hpp" export * }
    module "spirit__home__classic__attribute__closure_fwd" { header "spirit/home/classic/attribute/closure_fwd.hpp" export * }
    module "spirit__home__classic__attribute__closure" { header "spirit/home/classic/attribute/closure.hpp" export * }
    module "spirit__home__classic__attribute" { header "spirit/home/classic/attribute.hpp" export * }
    module "spirit__home__classic__attribute__parametric" { header "spirit/home/classic/attribute/parametric.hpp" export * }
    module "spirit__home__classic__attribute__typeof" { header "spirit/home/classic/attribute/typeof.hpp" export * }
    module "spirit__home__classic__core__assert" { header "spirit/home/classic/core/assert.hpp" export * }
    module "spirit__home__classic__core__composite__actions" { header "spirit/home/classic/core/composite/actions.hpp" export * }
    module "spirit__home__classic__core__composite__alternative" { header "spirit/home/classic/core/composite/alternative.hpp" export * }
    module "spirit__home__classic__core__composite__composite" { header "spirit/home/classic/core/composite/composite.hpp" export * }
    module "spirit__home__classic__core__composite__difference" { header "spirit/home/classic/core/composite/difference.hpp" export * }
    module "spirit__home__classic__core__composite__directives" { header "spirit/home/classic/core/composite/directives.hpp" export * }
    module "spirit__home__classic__core__composite__epsilon" { header "spirit/home/classic/core/composite/epsilon.hpp" export * }
    module "spirit__home__classic__core__composite__exclusive_or" { header "spirit/home/classic/core/composite/exclusive_or.hpp" export * }
    module "spirit__home__classic__core__composite__intersection" { header "spirit/home/classic/core/composite/intersection.hpp" export * }
    module "spirit__home__classic__core__composite__kleene_star" { header "spirit/home/classic/core/composite/kleene_star.hpp" export * }
    module "spirit__home__classic__core__composite__no_actions" { header "spirit/home/classic/core/composite/no_actions.hpp" export * }
    module "spirit__home__classic__core__composite__operators" { header "spirit/home/classic/core/composite/operators.hpp" export * }
    module "spirit__home__classic__core__composite__optional" { header "spirit/home/classic/core/composite/optional.hpp" export * }
    module "spirit__home__classic__core__composite__positive" { header "spirit/home/classic/core/composite/positive.hpp" export * }
    module "spirit__home__classic__core__composite__sequence" { header "spirit/home/classic/core/composite/sequence.hpp" export * }
    module "spirit__home__classic__core__composite__sequential_or" { header "spirit/home/classic/core/composite/sequential_or.hpp" export * }
    module "spirit__home__classic__core__config" { header "spirit/home/classic/core/config.hpp" export * }
    module "spirit__home__classic__core" { header "spirit/home/classic/core.hpp" export * }
    module "spirit__home__classic__core__match" { header "spirit/home/classic/core/match.hpp" export * }
    module "spirit__home__classic__core__nil" { header "spirit/home/classic/core/nil.hpp" export * }
    module "spirit__home__classic__core__non_terminal__grammar" { header "spirit/home/classic/core/non_terminal/grammar.hpp" export * }
    //once_atomic.hpp:99:52: error: no member named 'storage' in 'boost::once_flag'
    //module "spirit__home__classic__core__non_terminal__impl__static" { header "spirit/home/classic/core/non_terminal/impl/static.hpp" export * }
    module "spirit__home__classic__core__non_terminal__rule" { header "spirit/home/classic/core/non_terminal/rule.hpp" export * }
    module "spirit__home__classic__core__non_terminal__subrule_fwd" { header "spirit/home/classic/core/non_terminal/subrule_fwd.hpp" export * }
    module "spirit__home__classic__core__non_terminal__subrule" { header "spirit/home/classic/core/non_terminal/subrule.hpp" export * }
    module "spirit__home__classic__core__parser" { header "spirit/home/classic/core/parser.hpp" export * }
    module "spirit__home__classic__core__primitives__numerics_fwd" { header "spirit/home/classic/core/primitives/numerics_fwd.hpp" export * }
    module "spirit__home__classic__core__primitives__numerics" { header "spirit/home/classic/core/primitives/numerics.hpp" export * }
    module "spirit__home__classic__core__primitives__primitives" { header "spirit/home/classic/core/primitives/primitives.hpp" export * }
    module "spirit__home__classic__core__safe_bool" { header "spirit/home/classic/core/safe_bool.hpp" export * }
    module "spirit__home__classic__core__scanner__scanner_fwd" { header "spirit/home/classic/core/scanner/scanner_fwd.hpp" export * }
    module "spirit__home__classic__core__scanner__scanner" { header "spirit/home/classic/core/scanner/scanner.hpp" export * }
    module "spirit__home__classic__core__scanner__skipper_fwd" { header "spirit/home/classic/core/scanner/skipper_fwd.hpp" export * }
    module "spirit__home__classic__core__typeof" { header "spirit/home/classic/core/typeof.hpp" export * }
    module "spirit__home__classic__debug" { header "spirit/home/classic/debug.hpp" export * }
    module "spirit__home__classic__debug__parser_names" { header "spirit/home/classic/debug/parser_names.hpp" export * }
    module "spirit__home__classic__debug__typeof" { header "spirit/home/classic/debug/typeof.hpp" export * }
    module "spirit__home__classic__dynamic__for" { header "spirit/home/classic/dynamic/for.hpp" export * }
    module "spirit__home__classic__dynamic" { header "spirit/home/classic/dynamic.hpp" export * }
    module "spirit__home__classic__dynamic__if" { header "spirit/home/classic/dynamic/if.hpp" export * }
    module "spirit__home__classic__dynamic__lazy" { header "spirit/home/classic/dynamic/lazy.hpp" export * }
    module "spirit__home__classic__dynamic__rule_alias" { header "spirit/home/classic/dynamic/rule_alias.hpp" export * }
    module "spirit__home__classic__dynamic__select" { header "spirit/home/classic/dynamic/select.hpp" export * }
    module "spirit__home__classic__dynamic__stored_rule_fwd" { header "spirit/home/classic/dynamic/stored_rule_fwd.hpp" export * }
    module "spirit__home__classic__dynamic__stored_rule" { header "spirit/home/classic/dynamic/stored_rule.hpp" export * }
    module "spirit__home__classic__dynamic__switch" { header "spirit/home/classic/dynamic/switch.hpp" export * }
    module "spirit__home__classic__dynamic__typeof" { header "spirit/home/classic/dynamic/typeof.hpp" export * }
    module "spirit__home__classic__dynamic__while" { header "spirit/home/classic/dynamic/while.hpp" export * }
    module "spirit__home__classic__error_handling__exceptions_fwd" { header "spirit/home/classic/error_handling/exceptions_fwd.hpp" export * }
    module "spirit__home__classic__error_handling__exceptions" { header "spirit/home/classic/error_handling/exceptions.hpp" export * }
    module "spirit__home__classic__error_handling" { header "spirit/home/classic/error_handling.hpp" export * }
    module "spirit__home__classic__error_handling__typeof" { header "spirit/home/classic/error_handling/typeof.hpp" export * }
    module "spirit__home__classic__iterator__file_iterator_fwd" { header "spirit/home/classic/iterator/file_iterator_fwd.hpp" export * }
    module "spirit__home__classic__iterator__file_iterator" { header "spirit/home/classic/iterator/file_iterator.hpp" export * }
    module "spirit__home__classic__iterator__fixed_size_queue" { header "spirit/home/classic/iterator/fixed_size_queue.hpp" export * }
    module "spirit__home__classic__iterator" { header "spirit/home/classic/iterator.hpp" export * }
    module "spirit__home__classic__iterator__multi_pass_fwd" { header "spirit/home/classic/iterator/multi_pass_fwd.hpp" export * }
    module "spirit__home__classic__iterator__multi_pass" { header "spirit/home/classic/iterator/multi_pass.hpp" export * }
    module "spirit__home__classic__iterator__position_iterator_fwd" { header "spirit/home/classic/iterator/position_iterator_fwd.hpp" export * }
    module "spirit__home__classic__iterator__position_iterator" { header "spirit/home/classic/iterator/position_iterator.hpp" export * }
    module "spirit__home__classic__iterator__typeof" { header "spirit/home/classic/iterator/typeof.hpp" export * }
    module "spirit__home__classic__meta__as_parser" { header "spirit/home/classic/meta/as_parser.hpp" export * }
    module "spirit__home__classic__meta__parser_traits" { header "spirit/home/classic/meta/parser_traits.hpp" export * }
    module "spirit__home__classic__meta__refactoring" { header "spirit/home/classic/meta/refactoring.hpp" export * }
    module "spirit__home__classic__namespace" { header "spirit/home/classic/namespace.hpp" export * }
    module "spirit__home__classic__phoenix__actor" { header "spirit/home/classic/phoenix/actor.hpp" export * }
    module "spirit__home__classic__phoenix__binders" { header "spirit/home/classic/phoenix/binders.hpp" export * }
    module "spirit__home__classic__phoenix__casts" { header "spirit/home/classic/phoenix/casts.hpp" export * }
    module "spirit__home__classic__phoenix__closures" { header "spirit/home/classic/phoenix/closures.hpp" export * }
    module "spirit__home__classic__phoenix__composite" { header "spirit/home/classic/phoenix/composite.hpp" export * }
    module "spirit__home__classic__phoenix__functions" { header "spirit/home/classic/phoenix/functions.hpp" export * }
    module "spirit__home__classic__phoenix" { header "spirit/home/classic/phoenix.hpp" export * }
    module "spirit__home__classic__phoenix__new" { header "spirit/home/classic/phoenix/new.hpp" export * }
    module "spirit__home__classic__phoenix__operators" { header "spirit/home/classic/phoenix/operators.hpp" export * }
    module "spirit__home__classic__phoenix__primitives" { header "spirit/home/classic/phoenix/primitives.hpp" export * }
    module "spirit__home__classic__phoenix__statements" { header "spirit/home/classic/phoenix/statements.hpp" export * }
    module "spirit__home__classic__phoenix__tuple_helpers" { header "spirit/home/classic/phoenix/tuple_helpers.hpp" export * }
    module "spirit__home__classic__phoenix__tuples" { header "spirit/home/classic/phoenix/tuples.hpp" export * }
    module "spirit__home__classic__symbols" { header "spirit/home/classic/symbols.hpp" export * }
    module "spirit__home__classic__symbols__symbols_fwd" { header "spirit/home/classic/symbols/symbols_fwd.hpp" export * }
    module "spirit__home__classic__symbols__symbols" { header "spirit/home/classic/symbols/symbols.hpp" export * }
    module "spirit__home__classic__symbols__typeof" { header "spirit/home/classic/symbols/typeof.hpp" export * }
    module "spirit__home__classic__tree__ast" { header "spirit/home/classic/tree/ast.hpp" export * }
    module "spirit__home__classic__tree__common_fwd" { header "spirit/home/classic/tree/common_fwd.hpp" export * }
    module "spirit__home__classic__tree__common" { header "spirit/home/classic/tree/common.hpp" export * }
    module "spirit__home__classic__tree__parse_tree" { header "spirit/home/classic/tree/parse_tree.hpp" export * }
    module "spirit__home__classic__tree__parse_tree_utils" { header "spirit/home/classic/tree/parse_tree_utils.hpp" export * }
    module "spirit__home__classic__tree__typeof" { header "spirit/home/classic/tree/typeof.hpp" export * }
    module "spirit__home__classic__utility__chset" { header "spirit/home/classic/utility/chset.hpp" export * }
    // Doesn't work to have this as a module:
    /*
    In file included from <module-includes>:956:
In file included from /home/teemperor/boost-compile/inc/boost/spirit/home/classic/utility/chset.hpp:186:
In file included from /home/teemperor/boost-compile/inc/boost/spirit/home/classic/utility/impl/chset.ipp:15:
In file included from /home/teemperor/boost-compile/inc/boost/spirit/home/classic/utility/chset.hpp:187:
In file included from /home/teemperor/boost-compile/inc/boost/spirit/home/classic/utility/chset_operators.hpp:14:
In file included from /home/teemperor/boost-compile/inc/boost/spirit/home/classic/utility/chset.hpp:187:
In file included from /home/teemperor/boost-compile/inc/boost/spirit/home/classic/utility/chset_operators.hpp:402:
/home/teemperor/boost-compile/inc/boost/spirit/home/classic/utility/impl/chset_operators.ipp:26:8: error: missing '#include "boost/spirit/home/classic/utility/chset.hpp"'; declaration of
      'chset' must be imported from module 'boost_modules_wrapper.boost_spirit.spirit__home__classic__utility__chset' before it is required
inline chset<CharT>
       ^
/home/teemperor/boost-compile/inc/boost/spirit/home/classic/utility/chset.hpp:40:7: note: previous declaration is here
class chset: public char_parser<chset<CharT> > {
      ^
*/
    // module "spirit__home__classic__utility__chset_operators" { header "spirit/home/classic/utility/chset_operators.hpp" export * }
    module "spirit__home__classic__utility__confix_fwd" { header "spirit/home/classic/utility/confix_fwd.hpp" export * }
    module "spirit__home__classic__utility__confix" { header "spirit/home/classic/utility/confix.hpp" export * }
    module "spirit__home__classic__utility__distinct" { header "spirit/home/classic/utility/distinct.hpp" export * }
    module "spirit__home__classic__utility__escape_char_fwd" { header "spirit/home/classic/utility/escape_char_fwd.hpp" export * }
    module "spirit__home__classic__utility__escape_char" { header "spirit/home/classic/utility/escape_char.hpp" export * }
    module "spirit__home__classic__utility__flush_multi_pass" { header "spirit/home/classic/utility/flush_multi_pass.hpp" export * }
    module "spirit__home__classic__utility__functor_parser" { header "spirit/home/classic/utility/functor_parser.hpp" export * }
    module "spirit__home__classic__utility__grammar_def" { header "spirit/home/classic/utility/grammar_def.hpp" export * }
    module "spirit__home__classic__utility__impl__chset__basic_chset" { header "spirit/home/classic/utility/impl/chset/basic_chset.hpp" export * }
    module "spirit__home__classic__utility__impl__chset__range_run" { header "spirit/home/classic/utility/impl/chset/range_run.hpp" export * }
    module "spirit__home__classic__utility__lists_fwd" { header "spirit/home/classic/utility/lists_fwd.hpp" export * }
    module "spirit__home__classic__utility__regex" { header "spirit/home/classic/utility/regex.hpp" export * }
    module "spirit__home__classic__utility__rule_parser" { header "spirit/home/classic/utility/rule_parser.hpp" export * }
    module "spirit__home__classic__utility__typeof" { header "spirit/home/classic/utility/typeof.hpp" export * }
    module "spirit__home__classic__version" { header "spirit/home/classic/version.hpp" export * }
    module "spirit__home__karma__action__action" { header "spirit/home/karma/action/action.hpp" export * }
    module "spirit__home__karma__action" { header "spirit/home/karma/action.hpp" export * }
    module "spirit__home__karma__auto__auto" { header "spirit/home/karma/auto/auto.hpp" export * }
    module "spirit__home__karma__auto__create_generator" { header "spirit/home/karma/auto/create_generator.hpp" export * }
    module "spirit__home__karma__auto" { header "spirit/home/karma/auto.hpp" export * }
    module "spirit__home__karma__auto__meta_create" { header "spirit/home/karma/auto/meta_create.hpp" export * }
    module "spirit__home__karma__auxiliary__attr_cast" { header "spirit/home/karma/auxiliary/attr_cast.hpp" export * }
    module "spirit__home__karma__auxiliary__eol" { header "spirit/home/karma/auxiliary/eol.hpp" export * }
    module "spirit__home__karma__auxiliary__eps" { header "spirit/home/karma/auxiliary/eps.hpp" export * }
    module "spirit__home__karma__auxiliary" { header "spirit/home/karma/auxiliary.hpp" export * }
    module "spirit__home__karma__auxiliary__lazy" { header "spirit/home/karma/auxiliary/lazy.hpp" export * }
    module "spirit__home__karma__binary__binary" { header "spirit/home/karma/binary/binary.hpp" export * }
    module "spirit__home__karma__binary" { header "spirit/home/karma/binary.hpp" export * }
    module "spirit__home__karma__binary__padding" { header "spirit/home/karma/binary/padding.hpp" export * }
    module "spirit__home__karma__char__char_class" { header "spirit/home/karma/char/char_class.hpp" export * }
    module "spirit__home__karma__char__char_generator" { header "spirit/home/karma/char/char_generator.hpp" export * }
    /* FIXME: Breaks compilation:
    While building module 'boost_modules_wrapper' imported from /home/teemperor/boost-compile/inc/boost/asio/time_traits.hpp:23:
In file included from <module-includes>:972:
In file included from /home/teemperor/boost-compile/inc/boost/spirit/home/karma/action/action.hpp:22:
/home/teemperor/boost-compile/inc/boost/spirit/home/karma/meta_compiler.hpp:75:37: error: missing '#include "boost/spirit/home/karma/char/char.hpp"'; definition of
      'make_primitive<char, Modifiers>' must be imported from module 'boost_modules_wrapper.boost_spirit.spirit__home__karma__char__char' before it is required
            typedef typename karma::make_primitive<
                                    ^
/home/teemperor/boost-compile/inc/boost/spirit/home/support/make_component.hpp:72:30: note: in instantiation of template class 'boost::spirit::make_component<boost::spirit::karma::domain,
      boost::proto::tagns_::tag::terminal, void>::result<boost::spirit::make_component<karma::domain, proto::tag::terminal> (boost::fusion::cons<char, boost::fusion::nil_>,
      boost::spirit::unused_type)>' requested here
            make_component_::template
                             ^
    */
    //module "spirit__home__karma__char__char" { header "spirit/home/karma/char/char.hpp" export * }
    //module "spirit__home__karma__char" { header "spirit/home/karma/char.hpp" export * }
    module "spirit__home__karma__delimit_flag" { header "spirit/home/karma/delimit_flag.hpp" export * }
    module "spirit__home__karma__delimit_out" { header "spirit/home/karma/delimit_out.hpp" export * }
    module "spirit__home__karma__detail__alternative_function" { header "spirit/home/karma/detail/alternative_function.hpp" export * }
    module "spirit__home__karma__detail__as" { header "spirit/home/karma/detail/as.hpp" export * }
    module "spirit__home__karma__detail__attributes" { header "spirit/home/karma/detail/attributes.hpp" export * }
    module "spirit__home__karma__detail__default_width" { header "spirit/home/karma/detail/default_width.hpp" export * }
    module "spirit__home__karma__detail__enable_lit" { header "spirit/home/karma/detail/enable_lit.hpp" export * }
    module "spirit__home__karma__detail__extract_from" { header "spirit/home/karma/detail/extract_from.hpp" export * }
    module "spirit__home__karma__detail__fail_function" { header "spirit/home/karma/detail/fail_function.hpp" export * }
    module "spirit__home__karma__detail__generate_auto" { header "spirit/home/karma/detail/generate_auto.hpp" export * }
    module "spirit__home__karma__detail__generate" { header "spirit/home/karma/detail/generate.hpp" export * }
    module "spirit__home__karma__detail__generate_to" { header "spirit/home/karma/detail/generate_to.hpp" export * }
    module "spirit__home__karma__detail__get_casetag" { header "spirit/home/karma/detail/get_casetag.hpp" export * }
    module "spirit__home__karma__detail__get_stricttag" { header "spirit/home/karma/detail/get_stricttag.hpp" export * }
    /*
     * While building module 'boost_modules_wrapper' imported from /home/teemperor/llvm/boost-compile/cms.cpp:2:
In file included from <module-includes>:997:
/home/teemperor/llvm/boost-compile/inc-cms/boost/spirit/home/karma/detail/indirect_iterator.hpp:26:37: error: missing '#include "boost/detail/iterator.hpp"'; declaration of
      'iterator_traits' must be imported from module 'boost_utils.boost_detail.detail__iterator' before it is required
          , typename boost::detail::iterator_traits<Iterator>::value_type
          */
    //module "spirit__home__karma__detail__indirect_iterator" { header "spirit/home/karma/detail/indirect_iterator.hpp" export * }
    module "spirit__home__karma__detail__output_iterator" { header "spirit/home/karma/detail/output_iterator.hpp" export * }
    module "spirit__home__karma__detail__pass_container" { header "spirit/home/karma/detail/pass_container.hpp" export * }
    module "spirit__home__karma__detail__string_compare" { header "spirit/home/karma/detail/string_compare.hpp" export * }
    module "spirit__home__karma__detail__string_generate" { header "spirit/home/karma/detail/string_generate.hpp" export * }
    module "spirit__home__karma__detail__unused_delimiter" { header "spirit/home/karma/detail/unused_delimiter.hpp" export * }
    module "spirit__home__karma__directive__buffer" { header "spirit/home/karma/directive/buffer.hpp" export * }
    module "spirit__home__karma__directive__center_alignment" { header "spirit/home/karma/directive/center_alignment.hpp" export * }
    module "spirit__home__karma__directive__columns" { header "spirit/home/karma/directive/columns.hpp" export * }
    module "spirit__home__karma__directive__delimit" { header "spirit/home/karma/directive/delimit.hpp" export * }
    module "spirit__home__karma__directive__duplicate" { header "spirit/home/karma/directive/duplicate.hpp" export * }
    module "spirit__home__karma__directive__encoding" { header "spirit/home/karma/directive/encoding.hpp" export * }
    module "spirit__home__karma__directive" { header "spirit/home/karma/directive.hpp" export * }
    module "spirit__home__karma__directive__left_alignment" { header "spirit/home/karma/directive/left_alignment.hpp" export * }
    module "spirit__home__karma__directive__maxwidth" { header "spirit/home/karma/directive/maxwidth.hpp" export * }
    module "spirit__home__karma__directive__no_delimit" { header "spirit/home/karma/directive/no_delimit.hpp" export * }
    module "spirit__home__karma__directive__repeat" { header "spirit/home/karma/directive/repeat.hpp" export * }
    module "spirit__home__karma__directive__right_alignment" { header "spirit/home/karma/directive/right_alignment.hpp" export * }
    module "spirit__home__karma__directive__strict_relaxed" { header "spirit/home/karma/directive/strict_relaxed.hpp" export * }
    module "spirit__home__karma__directive__upper_lower_case" { header "spirit/home/karma/directive/upper_lower_case.hpp" export * }
    module "spirit__home__karma__directive__verbatim" { header "spirit/home/karma/directive/verbatim.hpp" export * }
    module "spirit__home__karma__domain" { header "spirit/home/karma/domain.hpp" export * }
    module "spirit__home__karma__format_auto" { header "spirit/home/karma/format_auto.hpp" export * }
    module "spirit__home__karma__format" { header "spirit/home/karma/format.hpp" export * }
    module "spirit__home__karma__generate_attr" { header "spirit/home/karma/generate_attr.hpp" export * }
    module "spirit__home__karma__generate" { header "spirit/home/karma/generate.hpp" export * }
    module "spirit__home__karma__generator" { header "spirit/home/karma/generator.hpp" export * }
    module "spirit__home__karma" { header "spirit/home/karma.hpp" export * }
    module "spirit__home__karma__meta_compiler" { header "spirit/home/karma/meta_compiler.hpp" export * }
    module "spirit__home__karma__nonterminal__debug_handler" { header "spirit/home/karma/nonterminal/debug_handler.hpp" export * }
    module "spirit__home__karma__nonterminal__debug_handler_state" { header "spirit/home/karma/nonterminal/debug_handler_state.hpp" export * }
    module "spirit__home__karma__nonterminal__detail__parameterized" { header "spirit/home/karma/nonterminal/detail/parameterized.hpp" export * }
    module "spirit__home__karma__nonterminal__grammar" { header "spirit/home/karma/nonterminal/grammar.hpp" export * }
    module "spirit__home__karma__nonterminal" { header "spirit/home/karma/nonterminal.hpp" export * }
    module "spirit__home__karma__nonterminal__nonterminal_fwd" { header "spirit/home/karma/nonterminal/nonterminal_fwd.hpp" export * }
    module "spirit__home__karma__nonterminal__rule" { header "spirit/home/karma/nonterminal/rule.hpp" export * }
    module "spirit__home__karma__numeric__bool" { header "spirit/home/karma/numeric/bool.hpp" export * }
    module "spirit__home__karma__numeric__bool_policies" { header "spirit/home/karma/numeric/bool_policies.hpp" export * }
    module "spirit__home__karma__numeric__detail__bool_utils" { header "spirit/home/karma/numeric/detail/bool_utils.hpp" export * }
    module "spirit__home__karma__numeric__detail__numeric_utils" { header "spirit/home/karma/numeric/detail/numeric_utils.hpp" export * }
    module "spirit__home__karma__numeric__detail__real_utils" { header "spirit/home/karma/numeric/detail/real_utils.hpp" export * }
    module "spirit__home__karma__numeric" { header "spirit/home/karma/numeric.hpp" export * }
    module "spirit__home__karma__numeric__int" { header "spirit/home/karma/numeric/int.hpp" export * }
    module "spirit__home__karma__numeric__real" { header "spirit/home/karma/numeric/real.hpp" export * }
    module "spirit__home__karma__numeric__real_policies" { header "spirit/home/karma/numeric/real_policies.hpp" export * }
    module "spirit__home__karma__numeric__uint" { header "spirit/home/karma/numeric/uint.hpp" export * }
    module "spirit__home__karma__operator__alternative" { header "spirit/home/karma/operator/alternative.hpp" export * }
    module "spirit__home__karma__operator__and_predicate" { header "spirit/home/karma/operator/and_predicate.hpp" export * }
    module "spirit__home__karma__operator" { header "spirit/home/karma/operator.hpp" export * }
    module "spirit__home__karma__operator__kleene" { header "spirit/home/karma/operator/kleene.hpp" export * }
    module "spirit__home__karma__operator__list" { header "spirit/home/karma/operator/list.hpp" export * }
    module "spirit__home__karma__operator__not_predicate" { header "spirit/home/karma/operator/not_predicate.hpp" export * }
    module "spirit__home__karma__operator__optional" { header "spirit/home/karma/operator/optional.hpp" export * }
    module "spirit__home__karma__operator__plus" { header "spirit/home/karma/operator/plus.hpp" export * }
    module "spirit__home__karma__operator__sequence" { header "spirit/home/karma/operator/sequence.hpp" export * }
    module "spirit__home__karma__phoenix_attributes" { header "spirit/home/karma/phoenix_attributes.hpp" export * }
    module "spirit__home__karma__reference" { header "spirit/home/karma/reference.hpp" export * }
    module "spirit__home__karma__stream__detail__format_manip_auto" { header "spirit/home/karma/stream/detail/format_manip_auto.hpp" export * }
    module "spirit__home__karma__stream__detail__format_manip" { header "spirit/home/karma/stream/detail/format_manip.hpp" export * }
    module "spirit__home__karma__stream__format_manip_attr" { header "spirit/home/karma/stream/format_manip_attr.hpp" export * }
    module "spirit__home__karma__stream__format_manip" { header "spirit/home/karma/stream/format_manip.hpp" export * }
    module "spirit__home__karma__stream" { header "spirit/home/karma/stream.hpp" export * }
    module "spirit__home__karma__stream__ostream_iterator" { header "spirit/home/karma/stream/ostream_iterator.hpp" export * }
    module "spirit__home__karma__stream__stream" { header "spirit/home/karma/stream/stream.hpp" export * }
    module "spirit__home__karma__string" { header "spirit/home/karma/string.hpp" export * }
    module "spirit__home__karma__string__lit" { header "spirit/home/karma/string/lit.hpp" export * }
    module "spirit__home__karma__string__symbols" { header "spirit/home/karma/string/symbols.hpp" export * }
    module "spirit__home__karma__what" { header "spirit/home/karma/what.hpp" export * }
    module "spirit__home__lex__detail__sequence_function" { header "spirit/home/lex/detail/sequence_function.hpp" export * }
    module "spirit__home__lex__domain" { header "spirit/home/lex/domain.hpp" export * }
    module "spirit__home__lex" { header "spirit/home/lex.hpp" export * }
    module "spirit__home__lex__lexer__char_token_def" { header "spirit/home/lex/lexer/char_token_def.hpp" export * }
    module "spirit__home__lex__lexer" { header "spirit/home/lex/lexer.hpp" export * }
    module "spirit__home__lex__lexer__lexer" { header "spirit/home/lex/lexer/lexer.hpp" export * }
    module "spirit__home__lex__lexer__lexertl__generate_static" { header "spirit/home/lex/lexer/lexertl/generate_static.hpp" export * }
    module "spirit__home__lex__lexer__lexertl__iterator" { header "spirit/home/lex/lexer/lexertl/iterator.hpp" export * }
    module "spirit__home__lex__lexer__lexertl__iterator_tokenizer" { header "spirit/home/lex/lexer/lexertl/iterator_tokenizer.hpp" export * }
    module "spirit__home__lex__lexer__lexertl__semantic_action_data" { header "spirit/home/lex/lexer/lexertl/semantic_action_data.hpp" export * }
    module "spirit__home__lex__lexer__lexertl__static_version" { header "spirit/home/lex/lexer/lexertl/static_version.hpp" export * }
    module "spirit__home__lex__lexer__lexertl__wrap_action" { header "spirit/home/lex/lexer/lexertl/wrap_action.hpp" export * }
    module "spirit__home__lex__lexer__pass_flags" { header "spirit/home/lex/lexer/pass_flags.hpp" export * }
    module "spirit__home__lex__lexer__sequence" { header "spirit/home/lex/lexer/sequence.hpp" export * }
    module "spirit__home__lex__lexer__string_token_def" { header "spirit/home/lex/lexer/string_token_def.hpp" export * }
    module "spirit__home__lex__lexer__support_functions_expression" { header "spirit/home/lex/lexer/support_functions_expression.hpp" export * }
    module "spirit__home__lex__lexer__terminals" { header "spirit/home/lex/lexer/terminals.hpp" export * }
    module "spirit__home__lex__lexer__token_def" { header "spirit/home/lex/lexer/token_def.hpp" export * }
    module "spirit__home__lex__lexer_type" { header "spirit/home/lex/lexer_type.hpp" export * }
    module "spirit__home__lex__meta_compiler" { header "spirit/home/lex/meta_compiler.hpp" export * }
    module "spirit__home__lex__primitives" { header "spirit/home/lex/primitives.hpp" export * }
    module "spirit__home__lex__qi" { header "spirit/home/lex/qi.hpp" export * }
    module "spirit__home__lex__qi__plain_raw_token" { header "spirit/home/lex/qi/plain_raw_token.hpp" export * }
    module "spirit__home__lex__qi__plain_token" { header "spirit/home/lex/qi/plain_token.hpp" export * }
    module "spirit__home__lex__qi__plain_tokenid" { header "spirit/home/lex/qi/plain_tokenid.hpp" export * }
    module "spirit__home__lex__qi__plain_tokenid_mask" { header "spirit/home/lex/qi/plain_tokenid_mask.hpp" export * }
    module "spirit__home__lex__qi__state_switcher" { header "spirit/home/lex/qi/state_switcher.hpp" export * }
    module "spirit__home__lex__reference" { header "spirit/home/lex/reference.hpp" export * }
    module "spirit__home__lex__tokenize_and_parse_attr" { header "spirit/home/lex/tokenize_and_parse_attr.hpp" export * }
    module "spirit__home__lex__tokenize_and_parse" { header "spirit/home/lex/tokenize_and_parse.hpp" export * }
    module "spirit__home__qi__action__action" { header "spirit/home/qi/action/action.hpp" export * }
    module "spirit__home__qi__action" { header "spirit/home/qi/action.hpp" export * }
    module "spirit__home__qi__auto__auto" { header "spirit/home/qi/auto/auto.hpp" export * }
    module "spirit__home__qi__auto__create_parser" { header "spirit/home/qi/auto/create_parser.hpp" export * }
    module "spirit__home__qi__auto" { header "spirit/home/qi/auto.hpp" export * }
    module "spirit__home__qi__auto__meta_create" { header "spirit/home/qi/auto/meta_create.hpp" export * }
    module "spirit__home__qi__auxiliary__attr_cast" { header "spirit/home/qi/auxiliary/attr_cast.hpp" export * }
    module "spirit__home__qi__auxiliary__attr" { header "spirit/home/qi/auxiliary/attr.hpp" export * }
    module "spirit__home__qi__auxiliary__eoi" { header "spirit/home/qi/auxiliary/eoi.hpp" export * }
    module "spirit__home__qi__auxiliary__eol" { header "spirit/home/qi/auxiliary/eol.hpp" export * }
    module "spirit__home__qi__auxiliary__eps" { header "spirit/home/qi/auxiliary/eps.hpp" export * }
    module "spirit__home__qi__auxiliary" { header "spirit/home/qi/auxiliary.hpp" export * }
    module "spirit__home__qi__auxiliary__lazy" { header "spirit/home/qi/auxiliary/lazy.hpp" export * }
    module "spirit__home__qi__binary__binary" { header "spirit/home/qi/binary/binary.hpp" export * }
    module "spirit__home__qi__binary" { header "spirit/home/qi/binary.hpp" export * }
    module "spirit__home__qi__char__char_class" { header "spirit/home/qi/char/char_class.hpp" export * }
    module "spirit__home__qi__char__char" { header "spirit/home/qi/char/char.hpp" export * }
    module "spirit__home__qi__char__char_parser" { header "spirit/home/qi/char/char_parser.hpp" export * }
    module "spirit__home__qi__char" { header "spirit/home/qi/char.hpp" export * }
    module "spirit__home__qi__detail__alternative_function" { header "spirit/home/qi/detail/alternative_function.hpp" export * }
    module "spirit__home__qi__detail__assign_to" { header "spirit/home/qi/detail/assign_to.hpp" export * }
    module "spirit__home__qi__detail__attributes" { header "spirit/home/qi/detail/attributes.hpp" export * }
    module "spirit__home__qi__detail__construct" { header "spirit/home/qi/detail/construct.hpp" export * }
    module "spirit__home__qi__detail__enable_lit" { header "spirit/home/qi/detail/enable_lit.hpp" export * }
    module "spirit__home__qi__detail__expect_function" { header "spirit/home/qi/detail/expect_function.hpp" export * }
    module "spirit__home__qi__detail__fail_function" { header "spirit/home/qi/detail/fail_function.hpp" export * }
    module "spirit__home__qi__detail__parse_auto" { header "spirit/home/qi/detail/parse_auto.hpp" export * }
    module "spirit__home__qi__detail__parse" { header "spirit/home/qi/detail/parse.hpp" export * }
    module "spirit__home__qi__detail__pass_container" { header "spirit/home/qi/detail/pass_container.hpp" export * }
    module "spirit__home__qi__detail__pass_function" { header "spirit/home/qi/detail/pass_function.hpp" export * }
    module "spirit__home__qi__detail__permute_function" { header "spirit/home/qi/detail/permute_function.hpp" export * }
    module "spirit__home__qi__detail__string_parse" { header "spirit/home/qi/detail/string_parse.hpp" export * }
    module "spirit__home__qi__detail__unused_skipper" { header "spirit/home/qi/detail/unused_skipper.hpp" export * }
    module "spirit__home__qi__directive__as" { header "spirit/home/qi/directive/as.hpp" export * }
    module "spirit__home__qi__directive__encoding" { header "spirit/home/qi/directive/encoding.hpp" export * }
    module "spirit__home__qi__directive__hold" { header "spirit/home/qi/directive/hold.hpp" export * }
    module "spirit__home__qi__directive" { header "spirit/home/qi/directive.hpp" export * }
    module "spirit__home__qi__directive__lexeme" { header "spirit/home/qi/directive/lexeme.hpp" export * }
    module "spirit__home__qi__directive__matches" { header "spirit/home/qi/directive/matches.hpp" export * }
    module "spirit__home__qi__directive__no_case" { header "spirit/home/qi/directive/no_case.hpp" export * }
    module "spirit__home__qi__directive__no_skip" { header "spirit/home/qi/directive/no_skip.hpp" export * }
    module "spirit__home__qi__directive__omit" { header "spirit/home/qi/directive/omit.hpp" export * }
    module "spirit__home__qi__directive__raw" { header "spirit/home/qi/directive/raw.hpp" export * }
    module "spirit__home__qi__directive__repeat" { header "spirit/home/qi/directive/repeat.hpp" export * }
    module "spirit__home__qi__directive__skip" { header "spirit/home/qi/directive/skip.hpp" export * }
    module "spirit__home__qi__domain" { header "spirit/home/qi/domain.hpp" export * }
    module "spirit__home__qi" { header "spirit/home/qi.hpp" export * }
    module "spirit__home__qi__match_auto" { header "spirit/home/qi/match_auto.hpp" export * }
    module "spirit__home__qi__match" { header "spirit/home/qi/match.hpp" export * }
    module "spirit__home__qi__meta_compiler" { header "spirit/home/qi/meta_compiler.hpp" export * }
    module "spirit__home__qi__nonterminal__debug_handler" { header "spirit/home/qi/nonterminal/debug_handler.hpp" export * }
    module "spirit__home__qi__nonterminal__debug_handler_state" { header "spirit/home/qi/nonterminal/debug_handler_state.hpp" export * }
    module "spirit__home__qi__nonterminal__detail__parameterized" { header "spirit/home/qi/nonterminal/detail/parameterized.hpp" export * }
    module "spirit__home__qi__nonterminal__error_handler" { header "spirit/home/qi/nonterminal/error_handler.hpp" export * }
    module "spirit__home__qi__nonterminal__grammar" { header "spirit/home/qi/nonterminal/grammar.hpp" export * }
    module "spirit__home__qi__nonterminal" { header "spirit/home/qi/nonterminal.hpp" export * }
    module "spirit__home__qi__nonterminal__nonterminal_fwd" { header "spirit/home/qi/nonterminal/nonterminal_fwd.hpp" export * }
    module "spirit__home__qi__nonterminal__rule" { header "spirit/home/qi/nonterminal/rule.hpp" export * }
    module "spirit__home__qi__nonterminal__success_handler" { header "spirit/home/qi/nonterminal/success_handler.hpp" export * }
    module "spirit__home__qi__numeric__bool" { header "spirit/home/qi/numeric/bool.hpp" export * }
    module "spirit__home__qi__numeric__bool_policies" { header "spirit/home/qi/numeric/bool_policies.hpp" export * }
    module "spirit__home__qi__numeric__detail__numeric_utils" { header "spirit/home/qi/numeric/detail/numeric_utils.hpp" export * }
    module "spirit__home__qi__numeric__detail__real_impl" { header "spirit/home/qi/numeric/detail/real_impl.hpp" export * }
    module "spirit__home__qi__numeric" { header "spirit/home/qi/numeric.hpp" export * }
    module "spirit__home__qi__numeric__int" { header "spirit/home/qi/numeric/int.hpp" export * }
    module "spirit__home__qi__numeric__numeric_utils" { header "spirit/home/qi/numeric/numeric_utils.hpp" export * }
    module "spirit__home__qi__numeric__real" { header "spirit/home/qi/numeric/real.hpp" export * }
    module "spirit__home__qi__numeric__real_policies" { header "spirit/home/qi/numeric/real_policies.hpp" export * }
    module "spirit__home__qi__numeric__uint" { header "spirit/home/qi/numeric/uint.hpp" export * }
    module "spirit__home__qi__operator__alternative" { header "spirit/home/qi/operator/alternative.hpp" export * }
    module "spirit__home__qi__operator__and_predicate" { header "spirit/home/qi/operator/and_predicate.hpp" export * }
    module "spirit__home__qi__operator__difference" { header "spirit/home/qi/operator/difference.hpp" export * }
    module "spirit__home__qi__operator__expect" { header "spirit/home/qi/operator/expect.hpp" export * }
    module "spirit__home__qi__operator" { header "spirit/home/qi/operator.hpp" export * }
    module "spirit__home__qi__operator__kleene" { header "spirit/home/qi/operator/kleene.hpp" export * }
    module "spirit__home__qi__operator__list" { header "spirit/home/qi/operator/list.hpp" export * }
    module "spirit__home__qi__operator__not_predicate" { header "spirit/home/qi/operator/not_predicate.hpp" export * }
    module "spirit__home__qi__operator__optional" { header "spirit/home/qi/operator/optional.hpp" export * }
    module "spirit__home__qi__operator__permutation" { header "spirit/home/qi/operator/permutation.hpp" export * }
    module "spirit__home__qi__operator__plus" { header "spirit/home/qi/operator/plus.hpp" export * }
    module "spirit__home__qi__operator__sequence_base" { header "spirit/home/qi/operator/sequence_base.hpp" export * }
    module "spirit__home__qi__operator__sequence" { header "spirit/home/qi/operator/sequence.hpp" export * }
    module "spirit__home__qi__operator__sequential_or" { header "spirit/home/qi/operator/sequential_or.hpp" export * }
    module "spirit__home__qi__parse_attr" { header "spirit/home/qi/parse_attr.hpp" export * }
    module "spirit__home__qi__parse" { header "spirit/home/qi/parse.hpp" export * }
    module "spirit__home__qi__parser" { header "spirit/home/qi/parser.hpp" export * }
    module "spirit__home__qi__reference" { header "spirit/home/qi/reference.hpp" export * }
    module "spirit__home__qi__skip_flag" { header "spirit/home/qi/skip_flag.hpp" export * }
    module "spirit__home__qi__skip_over" { header "spirit/home/qi/skip_over.hpp" export * }
    module "spirit__home__qi__stream__detail__match_manip_auto" { header "spirit/home/qi/stream/detail/match_manip_auto.hpp" export * }
    module "spirit__home__qi__stream__detail__match_manip" { header "spirit/home/qi/stream/detail/match_manip.hpp" export * }
    module "spirit__home__qi__stream" { header "spirit/home/qi/stream.hpp" export * }
    module "spirit__home__qi__stream__match_manip_attr" { header "spirit/home/qi/stream/match_manip_attr.hpp" export * }
    module "spirit__home__qi__stream__match_manip" { header "spirit/home/qi/stream/match_manip.hpp" export * }
    module "spirit__home__qi__stream__stream" { header "spirit/home/qi/stream/stream.hpp" export * }
    module "spirit__home__qi__string__detail__tst" { header "spirit/home/qi/string/detail/tst.hpp" export * }
    module "spirit__home__qi__string" { header "spirit/home/qi/string.hpp" export * }
    module "spirit__home__qi__string__lit" { header "spirit/home/qi/string/lit.hpp" export * }
    module "spirit__home__qi__string__symbols" { header "spirit/home/qi/string/symbols.hpp" export * }
    module "spirit__home__qi__string__tst" { header "spirit/home/qi/string/tst.hpp" export * }
    module "spirit__home__qi__string__tst_map" { header "spirit/home/qi/string/tst_map.hpp" export * }
    module "spirit__home__qi__what" { header "spirit/home/qi/what.hpp" export * }
    module "spirit__home__support__action_dispatch" { header "spirit/home/support/action_dispatch.hpp" export * }
    module "spirit__home__support__adapt_adt_attributes" { header "spirit/home/support/adapt_adt_attributes.hpp" export * }
    module "spirit__home__support__algorithm__any" { header "spirit/home/support/algorithm/any.hpp" export * }
    module "spirit__home__support__algorithm__any_if" { header "spirit/home/support/algorithm/any_if.hpp" export * }
    module "spirit__home__support__algorithm__any_if_ns" { header "spirit/home/support/algorithm/any_if_ns.hpp" export * }
    module "spirit__home__support__algorithm__any_ns" { header "spirit/home/support/algorithm/any_ns.hpp" export * }
    module "spirit__home__support__argument_expression" { header "spirit/home/support/argument_expression.hpp" export * }
    module "spirit__home__support__argument" { header "spirit/home/support/argument.hpp" export * }
    module "spirit__home__support__assert_msg" { header "spirit/home/support/assert_msg.hpp" export * }
    module "spirit__home__support__attributes_fwd" { header "spirit/home/support/attributes_fwd.hpp" export * }
    module "spirit__home__support__attributes" { header "spirit/home/support/attributes.hpp" export * }
    module "spirit__home__support__auto" { header "spirit/home/support/auto.hpp" export * }
    module "spirit__home__support__auto__meta_create" { header "spirit/home/support/auto/meta_create.hpp" export * }
    module "spirit__home__support__auxiliary__attr_cast" { header "spirit/home/support/auxiliary/attr_cast.hpp" export * }
    module "spirit__home__support__char_class" { header "spirit/home/support/char_class.hpp" export * }
    module "spirit__home__support__char_encoding__ascii" { header "spirit/home/support/char_encoding/ascii.hpp" export * }
    module "spirit__home__support__char_encoding__iso8859_1" { header "spirit/home/support/char_encoding/iso8859_1.hpp" export * }
    module "spirit__home__support__char_encoding__standard" { header "spirit/home/support/char_encoding/standard.hpp" export * }
    module "spirit__home__support__char_encoding__standard_wide" { header "spirit/home/support/char_encoding/standard_wide.hpp" export * }
    module "spirit__home__support__char_encoding__unicode" { header "spirit/home/support/char_encoding/unicode.hpp" export * }
    module "spirit__home__support__char_encoding__unicode__query" { header "spirit/home/support/char_encoding/unicode/query.hpp" export * }
    module "spirit__home__support__char_set__basic_chset" { header "spirit/home/support/char_set/basic_chset.hpp" export * }
    module "spirit__home__support__char_set__range_functions" { header "spirit/home/support/char_set/range_functions.hpp" export * }
    module "spirit__home__support__char_set__range" { header "spirit/home/support/char_set/range.hpp" export * }
    module "spirit__home__support__char_set__range_run" { header "spirit/home/support/char_set/range_run.hpp" export * }
    module "spirit__home__support__common_terminals" { header "spirit/home/support/common_terminals.hpp" export * }
    module "spirit__home__support__container" { header "spirit/home/support/container.hpp" export * }
    module "spirit__home__support__context" { header "spirit/home/support/context.hpp" export * }
    // Breaks compilation:
    /*
    In file included from <module-includes>:972:
In file included from /home/teemperor/boost-compile/inc/boost/spirit/home/karma/action/action.hpp:13:
In file included from /home/teemperor/boost-compile/inc/boost/spirit/home/karma/detail/attributes.hpp:12:
In file included from /home/teemperor/boost-compile/inc/boost/spirit/home/support/attributes.hpp:20:
In file included from /home/teemperor/boost-compile/inc/boost/spirit/home/support/detail/as_variant.hpp:67:
/home/teemperor/boost-compile/inc/boost/preprocessor/iteration/detail/iter/forward1.hpp:52:1: error: redundant #include of module
      'boost_modules_wrapper.boost_spirit.spirit__home__support__detail__as_variant' appears within namespace 'boost::spirit::detail' [-Wmodules-import-nested-redundant]
#        include BOOST_PP_FILENAME_1
^
/home/teemperor/boost-compile/inc/boost/spirit/home/support/detail/as_variant.hpp:29:38: note: namespace 'boost::spirit::detail' begins here
namespace boost { namespace spirit { namespace detail
                                     ^
*/
    //module "spirit__home__support__detail__as_variant" { header "spirit/home/support/detail/as_variant.hpp" export * }
    module "spirit__home__support__detail__endian" { header "spirit/home/support/detail/endian.hpp" export * }
    module "spirit__home__support__detail__hold_any" { header "spirit/home/support/detail/hold_any.hpp" export * }
    module "spirit__home__support__detail__is_spirit_tag" { header "spirit/home/support/detail/is_spirit_tag.hpp" export * }
    module "spirit__home__support__detail__lexer__char_traits" { header "spirit/home/support/detail/lexer/char_traits.hpp" export * }
    module "spirit__home__support__detail__lexer__consts" { header "spirit/home/support/detail/lexer/consts.hpp" export * }
    module "spirit__home__support__detail__lexer__containers__ptr_list" { header "spirit/home/support/detail/lexer/containers/ptr_list.hpp" export * }
    module "spirit__home__support__detail__lexer__containers__ptr_vector" { header "spirit/home/support/detail/lexer/containers/ptr_vector.hpp" export * }
    module "spirit__home__support__detail__lexer__debug" { header "spirit/home/support/detail/lexer/debug.hpp" export * }
    module "spirit__home__support__detail__lexer__file_input" { header "spirit/home/support/detail/lexer/file_input.hpp" export * }
    module "spirit__home__support__detail__lexer__generate_cpp" { header "spirit/home/support/detail/lexer/generate_cpp.hpp" export * }
    module "spirit__home__support__detail__lexer__generate_re2c" { header "spirit/home/support/detail/lexer/generate_re2c.hpp" export * }
    module "spirit__home__support__detail__lexer__input" { header "spirit/home/support/detail/lexer/input.hpp" export * }
    module "spirit__home__support__detail__lexer__internals" { header "spirit/home/support/detail/lexer/internals.hpp" export * }
    module "spirit__home__support__detail__lexer__parser__parser" { header "spirit/home/support/detail/lexer/parser/parser.hpp" export * }
    module "spirit__home__support__detail__lexer__parser__tokeniser__num_token" { header "spirit/home/support/detail/lexer/parser/tokeniser/num_token.hpp" export * }
    module "spirit__home__support__detail__lexer__parser__tokeniser__re_tokeniser" { header "spirit/home/support/detail/lexer/parser/tokeniser/re_tokeniser.hpp" export * }
    module "spirit__home__support__detail__lexer__parser__tokeniser__re_tokeniser_state" { header "spirit/home/support/detail/lexer/parser/tokeniser/re_tokeniser_state.hpp" export * }
    module "spirit__home__support__detail__lexer__parser__tree__end_node" { header "spirit/home/support/detail/lexer/parser/tree/end_node.hpp" export * }
    module "spirit__home__support__detail__lexer__parser__tree__iteration_node" { header "spirit/home/support/detail/lexer/parser/tree/iteration_node.hpp" export * }
    module "spirit__home__support__detail__lexer__parser__tree__leaf_node" { header "spirit/home/support/detail/lexer/parser/tree/leaf_node.hpp" export * }
    module "spirit__home__support__detail__lexer__parser__tree__node" { header "spirit/home/support/detail/lexer/parser/tree/node.hpp" export * }
    module "spirit__home__support__detail__lexer__parser__tree__selection_node" { header "spirit/home/support/detail/lexer/parser/tree/selection_node.hpp" export * }
    module "spirit__home__support__detail__lexer__parser__tree__sequence_node" { header "spirit/home/support/detail/lexer/parser/tree/sequence_node.hpp" export * }
    module "spirit__home__support__detail__lexer__partition__equivset" { header "spirit/home/support/detail/lexer/partition/equivset.hpp" export * }
    module "spirit__home__support__detail__lexer__rules" { header "spirit/home/support/detail/lexer/rules.hpp" export * }
    module "spirit__home__support__detail__lexer__runtime_error" { header "spirit/home/support/detail/lexer/runtime_error.hpp" export * }
    module "spirit__home__support__detail__lexer__size_t" { header "spirit/home/support/detail/lexer/size_t.hpp" export * }
    module "spirit__home__support__detail__make_cons" { header "spirit/home/support/detail/make_cons.hpp" export * }
    module "spirit__home__support__detail__make_vector" { header "spirit/home/support/detail/make_vector.hpp" export * }
/*
 * While building module 'boost_modules_wrapper' imported from /home/teemperor/llvm/boost-compile/cms.cpp:2:
In file included from <module-includes>:1023:
In file included from /home/teemperor/llvm/boost-compile/inc-cms/boost/spirit/home/karma.hpp:15:
In file included from /home/teemperor/llvm/boost-compile/inc-cms/boost/spirit/home/karma/numeric.hpp:13:
In file included from /home/teemperor/llvm/boost-compile/inc-cms/boost/spirit/home/karma/numeric/bool.hpp:29:
In file included from /home/teemperor/llvm/boost-compile/inc-cms/boost/spirit/home/karma/numeric/bool_policies.hpp:16:
In file included from /home/teemperor/llvm/boost-compile/inc-cms/boost/spirit/home/karma/numeric/detail/numeric_utils.hpp:21:
/home/teemperor/llvm/boost-compile/inc-cms/boost/spirit/home/support/detail/pow10.hpp:88:13: error: use of undeclared identifier 'BOOST_ASSERT'
            BOOST_ASSERT(dim < sizeof(exponents)/sizeof(double));
            ^
            */
    //module "spirit__home__support__detail__pow10" { header "spirit/home/support/detail/pow10.hpp" export * }
    module "spirit__home__support__detail__scoped_enum_emulation" { header "spirit/home/support/detail/scoped_enum_emulation.hpp" export * }
    module "spirit__home__support__detail__sign" { header "spirit/home/support/detail/sign.hpp" export * }
    module "spirit__home__support__extended_variant" { header "spirit/home/support/extended_variant.hpp" export * }
    module "spirit__home__support__handles_container" { header "spirit/home/support/handles_container.hpp" export * }
    module "spirit__home__support__has_semantic_action" { header "spirit/home/support/has_semantic_action.hpp" export * }
    module "spirit__home__support" { header "spirit/home/support.hpp" export * }
    module "spirit__home__support__info" { header "spirit/home/support/info.hpp" export * }
    module "spirit__home__support__iterators__detail__buffering_input_iterator_policy" { header "spirit/home/support/iterators/detail/buffering_input_iterator_policy.hpp" export * }
    module "spirit__home__support__iterators__detail__buf_id_check_policy" { header "spirit/home/support/iterators/detail/buf_id_check_policy.hpp" export * }
    module "spirit__home__support__iterators__detail__combine_policies" { header "spirit/home/support/iterators/detail/combine_policies.hpp" export * }
    module "spirit__home__support__iterators__detail__first_owner_policy" { header "spirit/home/support/iterators/detail/first_owner_policy.hpp" export * }
    module "spirit__home__support__iterators__detail__fixed_size_queue" { header "spirit/home/support/iterators/detail/fixed_size_queue.hpp" export * }
    module "spirit__home__support__iterators__detail__fixed_size_queue_policy" { header "spirit/home/support/iterators/detail/fixed_size_queue_policy.hpp" export * }
    module "spirit__home__support__iterators__detail__functor_input_policy" { header "spirit/home/support/iterators/detail/functor_input_policy.hpp" export * }
    module "spirit__home__support__iterators__detail__input_iterator_policy" { header "spirit/home/support/iterators/detail/input_iterator_policy.hpp" export * }
    module "spirit__home__support__iterators__detail__istream_policy" { header "spirit/home/support/iterators/detail/istream_policy.hpp" export * }
    module "spirit__home__support__iterators__detail__lex_input_policy" { header "spirit/home/support/iterators/detail/lex_input_policy.hpp" export * }
    module "spirit__home__support__iterators__detail__multi_pass" { header "spirit/home/support/iterators/detail/multi_pass.hpp" export * }
    module "spirit__home__support__iterators__detail__no_check_policy" { header "spirit/home/support/iterators/detail/no_check_policy.hpp" export * }
    module "spirit__home__support__iterators__detail__ref_counted_policy" { header "spirit/home/support/iterators/detail/ref_counted_policy.hpp" export * }
    module "spirit__home__support__iterators__detail__split_functor_input_policy" { header "spirit/home/support/iterators/detail/split_functor_input_policy.hpp" export * }
    module "spirit__home__support__iterators__detail__split_std_deque_policy" { header "spirit/home/support/iterators/detail/split_std_deque_policy.hpp" export * }
    module "spirit__home__support__iterators__istream_iterator" { header "spirit/home/support/iterators/istream_iterator.hpp" export * }
    module "spirit__home__support__iterators__line_pos_iterator" { header "spirit/home/support/iterators/line_pos_iterator.hpp" export * }
    module "spirit__home__support__iterators__look_ahead" { header "spirit/home/support/iterators/look_ahead.hpp" export * }
    module "spirit__home__support__iterators__multi_pass_fwd" { header "spirit/home/support/iterators/multi_pass_fwd.hpp" export * }
    module "spirit__home__support__iterators__multi_pass" { header "spirit/home/support/iterators/multi_pass.hpp" export * }
    module "spirit__home__support__iterators__ostream_iterator" { header "spirit/home/support/iterators/ostream_iterator.hpp" export * }
    module "spirit__home__support__lazy" { header "spirit/home/support/lazy.hpp" export * }
    module "spirit__home__support__limits" { header "spirit/home/support/limits.hpp" export * }
    module "spirit__home__support__make_component" { header "spirit/home/support/make_component.hpp" export * }
    module "spirit__home__support__meta_compiler" { header "spirit/home/support/meta_compiler.hpp" export * }
    module "spirit__home__support__modify" { header "spirit/home/support/modify.hpp" export * }
    module "spirit__home__support__multi_pass" { header "spirit/home/support/multi_pass.hpp" export * }
    module "spirit__home__support__multi_pass_wrapper" { header "spirit/home/support/multi_pass_wrapper.hpp" export * }
    module "spirit__home__support__nonterminal__expand_arg" { header "spirit/home/support/nonterminal/expand_arg.hpp" export * }
    module "spirit__home__support__nonterminal__extract_param" { header "spirit/home/support/nonterminal/extract_param.hpp" export * }
    module "spirit__home__support__nonterminal__locals" { header "spirit/home/support/nonterminal/locals.hpp" export * }
    module "spirit__home__support__numeric_traits" { header "spirit/home/support/numeric_traits.hpp" export * }
    module "spirit__home__support__sequence_base_id" { header "spirit/home/support/sequence_base_id.hpp" export * }
    module "spirit__home__support__string_traits" { header "spirit/home/support/string_traits.hpp" export * }
    module "spirit__home__support__terminal_expression" { header "spirit/home/support/terminal_expression.hpp" export * }
    module "spirit__home__support__terminal" { header "spirit/home/support/terminal.hpp" export * }
    module "spirit__home__support__unused" { header "spirit/home/support/unused.hpp" export * }
    module "spirit__home__support__utf8" { header "spirit/home/support/utf8.hpp" export * }
    module "spirit__home__support__utree" { header "spirit/home/support/utree.hpp" export * }
    module "spirit__home__support__utree__utree_traits_fwd" { header "spirit/home/support/utree/utree_traits_fwd.hpp" export * }
    module "spirit__home__support__utree__utree_traits" { header "spirit/home/support/utree/utree_traits.hpp" export * }
    module "spirit__home__x3__auxiliary__any_parser" { header "spirit/home/x3/auxiliary/any_parser.hpp" export * }
    module "spirit__home__x3__auxiliary__attr" { header "spirit/home/x3/auxiliary/attr.hpp" export * }
    module "spirit__home__x3__auxiliary__eoi" { header "spirit/home/x3/auxiliary/eoi.hpp" export * }
    module "spirit__home__x3__auxiliary__eol" { header "spirit/home/x3/auxiliary/eol.hpp" export * }
    module "spirit__home__x3__auxiliary__eps" { header "spirit/home/x3/auxiliary/eps.hpp" export * }
    module "spirit__home__x3__auxiliary" { header "spirit/home/x3/auxiliary.hpp" export * }
    module "spirit__home__x3__binary__binary" { header "spirit/home/x3/binary/binary.hpp" export * }
    module "spirit__home__x3__binary" { header "spirit/home/x3/binary.hpp" export * }
    module "spirit__home__x3__char__any_char" { header "spirit/home/x3/char/any_char.hpp" export * }
    module "spirit__home__x3__char__char_class" { header "spirit/home/x3/char/char_class.hpp" export * }
    module "spirit__home__x3__char__char_class_tags" { header "spirit/home/x3/char/char_class_tags.hpp" export * }
    module "spirit__home__x3__char__char" { header "spirit/home/x3/char/char.hpp" export * }
    module "spirit__home__x3__char__char_parser" { header "spirit/home/x3/char/char_parser.hpp" export * }
    module "spirit__home__x3__char__char_set" { header "spirit/home/x3/char/char_set.hpp" export * }
    module "spirit__home__x3__char__detail__cast_char" { header "spirit/home/x3/char/detail/cast_char.hpp" export * }
    module "spirit__home__x3__char" { header "spirit/home/x3/char.hpp" export * }
    module "spirit__home__x3__char__literal_char" { header "spirit/home/x3/char/literal_char.hpp" export * }
    module "spirit__home__x3__char__negated_char_parser" { header "spirit/home/x3/char/negated_char_parser.hpp" export * }
    module "spirit__home__x3__char__unicode" { header "spirit/home/x3/char/unicode.hpp" export * }
    module "spirit__home__x3__core__call" { header "spirit/home/x3/core/call.hpp" export * }
    module "spirit__home__x3__core" { header "spirit/home/x3/core.hpp" export * }
    module "spirit__home__x3__core__parse" { header "spirit/home/x3/core/parse.hpp" export * }
    module "spirit__home__x3__core__parser" { header "spirit/home/x3/core/parser.hpp" export * }
    module "spirit__home__x3__core__skip_over" { header "spirit/home/x3/core/skip_over.hpp" export * }
    module "spirit__home__x3__directive__confix" { header "spirit/home/x3/directive/confix.hpp" export * }
    module "spirit__home__x3__directive__lexeme" { header "spirit/home/x3/directive/lexeme.hpp" export * }
    module "spirit__home__x3__directive__matches" { header "spirit/home/x3/directive/matches.hpp" export * }
    module "spirit__home__x3__directive__no_case" { header "spirit/home/x3/directive/no_case.hpp" export * }
    module "spirit__home__x3__directive__no_skip" { header "spirit/home/x3/directive/no_skip.hpp" export * }
    module "spirit__home__x3__directive__omit" { header "spirit/home/x3/directive/omit.hpp" export * }
    module "spirit__home__x3__directive__raw" { header "spirit/home/x3/directive/raw.hpp" export * }
    module "spirit__home__x3__directive__seek" { header "spirit/home/x3/directive/seek.hpp" export * }
    module "spirit__home__x3__directive__skip" { header "spirit/home/x3/directive/skip.hpp" export * }
    module "spirit__home__x3__directive__with" { header "spirit/home/x3/directive/with.hpp" export * }
    module "spirit__home__x3" { header "spirit/home/x3.hpp" export * }
    module "spirit__home__x3__nonterminal__debug_handler_state" { header "spirit/home/x3/nonterminal/debug_handler_state.hpp" export * }
    module "spirit__home__x3__nonterminal__detail__transform_attribute" { header "spirit/home/x3/nonterminal/detail/transform_attribute.hpp" export * }
    module "spirit__home__x3__nonterminal__simple_trace" { header "spirit/home/x3/nonterminal/simple_trace.hpp" export * }
    module "spirit__home__x3__numeric__bool_policies" { header "spirit/home/x3/numeric/bool_policies.hpp" export * }
    module "spirit__home__x3__numeric__int" { header "spirit/home/x3/numeric/int.hpp" export * }
    module "spirit__home__x3__numeric__real" { header "spirit/home/x3/numeric/real.hpp" export * }
    module "spirit__home__x3__numeric__real_policies" { header "spirit/home/x3/numeric/real_policies.hpp" export * }
    module "spirit__home__x3__numeric__uint" { header "spirit/home/x3/numeric/uint.hpp" export * }
    module "spirit__home__x3__operator__alternative" { header "spirit/home/x3/operator/alternative.hpp" export * }
    module "spirit__home__x3__operator__and_predicate" { header "spirit/home/x3/operator/and_predicate.hpp" export * }
    module "spirit__home__x3__operator__detail__alternative" { header "spirit/home/x3/operator/detail/alternative.hpp" export * }
    module "spirit__home__x3__operator__difference" { header "spirit/home/x3/operator/difference.hpp" export * }
    module "spirit__home__x3__operator__not_predicate" { header "spirit/home/x3/operator/not_predicate.hpp" export * }
    module "spirit__home__x3__string__detail__no_case_string_parse" { header "spirit/home/x3/string/detail/no_case_string_parse.hpp" export * }
    module "spirit__home__x3__string__detail__string_parse" { header "spirit/home/x3/string/detail/string_parse.hpp" export * }
    module "spirit__home__x3__string__detail__tst" { header "spirit/home/x3/string/detail/tst.hpp" export * }
    module "spirit__home__x3__string" { header "spirit/home/x3/string.hpp" export * }
    module "spirit__home__x3__string__literal_string" { header "spirit/home/x3/string/literal_string.hpp" export * }
    module "spirit__home__x3__string__symbols" { header "spirit/home/x3/string/symbols.hpp" export * }
    module "spirit__home__x3__string__tst" { header "spirit/home/x3/string/tst.hpp" export * }
    module "spirit__home__x3__support__ast__position_tagged" { header "spirit/home/x3/support/ast/position_tagged.hpp" export * }
    module "spirit__home__x3__support__ast__variant" { header "spirit/home/x3/support/ast/variant.hpp" export * }
    module "spirit__home__x3__support__context" { header "spirit/home/x3/support/context.hpp" export * }
    module "spirit__home__x3__support__no_case" { header "spirit/home/x3/support/no_case.hpp" export * }
    module "spirit__home__x3__support__numeric_utils__detail__extract_int" { header "spirit/home/x3/support/numeric_utils/detail/extract_int.hpp" export * }
    module "spirit__home__x3__support__numeric_utils__extract_int" { header "spirit/home/x3/support/numeric_utils/extract_int.hpp" export * }
    module "spirit__home__x3__support__numeric_utils__extract_real" { header "spirit/home/x3/support/numeric_utils/extract_real.hpp" export * }
    module "spirit__home__x3__support__numeric_utils__pow10" { header "spirit/home/x3/support/numeric_utils/pow10.hpp" export * }
    module "spirit__home__x3__support__numeric_utils__sign" { header "spirit/home/x3/support/numeric_utils/sign.hpp" export * }
    module "spirit__home__x3__support__subcontext" { header "spirit/home/x3/support/subcontext.hpp" export * }
    module "spirit__home__x3__support__traits__attribute_category" { header "spirit/home/x3/support/traits/attribute_category.hpp" export * }
    module "spirit__home__x3__support__traits__attribute_of" { header "spirit/home/x3/support/traits/attribute_of.hpp" export * }
    module "spirit__home__x3__support__traits__attribute_type" { header "spirit/home/x3/support/traits/attribute_type.hpp" export * }
    module "spirit__home__x3__support__traits__container_traits" { header "spirit/home/x3/support/traits/container_traits.hpp" export * }
    module "spirit__home__x3__support__traits__handles_container" { header "spirit/home/x3/support/traits/handles_container.hpp" export * }
    module "spirit__home__x3__support__traits__has_attribute" { header "spirit/home/x3/support/traits/has_attribute.hpp" export * }
    module "spirit__home__x3__support__traits__is_parser" { header "spirit/home/x3/support/traits/is_parser.hpp" export * }
    module "spirit__home__x3__support__traits__is_variant" { header "spirit/home/x3/support/traits/is_variant.hpp" export * }
    module "spirit__home__x3__support__traits__move_to" { header "spirit/home/x3/support/traits/move_to.hpp" export * }
    module "spirit__home__x3__support__traits__numeric_traits" { header "spirit/home/x3/support/traits/numeric_traits.hpp" export * }
    module "spirit__home__x3__support__traits__optional_traits" { header "spirit/home/x3/support/traits/optional_traits.hpp" export * }
    module "spirit__home__x3__support__traits__print_attribute" { header "spirit/home/x3/support/traits/print_attribute.hpp" export * }
    module "spirit__home__x3__support__traits__string_traits" { header "spirit/home/x3/support/traits/string_traits.hpp" export * }
    module "spirit__home__x3__support__traits__transform_attribute" { header "spirit/home/x3/support/traits/transform_attribute.hpp" export * }
    module "spirit__home__x3__support__traits__tuple_traits" { header "spirit/home/x3/support/traits/tuple_traits.hpp" export * }
    module "spirit__home__x3__support__unused" { header "spirit/home/x3/support/unused.hpp" export * }
    module "spirit__home__x3__support__utility__lambda_visitor" { header "spirit/home/x3/support/utility/lambda_visitor.hpp" export * }
    module "spirit__home__x3__support__utility__sfinae" { header "spirit/home/x3/support/utility/sfinae.hpp" export * }
    module "spirit__home__x3__support__utility__utf8" { header "spirit/home/x3/support/utility/utf8.hpp" export * }
    module "spirit__home__x3__version" { header "spirit/home/x3/version.hpp" export * }
    module "spirit__include__classic_actions" { header "spirit/include/classic_actions.hpp" export * }
    module "spirit__include__classic_actor" { header "spirit/include/classic_actor.hpp" export * }
    module "spirit__include__classic_alternative" { header "spirit/include/classic_alternative.hpp" export * }
    module "spirit__include__classic_as_parser" { header "spirit/include/classic_as_parser.hpp" export * }
    module "spirit__include__classic_assert" { header "spirit/include/classic_assert.hpp" export * }
    module "spirit__include__classic_assign_actor" { header "spirit/include/classic_assign_actor.hpp" export * }
    module "spirit__include__classic_assign_key_actor" { header "spirit/include/classic_assign_key_actor.hpp" export * }
    module "spirit__include__classic_ast" { header "spirit/include/classic_ast.hpp" export * }
    module "spirit__include__classic_attribute" { header "spirit/include/classic_attribute.hpp" export * }
    module "spirit__include__classic_basic_chset" { header "spirit/include/classic_basic_chset.hpp" export * }
    module "spirit__include__classic_chset" { header "spirit/include/classic_chset.hpp" export * }
    module "spirit__include__classic_chset_operators" { header "spirit/include/classic_chset_operators.hpp" export * }
    module "spirit__include__classic_clear_actor" { header "spirit/include/classic_clear_actor.hpp" export * }
    module "spirit__include__classic_closure_context" { header "spirit/include/classic_closure_context.hpp" export * }
    module "spirit__include__classic_closure_fwd" { header "spirit/include/classic_closure_fwd.hpp" export * }
    module "spirit__include__classic_closure" { header "spirit/include/classic_closure.hpp" export * }
    module "spirit__include__classic_common_fwd" { header "spirit/include/classic_common_fwd.hpp" export * }
    module "spirit__include__classic_common" { header "spirit/include/classic_common.hpp" export * }
    module "spirit__include__classic_composite" { header "spirit/include/classic_composite.hpp" export * }
    module "spirit__include__classic_config" { header "spirit/include/classic_config.hpp" export * }
    module "spirit__include__classic_confix_fwd" { header "spirit/include/classic_confix_fwd.hpp" export * }
    module "spirit__include__classic_confix" { header "spirit/include/classic_confix.hpp" export * }
    module "spirit__include__classic_core" { header "spirit/include/classic_core.hpp" export * }
    module "spirit__include__classic_debug" { header "spirit/include/classic_debug.hpp" export * }
    module "spirit__include__classic_decrement_actor" { header "spirit/include/classic_decrement_actor.hpp" export * }
    module "spirit__include__classic_difference" { header "spirit/include/classic_difference.hpp" export * }
    module "spirit__include__classic_directives" { header "spirit/include/classic_directives.hpp" export * }
    module "spirit__include__classic_distinct" { header "spirit/include/classic_distinct.hpp" export * }
    module "spirit__include__classic_dynamic" { header "spirit/include/classic_dynamic.hpp" export * }
    module "spirit__include__classic_epsilon" { header "spirit/include/classic_epsilon.hpp" export * }
    module "spirit__include__classic_erase_actor" { header "spirit/include/classic_erase_actor.hpp" export * }
    module "spirit__include__classic_error_handling" { header "spirit/include/classic_error_handling.hpp" export * }
    module "spirit__include__classic_escape_char_fwd" { header "spirit/include/classic_escape_char_fwd.hpp" export * }
    module "spirit__include__classic_escape_char" { header "spirit/include/classic_escape_char.hpp" export * }
    module "spirit__include__classic_exceptions_fwd" { header "spirit/include/classic_exceptions_fwd.hpp" export * }
    module "spirit__include__classic_exceptions" { header "spirit/include/classic_exceptions.hpp" export * }
    module "spirit__include__classic_exclusive_or" { header "spirit/include/classic_exclusive_or.hpp" export * }
    module "spirit__include__classic_file_iterator_fwd" { header "spirit/include/classic_file_iterator_fwd.hpp" export * }
    module "spirit__include__classic_file_iterator" { header "spirit/include/classic_file_iterator.hpp" export * }
    module "spirit__include__classic_fixed_size_queue" { header "spirit/include/classic_fixed_size_queue.hpp" export * }
    module "spirit__include__classic_flush_multi_pass" { header "spirit/include/classic_flush_multi_pass.hpp" export * }
    module "spirit__include__classic_for" { header "spirit/include/classic_for.hpp" export * }
    module "spirit__include__classic_functor_parser" { header "spirit/include/classic_functor_parser.hpp" export * }
    module "spirit__include__classic_grammar_def" { header "spirit/include/classic_grammar_def.hpp" export * }
    module "spirit__include__classic_grammar" { header "spirit/include/classic_grammar.hpp" export * }
    module "spirit__include__classic_if" { header "spirit/include/classic_if.hpp" export * }
    module "spirit__include__classic_increment_actor" { header "spirit/include/classic_increment_actor.hpp" export * }
    module "spirit__include__classic_insert_at_actor" { header "spirit/include/classic_insert_at_actor.hpp" export * }
    module "spirit__include__classic_insert_key_actor" { header "spirit/include/classic_insert_key_actor.hpp" export * }
    module "spirit__include__classic_intersection" { header "spirit/include/classic_intersection.hpp" export * }
    module "spirit__include__classic_iterator" { header "spirit/include/classic_iterator.hpp" export * }
    module "spirit__include__classic_kleene_star" { header "spirit/include/classic_kleene_star.hpp" export * }
    module "spirit__include__classic_lazy" { header "spirit/include/classic_lazy.hpp" export * }
    module "spirit__include__classic_lists_fwd" { header "spirit/include/classic_lists_fwd.hpp" export * }
    module "spirit__include__classic_match" { header "spirit/include/classic_match.hpp" export * }
    module "spirit__include__classic_multi_pass_fwd" { header "spirit/include/classic_multi_pass_fwd.hpp" export * }
    module "spirit__include__classic_multi_pass" { header "spirit/include/classic_multi_pass.hpp" export * }
    module "spirit__include__classic_nil" { header "spirit/include/classic_nil.hpp" export * }
    module "spirit__include__classic_no_actions" { header "spirit/include/classic_no_actions.hpp" export * }
    module "spirit__include__classic_numerics_fwd" { header "spirit/include/classic_numerics_fwd.hpp" export * }
    module "spirit__include__classic_numerics" { header "spirit/include/classic_numerics.hpp" export * }
    module "spirit__include__classic_operators" { header "spirit/include/classic_operators.hpp" export * }
    module "spirit__include__classic_optional" { header "spirit/include/classic_optional.hpp" export * }
    module "spirit__include__classic_parametric" { header "spirit/include/classic_parametric.hpp" export * }
    module "spirit__include__classic_parser" { header "spirit/include/classic_parser.hpp" export * }
    module "spirit__include__classic_parser_names" { header "spirit/include/classic_parser_names.hpp" export * }
    module "spirit__include__classic_parser_traits" { header "spirit/include/classic_parser_traits.hpp" export * }
    module "spirit__include__classic_parse_tree" { header "spirit/include/classic_parse_tree.hpp" export * }
    module "spirit__include__classic_parse_tree_utils" { header "spirit/include/classic_parse_tree_utils.hpp" export * }
    module "spirit__include__classic_position_iterator_fwd" { header "spirit/include/classic_position_iterator_fwd.hpp" export * }
    module "spirit__include__classic_position_iterator" { header "spirit/include/classic_position_iterator.hpp" export * }
    module "spirit__include__classic_positive" { header "spirit/include/classic_positive.hpp" export * }
    module "spirit__include__classic_primitives" { header "spirit/include/classic_primitives.hpp" export * }
    module "spirit__include__classic_push_back_actor" { header "spirit/include/classic_push_back_actor.hpp" export * }
    module "spirit__include__classic_push_front_actor" { header "spirit/include/classic_push_front_actor.hpp" export * }
    module "spirit__include__classic_range_run" { header "spirit/include/classic_range_run.hpp" export * }
    module "spirit__include__classic_ref_actor" { header "spirit/include/classic_ref_actor.hpp" export * }
    module "spirit__include__classic_refactoring" { header "spirit/include/classic_refactoring.hpp" export * }
    module "spirit__include__classic_ref_const_ref_actor" { header "spirit/include/classic_ref_const_ref_actor.hpp" export * }
    module "spirit__include__classic_ref_const_ref_const_ref_a" { header "spirit/include/classic_ref_const_ref_const_ref_a.hpp" export * }
    module "spirit__include__classic_ref_const_ref_value_actor" { header "spirit/include/classic_ref_const_ref_value_actor.hpp" export * }
    module "spirit__include__classic_ref_value_actor" { header "spirit/include/classic_ref_value_actor.hpp" export * }
    module "spirit__include__classic_regex" { header "spirit/include/classic_regex.hpp" export * }
    module "spirit__include__classic_rule_alias" { header "spirit/include/classic_rule_alias.hpp" export * }
    module "spirit__include__classic_rule" { header "spirit/include/classic_rule.hpp" export * }
    module "spirit__include__classic_rule_parser" { header "spirit/include/classic_rule_parser.hpp" export * }
    module "spirit__include__classic_safe_bool" { header "spirit/include/classic_safe_bool.hpp" export * }
    module "spirit__include__classic_scanner_fwd" { header "spirit/include/classic_scanner_fwd.hpp" export * }
    module "spirit__include__classic_scanner" { header "spirit/include/classic_scanner.hpp" export * }
    module "spirit__include__classic_select" { header "spirit/include/classic_select.hpp" export * }
    module "spirit__include__classic_sequence" { header "spirit/include/classic_sequence.hpp" export * }
    module "spirit__include__classic_sequential_or" { header "spirit/include/classic_sequential_or.hpp" export * }
    module "spirit__include__classic_skipper_fwd" { header "spirit/include/classic_skipper_fwd.hpp" export * }
    module "spirit__include__classic_static" { header "spirit/include/classic_static.hpp" export * }
    module "spirit__include__classic_stored_rule_fwd" { header "spirit/include/classic_stored_rule_fwd.hpp" export * }
    module "spirit__include__classic_stored_rule" { header "spirit/include/classic_stored_rule.hpp" export * }
    module "spirit__include__classic_subrule_fwd" { header "spirit/include/classic_subrule_fwd.hpp" export * }
    module "spirit__include__classic_subrule" { header "spirit/include/classic_subrule.hpp" export * }
    module "spirit__include__classic_swap_actor" { header "spirit/include/classic_swap_actor.hpp" export * }
    module "spirit__include__classic_switch" { header "spirit/include/classic_switch.hpp" export * }
    module "spirit__include__classic_symbols_fwd" { header "spirit/include/classic_symbols_fwd.hpp" export * }
    module "spirit__include__classic_symbols" { header "spirit/include/classic_symbols.hpp" export * }
    module "spirit__include__classic_typeof" { header "spirit/include/classic_typeof.hpp" export * }
    module "spirit__include__classic_version" { header "spirit/include/classic_version.hpp" export * }
    module "spirit__include__classic_while" { header "spirit/include/classic_while.hpp" export * }
    module "spirit__include__karma_action" { header "spirit/include/karma_action.hpp" export * }
    module "spirit__include__karma_alternative" { header "spirit/include/karma_alternative.hpp" export * }
    module "spirit__include__karma_and_predicate" { header "spirit/include/karma_and_predicate.hpp" export * }
    module "spirit__include__karma_attr_cast" { header "spirit/include/karma_attr_cast.hpp" export * }
    module "spirit__include__karma_auto" { header "spirit/include/karma_auto.hpp" export * }
    module "spirit__include__karma_auxiliary" { header "spirit/include/karma_auxiliary.hpp" export * }
    module "spirit__include__karma_binary" { header "spirit/include/karma_binary.hpp" export * }
    module "spirit__include__karma_bool" { header "spirit/include/karma_bool.hpp" export * }
    module "spirit__include__karma_buffer" { header "spirit/include/karma_buffer.hpp" export * }
    module "spirit__include__karma_center_alignment" { header "spirit/include/karma_center_alignment.hpp" export * }
    module "spirit__include__karma_char_class" { header "spirit/include/karma_char_class.hpp" export * }
    module "spirit__include__karma_char_" { header "spirit/include/karma_char_.hpp" export * }
    module "spirit__include__karma_char" { header "spirit/include/karma_char.hpp" export * }
    module "spirit__include__karma_columns" { header "spirit/include/karma_columns.hpp" export * }
    module "spirit__include__karma_delimit" { header "spirit/include/karma_delimit.hpp" export * }
    module "spirit__include__karma_directive" { header "spirit/include/karma_directive.hpp" export * }
    module "spirit__include__karma_domain" { header "spirit/include/karma_domain.hpp" export * }
    module "spirit__include__karma_duplicate" { header "spirit/include/karma_duplicate.hpp" export * }
    module "spirit__include__karma_eol" { header "spirit/include/karma_eol.hpp" export * }
    module "spirit__include__karma_eps" { header "spirit/include/karma_eps.hpp" export * }
    module "spirit__include__karma_format_attr" { header "spirit/include/karma_format_attr.hpp" export * }
    module "spirit__include__karma_format_auto" { header "spirit/include/karma_format_auto.hpp" export * }
    module "spirit__include__karma_format" { header "spirit/include/karma_format.hpp" export * }
    module "spirit__include__karma_generate_attr" { header "spirit/include/karma_generate_attr.hpp" export * }
    module "spirit__include__karma_generate_auto" { header "spirit/include/karma_generate_auto.hpp" export * }
    module "spirit__include__karma_generate" { header "spirit/include/karma_generate.hpp" export * }
    module "spirit__include__karma_grammar" { header "spirit/include/karma_grammar.hpp" export * }
    module "spirit__include__karma" { header "spirit/include/karma.hpp" export * }
    module "spirit__include__karma_int" { header "spirit/include/karma_int.hpp" export * }
    module "spirit__include__karma_kleene" { header "spirit/include/karma_kleene.hpp" export * }
    module "spirit__include__karma_lazy" { header "spirit/include/karma_lazy.hpp" export * }
    module "spirit__include__karma_left_alignment" { header "spirit/include/karma_left_alignment.hpp" export * }
    module "spirit__include__karma_list" { header "spirit/include/karma_list.hpp" export * }
    module "spirit__include__karma_maxwidth" { header "spirit/include/karma_maxwidth.hpp" export * }
    module "spirit__include__karma_no_delimit" { header "spirit/include/karma_no_delimit.hpp" export * }
    module "spirit__include__karma_nonterminal" { header "spirit/include/karma_nonterminal.hpp" export * }
    module "spirit__include__karma_not_predicate" { header "spirit/include/karma_not_predicate.hpp" export * }
    module "spirit__include__karma_numeric" { header "spirit/include/karma_numeric.hpp" export * }
    module "spirit__include__karma_operator" { header "spirit/include/karma_operator.hpp" export * }
    module "spirit__include__karma_optional" { header "spirit/include/karma_optional.hpp" export * }
    module "spirit__include__karma_phoenix_attributes" { header "spirit/include/karma_phoenix_attributes.hpp" export * }
    module "spirit__include__karma_plus" { header "spirit/include/karma_plus.hpp" export * }
    module "spirit__include__karma_real" { header "spirit/include/karma_real.hpp" export * }
    module "spirit__include__karma_repeat" { header "spirit/include/karma_repeat.hpp" export * }
    module "spirit__include__karma_right_alignment" { header "spirit/include/karma_right_alignment.hpp" export * }
    module "spirit__include__karma_rule" { header "spirit/include/karma_rule.hpp" export * }
    module "spirit__include__karma_sequence" { header "spirit/include/karma_sequence.hpp" export * }
    module "spirit__include__karma_stream" { header "spirit/include/karma_stream.hpp" export * }
    module "spirit__include__karma_strict_relaxed" { header "spirit/include/karma_strict_relaxed.hpp" export * }
    module "spirit__include__karma_string" { header "spirit/include/karma_string.hpp" export * }
    module "spirit__include__karma_symbols" { header "spirit/include/karma_symbols.hpp" export * }
    module "spirit__include__karma_uint" { header "spirit/include/karma_uint.hpp" export * }
    module "spirit__include__karma_upper_lower_case" { header "spirit/include/karma_upper_lower_case.hpp" export * }
    module "spirit__include__karma_verbatim" { header "spirit/include/karma_verbatim.hpp" export * }
    module "spirit__include__karma_what" { header "spirit/include/karma_what.hpp" export * }
    module "spirit__include__lex_char_token_def" { header "spirit/include/lex_char_token_def.hpp" export * }
    module "spirit__include__lex_domain" { header "spirit/include/lex_domain.hpp" export * }
    module "spirit__include__lex_generate_static_lexertl" { header "spirit/include/lex_generate_static_lexertl.hpp" export * }
    module "spirit__include__lex" { header "spirit/include/lex.hpp" export * }
    module "spirit__include__lex_lexer" { header "spirit/include/lex_lexer.hpp" export * }
    module "spirit__include__lex_plain_token" { header "spirit/include/lex_plain_token.hpp" export * }
    module "spirit__include__lex_primitives" { header "spirit/include/lex_primitives.hpp" export * }
    module "spirit__include__lex_tokenize_and_parse_attr" { header "spirit/include/lex_tokenize_and_parse_attr.hpp" export * }
    module "spirit__include__lex_tokenize_and_parse" { header "spirit/include/lex_tokenize_and_parse.hpp" export * }
    module "spirit__include__phoenix1_actor" { header "spirit/include/phoenix1_actor.hpp" export * }
    module "spirit__include__phoenix1_binders" { header "spirit/include/phoenix1_binders.hpp" export * }
    module "spirit__include__phoenix1_casts" { header "spirit/include/phoenix1_casts.hpp" export * }
    module "spirit__include__phoenix1_closures" { header "spirit/include/phoenix1_closures.hpp" export * }
    module "spirit__include__phoenix1_composite" { header "spirit/include/phoenix1_composite.hpp" export * }
    module "spirit__include__phoenix1_functions" { header "spirit/include/phoenix1_functions.hpp" export * }
    module "spirit__include__phoenix1" { header "spirit/include/phoenix1.hpp" export * }
    module "spirit__include__phoenix1_new" { header "spirit/include/phoenix1_new.hpp" export * }
    module "spirit__include__phoenix1_operators" { header "spirit/include/phoenix1_operators.hpp" export * }
    module "spirit__include__phoenix1_primitives" { header "spirit/include/phoenix1_primitives.hpp" export * }
    module "spirit__include__phoenix1_statements" { header "spirit/include/phoenix1_statements.hpp" export * }
    module "spirit__include__phoenix1_tuple_helpers" { header "spirit/include/phoenix1_tuple_helpers.hpp" export * }
    module "spirit__include__phoenix1_tuples" { header "spirit/include/phoenix1_tuples.hpp" export * }
    module "spirit__include__phoenix_algorithm" { header "spirit/include/phoenix_algorithm.hpp" export * }
    module "spirit__include__phoenix_bind" { header "spirit/include/phoenix_bind.hpp" export * }
    module "spirit__include__phoenix_container" { header "spirit/include/phoenix_container.hpp" export * }
    module "spirit__include__phoenix_core" { header "spirit/include/phoenix_core.hpp" export * }
    module "spirit__include__phoenix_function" { header "spirit/include/phoenix_function.hpp" export * }
    module "spirit__include__phoenix_fusion" { header "spirit/include/phoenix_fusion.hpp" export * }
    module "spirit__include__phoenix" { header "spirit/include/phoenix.hpp" export * }
    module "spirit__include__phoenix_limits" { header "spirit/include/phoenix_limits.hpp" export * }
    module "spirit__include__phoenix_object" { header "spirit/include/phoenix_object.hpp" export * }
    module "spirit__include__phoenix_operator" { header "spirit/include/phoenix_operator.hpp" export * }
    module "spirit__include__phoenix_scope" { header "spirit/include/phoenix_scope.hpp" export * }
    module "spirit__include__phoenix_statement" { header "spirit/include/phoenix_statement.hpp" export * }
    module "spirit__include__phoenix_stl" { header "spirit/include/phoenix_stl.hpp" export * }
    module "spirit__include__phoenix_version" { header "spirit/include/phoenix_version.hpp" export * }
    module "spirit__include__qi_action" { header "spirit/include/qi_action.hpp" export * }
    module "spirit__include__qi_alternative" { header "spirit/include/qi_alternative.hpp" export * }
    module "spirit__include__qi_and_predicate" { header "spirit/include/qi_and_predicate.hpp" export * }
    module "spirit__include__qi_as" { header "spirit/include/qi_as.hpp" export * }
    module "spirit__include__qi_as_string" { header "spirit/include/qi_as_string.hpp" export * }
    module "spirit__include__qi_attr_cast" { header "spirit/include/qi_attr_cast.hpp" export * }
    module "spirit__include__qi_attr" { header "spirit/include/qi_attr.hpp" export * }
    module "spirit__include__qi_auto" { header "spirit/include/qi_auto.hpp" export * }
    module "spirit__include__qi_auxiliary" { header "spirit/include/qi_auxiliary.hpp" export * }
    module "spirit__include__qi_binary" { header "spirit/include/qi_binary.hpp" export * }
    module "spirit__include__qi_bool" { header "spirit/include/qi_bool.hpp" export * }
    module "spirit__include__qi_char_class" { header "spirit/include/qi_char_class.hpp" export * }
    module "spirit__include__qi_char_" { header "spirit/include/qi_char_.hpp" export * }
    module "spirit__include__qi_char" { header "spirit/include/qi_char.hpp" export * }
    module "spirit__include__qi_core" { header "spirit/include/qi_core.hpp" export * }
    module "spirit__include__qi_difference" { header "spirit/include/qi_difference.hpp" export * }
    module "spirit__include__qi_directive" { header "spirit/include/qi_directive.hpp" export * }
    module "spirit__include__qi_domain" { header "spirit/include/qi_domain.hpp" export * }
    module "spirit__include__qi_eoi" { header "spirit/include/qi_eoi.hpp" export * }
    module "spirit__include__qi_eol" { header "spirit/include/qi_eol.hpp" export * }
    module "spirit__include__qi_eps" { header "spirit/include/qi_eps.hpp" export * }
    module "spirit__include__qi_expect" { header "spirit/include/qi_expect.hpp" export * }
    module "spirit__include__qi_grammar" { header "spirit/include/qi_grammar.hpp" export * }
    module "spirit__include__qi_hold" { header "spirit/include/qi_hold.hpp" export * }
    module "spirit__include__qi" { header "spirit/include/qi.hpp" export * }
    module "spirit__include__qi_int" { header "spirit/include/qi_int.hpp" export * }
    module "spirit__include__qi_kleene" { header "spirit/include/qi_kleene.hpp" export * }
    module "spirit__include__qi_lazy" { header "spirit/include/qi_lazy.hpp" export * }
    module "spirit__include__qi_lexeme" { header "spirit/include/qi_lexeme.hpp" export * }
    module "spirit__include__qi_list" { header "spirit/include/qi_list.hpp" export * }
    module "spirit__include__qi_lit" { header "spirit/include/qi_lit.hpp" export * }
    module "spirit__include__qi_match_attr" { header "spirit/include/qi_match_attr.hpp" export * }
    module "spirit__include__qi_match_auto" { header "spirit/include/qi_match_auto.hpp" export * }
    module "spirit__include__qi_matches" { header "spirit/include/qi_matches.hpp" export * }
    module "spirit__include__qi_match" { header "spirit/include/qi_match.hpp" export * }
    module "spirit__include__qi_no_case" { header "spirit/include/qi_no_case.hpp" export * }
    module "spirit__include__qi_nonterminal" { header "spirit/include/qi_nonterminal.hpp" export * }
    module "spirit__include__qi_no_skip" { header "spirit/include/qi_no_skip.hpp" export * }
    module "spirit__include__qi_not_predicate" { header "spirit/include/qi_not_predicate.hpp" export * }
    module "spirit__include__qi_numeric" { header "spirit/include/qi_numeric.hpp" export * }
    module "spirit__include__qi_omit" { header "spirit/include/qi_omit.hpp" export * }
    module "spirit__include__qi_operator" { header "spirit/include/qi_operator.hpp" export * }
    module "spirit__include__qi_optional" { header "spirit/include/qi_optional.hpp" export * }
    module "spirit__include__qi_parse_attr" { header "spirit/include/qi_parse_attr.hpp" export * }
    module "spirit__include__qi_parse_auto" { header "spirit/include/qi_parse_auto.hpp" export * }
    module "spirit__include__qi_parse" { header "spirit/include/qi_parse.hpp" export * }
    module "spirit__include__qi_permutation" { header "spirit/include/qi_permutation.hpp" export * }
    module "spirit__include__qi_plus" { header "spirit/include/qi_plus.hpp" export * }
    module "spirit__include__qi_raw" { header "spirit/include/qi_raw.hpp" export * }
    module "spirit__include__qi_real" { header "spirit/include/qi_real.hpp" export * }
    module "spirit__include__qi_repeat" { header "spirit/include/qi_repeat.hpp" export * }
    module "spirit__include__qi_rule" { header "spirit/include/qi_rule.hpp" export * }
    module "spirit__include__qi_sequence" { header "spirit/include/qi_sequence.hpp" export * }
    module "spirit__include__qi_sequential_or" { header "spirit/include/qi_sequential_or.hpp" export * }
    module "spirit__include__qi_skip" { header "spirit/include/qi_skip.hpp" export * }
    module "spirit__include__qi_stream" { header "spirit/include/qi_stream.hpp" export * }
    module "spirit__include__qi_string" { header "spirit/include/qi_string.hpp" export * }
    module "spirit__include__qi_symbols" { header "spirit/include/qi_symbols.hpp" export * }
    module "spirit__include__qi_uint" { header "spirit/include/qi_uint.hpp" export * }
    module "spirit__include__qi_what" { header "spirit/include/qi_what.hpp" export * }
    module "spirit__include__support_adapt_adt_attributes" { header "spirit/include/support_adapt_adt_attributes.hpp" export * }
    module "spirit__include__support_any" { header "spirit/include/support_any.hpp" export * }
    module "spirit__include__support_any_if" { header "spirit/include/support_any_if.hpp" export * }
    module "spirit__include__support_any_if_ns" { header "spirit/include/support_any_if_ns.hpp" export * }
    module "spirit__include__support_any_ns" { header "spirit/include/support_any_ns.hpp" export * }
    module "spirit__include__support_argument" { header "spirit/include/support_argument.hpp" export * }
    module "spirit__include__support_ascii" { header "spirit/include/support_ascii.hpp" export * }
    module "spirit__include__support_attributes_fwd" { header "spirit/include/support_attributes_fwd.hpp" export * }
    module "spirit__include__support_attributes" { header "spirit/include/support_attributes.hpp" export * }
    module "spirit__include__support_auto" { header "spirit/include/support_auto.hpp" export * }
    module "spirit__include__support_char_class" { header "spirit/include/support_char_class.hpp" export * }
    module "spirit__include__support_container" { header "spirit/include/support_container.hpp" export * }
    module "spirit__include__support_extended_variant" { header "spirit/include/support_extended_variant.hpp" export * }
    module "spirit__include__support" { header "spirit/include/support.hpp" export * }
    module "spirit__include__support_info" { header "spirit/include/support_info.hpp" export * }
    module "spirit__include__support_iso8859_1" { header "spirit/include/support_iso8859_1.hpp" export * }
    module "spirit__include__support_istream_iterator" { header "spirit/include/support_istream_iterator.hpp" export * }
    module "spirit__include__support_line_pos_iterator" { header "spirit/include/support_line_pos_iterator.hpp" export * }
    module "spirit__include__support_locals" { header "spirit/include/support_locals.hpp" export * }
    module "spirit__include__support_look_ahead" { header "spirit/include/support_look_ahead.hpp" export * }
    module "spirit__include__support_modify" { header "spirit/include/support_modify.hpp" export * }
    module "spirit__include__support_multi_pass_fwd" { header "spirit/include/support_multi_pass_fwd.hpp" export * }
    module "spirit__include__support_multi_pass" { header "spirit/include/support_multi_pass.hpp" export * }
    module "spirit__include__support_ostream_iterator" { header "spirit/include/support_ostream_iterator.hpp" export * }
    module "spirit__include__support_standard" { header "spirit/include/support_standard.hpp" export * }
    module "spirit__include__support_standard_wide" { header "spirit/include/support_standard_wide.hpp" export * }
    module "spirit__include__support_string_traits" { header "spirit/include/support_string_traits.hpp" export * }
    module "spirit__include__support_unused" { header "spirit/include/support_unused.hpp" export * }
    module "spirit__include__support_utree" { header "spirit/include/support_utree.hpp" export * }
    module "spirit__include__version" { header "spirit/include/version.hpp" export * }
    module "spirit__repository__home__karma__directive__confix" { header "spirit/repository/home/karma/directive/confix.hpp" export * }
    module "spirit__repository__home__karma__directive" { header "spirit/repository/home/karma/directive.hpp" export * }
    module "spirit__repository__home__qi__directive__confix" { header "spirit/repository/home/qi/directive/confix.hpp" export * }
    module "spirit__repository__home__qi__directive__distinct" { header "spirit/repository/home/qi/directive/distinct.hpp" export * }
    module "spirit__repository__home__qi__directive__seek" { header "spirit/repository/home/qi/directive/seek.hpp" export * }
    module "spirit__repository__home__qi__primitive__flush_multi_pass" { header "spirit/repository/home/qi/primitive/flush_multi_pass.hpp" export * }
    module "spirit__repository__home__support__confix" { header "spirit/repository/home/support/confix.hpp" export * }
    module "spirit__repository__home__support__distinct" { header "spirit/repository/home/support/distinct.hpp" export * }
    module "spirit__repository__home__support__flush_multi_pass" { header "spirit/repository/home/support/flush_multi_pass.hpp" export * }
    module "spirit__repository__home__support__kwd" { header "spirit/repository/home/support/kwd.hpp" export * }
    module "spirit__repository__home__support__seek" { header "spirit/repository/home/support/seek.hpp" export * }
    module "spirit__repository__home__support__subrule_context" { header "spirit/repository/home/support/subrule_context.hpp" export * }
    module "spirit__repository__include__karma_confix" { header "spirit/repository/include/karma_confix.hpp" export * }
    module "spirit__repository__include__karma_directive" { header "spirit/repository/include/karma_directive.hpp" export * }
    module "spirit__repository__include__qi_confix" { header "spirit/repository/include/qi_confix.hpp" export * }
    module "spirit__repository__include__qi_distinct" { header "spirit/repository/include/qi_distinct.hpp" export * }
    module "spirit__repository__include__qi_flush_multi_pass" { header "spirit/repository/include/qi_flush_multi_pass.hpp" export * }
    module "spirit__repository__include__qi_seek" { header "spirit/repository/include/qi_seek.hpp" export * }
    module "spirit__version" { header "spirit/version.hpp" export * }
  }

module boost_iostreams {
  export *
  // FIXME: Brings boost_random which is currently broken.
  exclude header "iostreams/filter/test.hpp"
  // error: unknown template name 'stream_base'
  exclude header "iostreams/detail/broken_overload_resolution/stream.hpp"
  // error: redefinition of 'stream_buffer'
  exclude header "iostreams/detail/broken_overload_resolution/stream_buffer.hpp"
  umbrella "iostreams"
  module * { export * }
}

  module boost_proto {
    export *
    module "proto__args" { header "proto/args.hpp" export * }
    module "proto__context__callable" { header "proto/context/callable.hpp" export * }
    module "proto__context__default" { header "proto/context/default.hpp" export * }
    module "proto__context" { header "proto/context.hpp" export * }
    module "proto__context__null" { header "proto/context/null.hpp" export * }
    module "proto__core" { header "proto/core.hpp" export * }
    module "proto__debug" { header "proto/debug.hpp" export * }
    module "proto__deep_copy" { header "proto/deep_copy.hpp" export * }
    module "proto__detail__any" { header "proto/detail/any.hpp" export * }
    module "proto__detail__as_expr" { header "proto/detail/as_expr.hpp" export * }
    module "proto__detail__as_lvalue" { header "proto/detail/as_lvalue.hpp" export * }
    module "proto__detail__decltype" { header "proto/detail/decltype.hpp" export * }
    module "proto__detail__deduce_domain" { header "proto/detail/deduce_domain.hpp" export * }
    module "proto__detail__deprecated" { header "proto/detail/deprecated.hpp" export * }
    module "proto__detail__dont_care" { header "proto/detail/dont_care.hpp" export * }
    module "proto__detail__ignore_unused" { header "proto/detail/ignore_unused.hpp" export * }
    module "proto__detail__is_noncopyable" { header "proto/detail/is_noncopyable.hpp" export * }
    module "proto__detail__poly_function" { header "proto/detail/poly_function.hpp" export * }
    module "proto__detail__remove_typename" { header "proto/detail/remove_typename.hpp" export * }
    module "proto__detail__static_const" { header "proto/detail/static_const.hpp" export * }
    module "proto__detail__template_arity" { header "proto/detail/template_arity.hpp" export * }
    module "proto__domain" { header "proto/domain.hpp" export * }
    module "proto__eval" { header "proto/eval.hpp" export * }
    module "proto__expr" { header "proto/expr.hpp" export * }
    module "proto__extends" { header "proto/extends.hpp" export * }
    module "proto__functional__fusion__at" { header "proto/functional/fusion/at.hpp" export * }
    module "proto__functional__fusion" { header "proto/functional/fusion.hpp" export * }
    module "proto__functional__fusion__pop_back" { header "proto/functional/fusion/pop_back.hpp" export * }
    module "proto__functional__fusion__pop_front" { header "proto/functional/fusion/pop_front.hpp" export * }
    module "proto__functional__fusion__push_back" { header "proto/functional/fusion/push_back.hpp" export * }
    module "proto__functional__fusion__push_front" { header "proto/functional/fusion/push_front.hpp" export * }
    module "proto__functional__fusion__reverse" { header "proto/functional/fusion/reverse.hpp" export * }
    module "proto__functional" { header "proto/functional.hpp" export * }
    module "proto__functional__range__begin" { header "proto/functional/range/begin.hpp" export * }
    module "proto__functional__range__empty" { header "proto/functional/range/empty.hpp" export * }
    module "proto__functional__range__end" { header "proto/functional/range/end.hpp" export * }
    module "proto__functional__range" { header "proto/functional/range.hpp" export * }
    module "proto__functional__range__rbegin" { header "proto/functional/range/rbegin.hpp" export * }
    module "proto__functional__range__rend" { header "proto/functional/range/rend.hpp" export * }
    module "proto__functional__range__size" { header "proto/functional/range/size.hpp" export * }
    module "proto__functional__std" { header "proto/functional/std.hpp" export * }
    module "proto__functional__std__iterator" { header "proto/functional/std/iterator.hpp" export * }
    module "proto__functional__std__utility" { header "proto/functional/std/utility.hpp" export * }
    module "proto__fusion" { header "proto/fusion.hpp" export * }
    module "proto__generate" { header "proto/generate.hpp" export * }
    module "proto__literal" { header "proto/literal.hpp" export * }
    module "proto__make_expr" { header "proto/make_expr.hpp" export * }
    module "proto__matches" { header "proto/matches.hpp" export * }
    module "proto__operators" { header "proto/operators.hpp" export * }
    module "proto__proto_fwd" { header "proto/proto_fwd.hpp" export * }
    module "proto__proto" { header "proto/proto.hpp" export * }
    module "proto__proto_typeof" { header "proto/proto_typeof.hpp" export * }
    module "proto__repeat" { header "proto/repeat.hpp" export * }
    module "proto__tags" { header "proto/tags.hpp" export * }
    module "proto__traits" { header "proto/traits.hpp" export * }
    module "proto__transform__arg" { header "proto/transform/arg.hpp" export * }
    module "proto__transform__call" { header "proto/transform/call.hpp" export * }
    module "proto__transform__detail__pack" { header "proto/transform/detail/pack.hpp" export * }
    module "proto__transform__env" { header "proto/transform/env.hpp" export * }
    module "proto__transform__fold" { header "proto/transform/fold.hpp" export * }
    module "proto__transform__fold_tree" { header "proto/transform/fold_tree.hpp" export * }
    module "proto__transform__impl" { header "proto/transform/impl.hpp" export * }
    module "proto__transform__integral_c" { header "proto/transform/integral_c.hpp" export * }
    module "proto__transform__lazy" { header "proto/transform/lazy.hpp" export * }
    module "proto__transform__make" { header "proto/transform/make.hpp" export * }
    module "proto__transform__pass_through" { header "proto/transform/pass_through.hpp" export * }
    module "proto__transform__when" { header "proto/transform/when.hpp" export * }
  }
  module boost_phoenix {
    export *
    module "phoenix__bind__bind_function" { header "phoenix/bind/bind_function.hpp" export * }
    module "phoenix__bind__bind_function_object" { header "phoenix/bind/bind_function_object.hpp" export * }
    module "phoenix__bind__bind_member_function" { header "phoenix/bind/bind_member_function.hpp" export * }
    module "phoenix__bind__bind_member_variable" { header "phoenix/bind/bind_member_variable.hpp" export * }
    module "phoenix__bind" { header "phoenix/bind.hpp" export * }
    module "phoenix__config" { header "phoenix/config.hpp" export * }
    module "phoenix__core__actor" { header "phoenix/core/actor.hpp" export * }
    module "phoenix__core__argument" { header "phoenix/core/argument.hpp" export * }
    module "phoenix__core__arity" { header "phoenix/core/arity.hpp" export * }
    module "phoenix__core__as_actor" { header "phoenix/core/as_actor.hpp" export * }
    module "phoenix__core__call" { header "phoenix/core/call.hpp" export * }
    module "phoenix__core__debug" { header "phoenix/core/debug.hpp" export * }
    module "phoenix__core__detail__expression" { header "phoenix/core/detail/expression.hpp" export * }
    module "phoenix__core__detail__function_eval" { header "phoenix/core/detail/function_eval.hpp" export * }
    module "phoenix__core__detail__index_sequence" { header "phoenix/core/detail/index_sequence.hpp" export * }
    /*
     *                           ^
While building module 'boost_modules_wrapper' imported from /home/teemperor/llvm/boost-compile/cms.cpp:2:
In file included from <module-includes>:737:
In file included from /home/teemperor/llvm/boost-compile/inc-cms/boost/phoenix/bind/bind_function.hpp:18:
In file included from /home/teemperor/llvm/boost-compile/inc-cms/boost/phoenix/core/detail/function_eval.hpp:17:
/home/teemperor/llvm/boost-compile/inc-cms/boost/phoenix/core/detail/phx2_result.hpp:40:20: error: declaration of 'eval_if' must be imported from module 'boost_mpl.mpl__bind'
      before it is required
            : mpl::eval_if<
            */
    module "phoenix__core__domain" { header "phoenix/core/domain.hpp" export * }
    module "phoenix__core__environment" { header "phoenix/core/environment.hpp" export * }
    module "phoenix__core__expression" { header "phoenix/core/expression.hpp" export * }
    module "phoenix__core__function_equal" { header "phoenix/core/function_equal.hpp" export * }
    module "phoenix__core" { header "phoenix/core.hpp" export * }
    module "phoenix__core__is_actor" { header "phoenix/core/is_actor.hpp" export * }
    module "phoenix__core__is_nullary" { header "phoenix/core/is_nullary.hpp" export * }
    module "phoenix__core__is_value" { header "phoenix/core/is_value.hpp" export * }
    module "phoenix__core__limits" { header "phoenix/core/limits.hpp" export * }
    module "phoenix__core__meta_grammar" { header "phoenix/core/meta_grammar.hpp" export * }
    module "phoenix__core__nothing" { header "phoenix/core/nothing.hpp" export * }
    module "phoenix__core__reference" { header "phoenix/core/reference.hpp" export * }
    module "phoenix__core__terminal_fwd" { header "phoenix/core/terminal_fwd.hpp" export * }
    module "phoenix__core__terminal" { header "phoenix/core/terminal.hpp" export * }
    module "phoenix__core__v2_eval" { header "phoenix/core/v2_eval.hpp" export * }
    module "phoenix__core__value" { header "phoenix/core/value.hpp" export * }
    module "phoenix__function__adapt_callable" { header "phoenix/function/adapt_callable.hpp" export * }
    module "phoenix__function__adapt_function" { header "phoenix/function/adapt_function.hpp" export * }
    module "phoenix__function__function" { header "phoenix/function/function.hpp" export * }
    module "phoenix__function" { header "phoenix/function.hpp" export * }
    // Redefine 'equal', so we shouldn't precompile them:
    /*
    /home/travis/build/Teemperor/boost-compile/inc/boost/phoenix/support/detail/iterate.hpp:75:1: fatal error: import of module 'boost_modules_wrapper.boost_phoenix.phoenix__support__detail__iterate_undef' appears within namespace 'boost::phoenix::result_of'
#include <boost/phoenix/support/detail/iterate_undef.hpp>
^
/home/travis/build/Teemperor/boost-compile/inc/boost/phoenix/operator/member.hpp:62:5: note: namespace 'boost::phoenix::result_of' begins here
    namespace result_of
    ^
    */
    //module "phoenix__function__lazy_operator" { header "phoenix/function/lazy_operator.hpp" export * }
    //module "phoenix__function__lazy_prelude" { header "phoenix/function/lazy_prelude.hpp" export * }
    module "phoenix__fusion__at" { header "phoenix/fusion/at.hpp" export * }
    module "phoenix__fusion" { header "phoenix/fusion.hpp" export * }
    module "phoenix" { header "phoenix.hpp" export * }
    module "phoenix__object__const_cast" { header "phoenix/object/const_cast.hpp" export * }
    module "phoenix__object__construct" { header "phoenix/object/construct.hpp" export * }
    module "phoenix__object__delete" { header "phoenix/object/delete.hpp" export * }
    module "phoenix__object__dynamic_cast" { header "phoenix/object/dynamic_cast.hpp" export * }
    module "phoenix__object" { header "phoenix/object.hpp" export * }
    module "phoenix__object__new" { header "phoenix/object/new.hpp" export * }
    module "phoenix__object__reinterpret_cast" { header "phoenix/object/reinterpret_cast.hpp" export * }
    module "phoenix__object__static_cast" { header "phoenix/object/static_cast.hpp" export * }
    module "phoenix__operator__arithmetic" { header "phoenix/operator/arithmetic.hpp" export * }
    module "phoenix__operator__bitwise" { header "phoenix/operator/bitwise.hpp" export * }
    module "phoenix__operator__comparison" { header "phoenix/operator/comparison.hpp" export * }
    //module "phoenix__operator__detail__define_operator" { header "phoenix/operator/detail/define_operator.hpp" export * }
    //module "phoenix__operator__detail__undef_operator" { header "phoenix/operator/detail/undef_operator.hpp" export * }
    module "phoenix__operator" { header "phoenix/operator.hpp" export * }
    module "phoenix__operator__if_else" { header "phoenix/operator/if_else.hpp" export * }
    module "phoenix__operator__io" { header "phoenix/operator/io.hpp" export * }
    module "phoenix__operator__logical" { header "phoenix/operator/logical.hpp" export * }
    module "phoenix__operator__member" { header "phoenix/operator/member.hpp" export * }
    module "phoenix__operator__self" { header "phoenix/operator/self.hpp" export * }
    module "phoenix__phoenix" { header "phoenix/phoenix.hpp" export * }
    module "phoenix__scope__dynamic" { header "phoenix/scope/dynamic.hpp" export * }
    module "phoenix__scope" { header "phoenix/scope.hpp" export * }
    module "phoenix__scope__lambda" { header "phoenix/scope/lambda.hpp" export * }
    module "phoenix__scope__let" { header "phoenix/scope/let.hpp" export * }
    module "phoenix__scope__local_variable" { header "phoenix/scope/local_variable.hpp" export * }
    module "phoenix__scope__scoped_environment" { header "phoenix/scope/scoped_environment.hpp" export * }
    module "phoenix__scope__this" { header "phoenix/scope/this.hpp" export * }
    module "phoenix__statement__do_while" { header "phoenix/statement/do_while.hpp" export * }
    module "phoenix__statement__for" { header "phoenix/statement/for.hpp" export * }
    module "phoenix__statement" { header "phoenix/statement.hpp" export * }
    module "phoenix__statement__if" { header "phoenix/statement/if.hpp" export * }
    module "phoenix__statement__sequence" { header "phoenix/statement/sequence.hpp" export * }
    module "phoenix__statement__switch" { header "phoenix/statement/switch.hpp" export * }
    module "phoenix__statement__throw" { header "phoenix/statement/throw.hpp" export * }
    module "phoenix__statement__try_catch" { header "phoenix/statement/try_catch.hpp" export * }
    module "phoenix__statement__while" { header "phoenix/statement/while.hpp" export * }
    module "phoenix__stl__algorithm__detail__begin" { header "phoenix/stl/algorithm/detail/begin.hpp" export * }
    module "phoenix__stl__algorithm__detail__decay_array" { header "phoenix/stl/algorithm/detail/decay_array.hpp" export * }
    module "phoenix__stl__algorithm__detail__end" { header "phoenix/stl/algorithm/detail/end.hpp" export * }
    module "phoenix__stl__algorithm__detail__has_equal_range" { header "phoenix/stl/algorithm/detail/has_equal_range.hpp" export * }
    module "phoenix__stl__algorithm__detail__has_find" { header "phoenix/stl/algorithm/detail/has_find.hpp" export * }
    module "phoenix__stl__algorithm__detail__has_lower_bound" { header "phoenix/stl/algorithm/detail/has_lower_bound.hpp" export * }
    module "phoenix__stl__algorithm__detail__has_remove" { header "phoenix/stl/algorithm/detail/has_remove.hpp" export * }
    module "phoenix__stl__algorithm__detail__has_remove_if" { header "phoenix/stl/algorithm/detail/has_remove_if.hpp" export * }
    module "phoenix__stl__algorithm__detail__has_reverse" { header "phoenix/stl/algorithm/detail/has_reverse.hpp" export * }
    module "phoenix__stl__algorithm__detail__has_sort" { header "phoenix/stl/algorithm/detail/has_sort.hpp" export * }
    module "phoenix__stl__algorithm__detail__has_unique" { header "phoenix/stl/algorithm/detail/has_unique.hpp" export * }
    module "phoenix__stl__algorithm__detail__has_upper_bound" { header "phoenix/stl/algorithm/detail/has_upper_bound.hpp" export * }
    module "phoenix__stl__algorithm__detail__is_std_hash_map" { header "phoenix/stl/algorithm/detail/is_std_hash_map.hpp" export * }
    module "phoenix__stl__algorithm__detail__is_std_hash_set" { header "phoenix/stl/algorithm/detail/is_std_hash_set.hpp" export * }
    module "phoenix__stl__algorithm__detail__is_std_list" { header "phoenix/stl/algorithm/detail/is_std_list.hpp" export * }
    module "phoenix__stl__algorithm__detail__is_std_map" { header "phoenix/stl/algorithm/detail/is_std_map.hpp" export * }
    module "phoenix__stl__algorithm__detail__is_std_set" { header "phoenix/stl/algorithm/detail/is_std_set.hpp" export * }
    module "phoenix__stl__algorithm__detail__is_unordered_set_or_map" { header "phoenix/stl/algorithm/detail/is_unordered_set_or_map.hpp" export * }
    module "phoenix__stl__algorithm" { header "phoenix/stl/algorithm.hpp" export * }
    module "phoenix__stl__algorithm__iteration" { header "phoenix/stl/algorithm/iteration.hpp" export * }
    module "phoenix__stl__algorithm__querying" { header "phoenix/stl/algorithm/querying.hpp" export * }
    module "phoenix__stl__algorithm__transformation" { header "phoenix/stl/algorithm/transformation.hpp" export * }
    module "phoenix__stl__cmath" { header "phoenix/stl/cmath.hpp" export * }
    module "phoenix__stl__container__container" { header "phoenix/stl/container/container.hpp" export * }
    module "phoenix__stl__container__detail__container" { header "phoenix/stl/container/detail/container.hpp" export * }
    module "phoenix__stl__container" { header "phoenix/stl/container.hpp" export * }
    module "phoenix__stl" { header "phoenix/stl.hpp" export * }
    //preprocessor magic
    /*
    module "phoenix__support__detail__iterate_define" { header "phoenix/support/detail/iterate_define.hpp" export * }
    module "phoenix__support__detail__iterate_undef" { header "phoenix/support/detail/iterate_undef.hpp" export * }
    module "phoenix__support__iterate" { header "phoenix/support/iterate.hpp" export * }
    module "phoenix__support__preprocessor__round" { header "phoenix/support/preprocessor/round.hpp" export * }
    */
    module "phoenix__support__vector" { header "phoenix/support/vector.hpp" export * }
    module "phoenix__version" { header "phoenix/version.hpp" export * }
  }

module boost_ratio {
  export *
  module "ratio__config" { header "ratio/config.hpp" export * }
  module "ratio__detail__mpl__abs" { header "ratio/detail/mpl/abs.hpp" export * }
  module "ratio__detail__mpl__gcd" { header "ratio/detail/mpl/gcd.hpp" export * }
  module "ratio__detail__mpl__sign" { header "ratio/detail/mpl/sign.hpp" export * }
  module "ratio__detail__ratio_io" { header "ratio/detail/ratio_io.hpp" export * }
  module "ratio" { header "ratio.hpp" export * }
  module "ratio__include" { header "ratio/include.hpp" export * }
  module "ratio__mpl__rational_c_tag" { header "ratio/mpl/rational_c_tag.hpp" export * }
  module "ratio__ratio_fwd" { header "ratio/ratio_fwd.hpp" export * }
  module "ratio__ratio" { header "ratio/ratio.hpp" export * }
  module "ratio__ratio_io" { header "ratio/ratio_io.hpp" export * }
}
module boost_rational { export * module "rational" { header "rational.hpp" export * } }
module boost_ref { export * module "ref" { header "ref.hpp" export * } }
module boost_regex {
  export *
  module "regex__concepts" { header "regex/concepts.hpp" export * }
  module "regex__config__borland" { header "regex/config/borland.hpp" export * }
  module "regex__config__cwchar" { header "regex/config/cwchar.hpp" export * }
  module "regex__config" { header "regex/config.hpp" export * }
  module "regex" { header "regex.hpp" export * }
  module "regex__pattern_except" { header "regex/pattern_except.hpp" export * }
  module "regex__pending__object_cache" { header "regex/pending/object_cache.hpp" export * }
  module "regex__pending__static_mutex" { header "regex/pending/static_mutex.hpp" export * }
  module "regex__pending__unicode_iterator" { header "regex/pending/unicode_iterator.hpp" export * }
  module "regex__regex_traits" { header "regex/regex_traits.hpp" export * }
  module "regex__user" { header "regex/user.hpp" export * }
  module "regex__v4__cregex" { header "regex/v4/cregex.hpp" export * }
  module "regex__v4__c_regex_traits" { header "regex/v4/c_regex_traits.hpp" export * }
  module "regex__v4__error_type" { header "regex/v4/error_type.hpp" export * }
  module "regex__v4__fileiter" { header "regex/v4/fileiter.hpp" export * }
  module "regex__v4__iterator_category" { header "regex/v4/iterator_category.hpp" export * }
  module "regex__v4__match_flags" { header "regex/v4/match_flags.hpp" export * }
  // misses include to get BOOST_REGEX_DETAIL_NS: module "regex__v4__primary_transform" { header "regex/v4/primary_transform.hpp" export * }
  module "regex__v4__regex_fwd" { header "regex/v4/regex_fwd.hpp" export * }
  module "regex__v4__regex" { header "regex/v4/regex.hpp" export * }
  module "regex__v4__regex_raw_buffer" { header "regex/v4/regex_raw_buffer.hpp" export * }
  module "regex__v4__regex_traits" { header "regex/v4/regex_traits.hpp" export * }
  module "regex__v4__regex_workaround" { header "regex/v4/regex_workaround.hpp" export * }
  module "regex__v4__syntax_type" { header "regex/v4/syntax_type.hpp" export * }
  module "regex_fwd" { header "regex_fwd.hpp" export * }
}
module boost_scope_exit { export * module "scope_exit" { header "scope_exit.hpp" export * } }
module boost_shared_container_iterator { export * module "shared_container_iterator" { header "shared_container_iterator.hpp" export * } }

// Common util
// These modules form a cycle, so we have to merge them into one module.
module boost_utils {
export *

module boost_move {
  export *
  module "move__adl_move_swap" { header "move/adl_move_swap.hpp" export * }
  module "move__algo__adaptive_merge" { header "move/algo/adaptive_merge.hpp" export * }
  module "move__algo__adaptive_sort" { header "move/algo/adaptive_sort.hpp" export * }
  module "move__algo__detail__adaptive_sort_merge" { header "move/algo/detail/adaptive_sort_merge.hpp" export * }
  module "move__algo__detail__insertion_sort" { header "move/algo/detail/insertion_sort.hpp" export * }
  module "move__algo__detail__merge" { header "move/algo/detail/merge.hpp" export * }
  module "move__algo__detail__merge_sort" { header "move/algo/detail/merge_sort.hpp" export * }
  module "move__algo__move" { header "move/algo/move.hpp" export * }
  module "move__algorithm" { header "move/algorithm.hpp" export * }
  module "move__core" { header "move/core.hpp" export * }
  module "move__default_delete" { header "move/default_delete.hpp" export * }
  module "move__detail__config_begin" { header "move/detail/config_begin.hpp" export * }
  module "move__detail__config_end" { header "move/detail/config_end.hpp" export * }
  module "move__detail__destruct_n" { header "move/detail/destruct_n.hpp" export * }
  module "move__detail__fwd_macros" { header "move/detail/fwd_macros.hpp" export * }
  module "move__detail__iterator_traits" { header "move/detail/iterator_traits.hpp" export * }
  module "move__detail__meta_utils_core" { header "move/detail/meta_utils_core.hpp" export * }
  module "move__detail__meta_utils" { header "move/detail/meta_utils.hpp" export * }
  module "move__detail__move_helpers" { header "move/detail/move_helpers.hpp" export * }
  module "move__detail__placement_new" { header "move/detail/placement_new.hpp" export * }
  module "move__detail__reverse_iterator" { header "move/detail/reverse_iterator.hpp" export * }
  module "move__detail__std_ns_begin" { header "move/detail/std_ns_begin.hpp" export * }
  module "move__detail__std_ns_end" { header "move/detail/std_ns_end.hpp" export * }
  module "move__detail__type_traits" { header "move/detail/type_traits.hpp" export * }
  module "move__detail__unique_ptr_meta_utils" { header "move/detail/unique_ptr_meta_utils.hpp" export * }
  module "move__detail__workaround" { header "move/detail/workaround.hpp" export * }
  module "move__iterator" { header "move/iterator.hpp" export * }
  module "move__make_unique" { header "move/make_unique.hpp" export * }
  module "move__move" { header "move/move.hpp" export * }
  module "move__traits" { header "move/traits.hpp" export * }
  module "move__unique_ptr" { header "move/unique_ptr.hpp" export * }
  module "move__utility_core" { header "move/utility_core.hpp" export * }
  module "move__utility" { header "move/utility.hpp" export * }
}
module boost_make_shared { export * module "make_shared" { header "make_shared.hpp" export * } }
module boost_enable_shared_from_this {export *  module "enable_shared_from_this" { header "enable_shared_from_this.hpp" export * } }
module boost_shared_array { export * module "shared_array" { header "shared_array.hpp" export * } }
module boost_intrusive_ptr { export * module "intrusive_ptr" { header "intrusive_ptr.hpp" export * } }
module boost_scoped_array { export * module "scoped_array" { header "scoped_array.hpp" export * } }
module boost_scoped_ptr { export * module "scoped_ptr" { header "scoped_ptr.hpp" export * } }
module boost_weak_ptr { export * module "weak_ptr" { header "weak_ptr.hpp" export * } }
module boost_exception_ptr { export * module "exception_ptr" { header "exception_ptr.hpp" export * } }
module boost_tuple {
  export *
  module "tuple__tuple_comparison" { header "tuple/tuple_comparison.hpp" export * }
  module "tuple__tuple" { header "tuple/tuple.hpp" export * }
  module "tuple__tuple_io" { header "tuple/tuple_io.hpp" export * }
}

module boost_utility {
  export *
  module "utility__base_from_member" { header "utility/base_from_member.hpp" export * }
  module "utility__binary" { header "utility/binary.hpp" export * }
  module "utility__compare_pointees" { header "utility/compare_pointees.hpp" export * }
  module "utility__declval" { header "utility/declval.hpp" export * }
  module "utility__detail__in_place_factory_prefix" { header "utility/detail/in_place_factory_prefix.hpp" export * }
  module "utility__detail__in_place_factory_suffix" { header "utility/detail/in_place_factory_suffix.hpp" export * }
  module "utility__explicit_operator_bool" { header "utility/explicit_operator_bool.hpp" export * }
  module "utility" { header "utility.hpp" export * }
  module "utility__identity_type" { header "utility/identity_type.hpp" export * }
  // FIXME: Imports itself...? module "utility__in_place_factory" { header "utility/in_place_factory.hpp" export * }
  module "utility__result_of" { header "utility/result_of.hpp" export * }
  module "utility__string_ref_fwd" { header "utility/string_ref_fwd.hpp" export * }
  module "utility__string_ref" { header "utility/string_ref.hpp" export * }
  module "utility__string_view_fwd" { header "utility/string_view_fwd.hpp" export * }
  module "utility__string_view" { header "utility/string_view.hpp" export * }
  module "utility__swap" { header "utility/swap.hpp" export * }
  // FIXME: Imports itself...?  module "utility__typed_in_place_factory" { header "utility/typed_in_place_factory.hpp" export * }
  module "utility__value_init" { header "utility/value_init.hpp" export * }
}
module boost_call_traits { export * module "call_traits" { header "call_traits.hpp" export * } }
module boost_detail {
  export *
  module "detail__allocator_utilities" { header "detail/allocator_utilities.hpp" export * }
  module "detail__atomic_count" { header "detail/atomic_count.hpp" export * }
  // textual
  module "detail__binary_search" { header "detail/binary_search.hpp" export * }
  module "detail__bitmask" { header "detail/bitmask.hpp" export * }
  module "detail__call_traits" { header "detail/call_traits.hpp" export * }
  module "detail__catch_exceptions" { header "detail/catch_exceptions.hpp" export * }
  module "detail__compressed_pair" { header "detail/compressed_pair.hpp" export * }
  module "detail__container_fwd" { header "detail/container_fwd.hpp" export * }
  module "detail__fenv" { header "detail/fenv.hpp" export * }
  module "detail__has_default_constructor" { header "detail/has_default_constructor.hpp" export * }
  module "detail__identifier" { header "detail/identifier.hpp" export * }
  module "detail__indirect_traits" { header "detail/indirect_traits.hpp" export * }
  module "detail__is_incrementable" { header "detail/is_incrementable.hpp" export * }
  module "detail__is_sorted" { header "detail/is_sorted.hpp" export * }
  module "detail__is_xxx" { header "detail/is_xxx.hpp" export * }
  module "detail__iterator" { header "detail/iterator.hpp" export * }
  module "detail__lcast_precision" { header "detail/lcast_precision.hpp" export * }
  module "detail__lightweight_mutex" { header "detail/lightweight_mutex.hpp" export * }
  module "detail__no_exceptions_support" { header "detail/no_exceptions_support.hpp" export * }
  module "detail__numeric_traits" { header "detail/numeric_traits.hpp" export * }
  module "detail__ob_compressed_pair" { header "detail/ob_compressed_pair.hpp" export * }
  module "detail__quick_allocator" { header "detail/quick_allocator.hpp" export * }
  module "detail__reference_content" { header "detail/reference_content.hpp" export * }
  module "detail__scoped_enum_emulation" { header "detail/scoped_enum_emulation.hpp" export * }
  module "detail__select_type" { header "detail/select_type.hpp" export * }
  module "detail__sp_typeinfo" { header "detail/sp_typeinfo.hpp" export * }
  module "detail__templated_streams" { header "detail/templated_streams.hpp" export * }
  module "detail__winapi__config" { header "detail/winapi/config.hpp" export * }
}
module boost_throw_exception { export * module "throw_exception" { header "throw_exception.hpp" export * } }
module boost_shared_ptr { export * module "shared_ptr" { header "shared_ptr.hpp" export * } }
module boost_exception {
  export *
  module "exception__all" { header "exception/all.hpp" export * }
  module "exception__current_exception_cast" { header "exception/current_exception_cast.hpp" export * }
  module "exception__detail__clone_current_exception" { header "exception/detail/clone_current_exception.hpp" export * }
  module "exception__detail__error_info_impl" { header "exception/detail/error_info_impl.hpp" export * }
  module "exception__detail__exception_ptr" { header "exception/detail/exception_ptr.hpp" export * }
  module "exception__detail__is_output_streamable" { header "exception/detail/is_output_streamable.hpp" export * }
  module "exception__detail__object_hex_dump" { header "exception/detail/object_hex_dump.hpp" export * }
  module "exception__detail__shared_ptr" { header "exception/detail/shared_ptr.hpp" export * }
  module "exception__detail__type_info" { header "exception/detail/type_info.hpp" export * }
  module "exception__diagnostic_information" { header "exception/diagnostic_information.hpp" export * }
  module "exception__enable_current_exception" { header "exception/enable_current_exception.hpp" export * }
  module "exception__enable_error_info" { header "exception/enable_error_info.hpp" export * }
  module "exception__errinfo_api_function" { header "exception/errinfo_api_function.hpp" export * }
  module "exception__errinfo_at_line" { header "exception/errinfo_at_line.hpp" export * }
  module "exception__errinfo_errno" { header "exception/errinfo_errno.hpp" export * }
  module "exception__errinfo_file_handle" { header "exception/errinfo_file_handle.hpp" export * }
  module "exception__errinfo_file_name" { header "exception/errinfo_file_name.hpp" export * }
  module "exception__errinfo_file_open_mode" { header "exception/errinfo_file_open_mode.hpp" export * }
  module "exception__errinfo_nested_exception" { header "exception/errinfo_nested_exception.hpp" export * }
  module "exception__errinfo_type_info_name" { header "exception/errinfo_type_info_name.hpp" export * }
  module "exception__error_info" { header "exception/error_info.hpp" export * }
  module "exception__exception" { header "exception/exception.hpp" export * }
  module "exception__get_error_info" { header "exception/get_error_info.hpp" export * }
  module "exception__info" { header "exception/info.hpp" export * }
  module "exception__info_tuple" { header "exception/info_tuple.hpp" export * }
  module "exception__to_string" { header "exception/to_string.hpp" export * }
  module "exception__to_string_stub" { header "exception/to_string_stub.hpp" export * }
}

module boost_smart_ptr {
  export *
  module "smart_ptr__allocate_shared_array" { header "smart_ptr/allocate_shared_array.hpp" export * }
  module "smart_ptr__bad_weak_ptr" { header "smart_ptr/bad_weak_ptr.hpp" export * }
  module "smart_ptr__detail__atomic_count_gcc" { header "smart_ptr/detail/atomic_count_gcc.hpp" export * }
  module "smart_ptr__detail__atomic_count_gcc_x86" { header "smart_ptr/detail/atomic_count_gcc_x86.hpp" export * }
  module "smart_ptr__detail__atomic_count" { header "smart_ptr/detail/atomic_count.hpp" export * }
  module "smart_ptr__detail__atomic_count_nt" { header "smart_ptr/detail/atomic_count_nt.hpp" export * }
  module "smart_ptr__detail__atomic_count_pt" { header "smart_ptr/detail/atomic_count_pt.hpp" export * }
  module "smart_ptr__detail__atomic_count_spin" { header "smart_ptr/detail/atomic_count_spin.hpp" export * }
  module "smart_ptr__detail__atomic_count_std_atomic" { header "smart_ptr/detail/atomic_count_std_atomic.hpp" export * }
  module "smart_ptr__detail__atomic_count_sync" { header "smart_ptr/detail/atomic_count_sync.hpp" export * }
  module "smart_ptr__detail__lightweight_mutex" { header "smart_ptr/detail/lightweight_mutex.hpp" export * }
  module "smart_ptr__detail__lwm_pthreads" { header "smart_ptr/detail/lwm_pthreads.hpp" export * }
  module "smart_ptr__detail__quick_allocator" { header "smart_ptr/detail/quick_allocator.hpp" export * }
  module "smart_ptr__detail__shared_count" { header "smart_ptr/detail/shared_count.hpp" export * }
  module "smart_ptr__detail__sp_convertible" { header "smart_ptr/detail/sp_convertible.hpp" export * }
  module "smart_ptr__detail__sp_counted_base_gcc_mips" { header "smart_ptr/detail/sp_counted_base_gcc_mips.hpp" export * }
  module "smart_ptr__detail__sp_counted_base_gcc_ppc" { header "smart_ptr/detail/sp_counted_base_gcc_ppc.hpp" export * }
  module "smart_ptr__detail__sp_counted_base_gcc_sparc" { header "smart_ptr/detail/sp_counted_base_gcc_sparc.hpp" export * }
  module "smart_ptr__detail__sp_counted_base_gcc_x86" { header "smart_ptr/detail/sp_counted_base_gcc_x86.hpp" export * }
  module "smart_ptr__detail__sp_counted_base" { header "smart_ptr/detail/sp_counted_base.hpp" export * }
  module "smart_ptr__detail__sp_counted_base_nt" { header "smart_ptr/detail/sp_counted_base_nt.hpp" export * }
  module "smart_ptr__detail__sp_counted_base_pt" { header "smart_ptr/detail/sp_counted_base_pt.hpp" export * }
  module "smart_ptr__detail__sp_counted_base_spin" { header "smart_ptr/detail/sp_counted_base_spin.hpp" export * }
  module "smart_ptr__detail__sp_counted_base_std_atomic" { header "smart_ptr/detail/sp_counted_base_std_atomic.hpp" export * }
  module "smart_ptr__detail__sp_counted_base_sync" { header "smart_ptr/detail/sp_counted_base_sync.hpp" export * }
  module "smart_ptr__detail__sp_counted_impl" { header "smart_ptr/detail/sp_counted_impl.hpp" export * }
  module "smart_ptr__detail__sp_disable_deprecated" { header "smart_ptr/detail/sp_disable_deprecated.hpp" export * }
  module "smart_ptr__detail__sp_forward" { header "smart_ptr/detail/sp_forward.hpp" export * }
  module "smart_ptr__detail__spinlock_gcc_arm" { header "smart_ptr/detail/spinlock_gcc_arm.hpp" export * }
  module "smart_ptr__detail__spinlock" { header "smart_ptr/detail/spinlock.hpp" export * }
  module "smart_ptr__detail__spinlock_nt" { header "smart_ptr/detail/spinlock_nt.hpp" export * }
  module "smart_ptr__detail__spinlock_pool" { header "smart_ptr/detail/spinlock_pool.hpp" export * }
  module "smart_ptr__detail__spinlock_pt" { header "smart_ptr/detail/spinlock_pt.hpp" export * }
  module "smart_ptr__detail__spinlock_std_atomic" { header "smart_ptr/detail/spinlock_std_atomic.hpp" export * }
  module "smart_ptr__detail__spinlock_sync" { header "smart_ptr/detail/spinlock_sync.hpp" export * }
  module "smart_ptr__detail__sp_noexcept" { header "smart_ptr/detail/sp_noexcept.hpp" export * }
  module "smart_ptr__detail__sp_nullptr_t" { header "smart_ptr/detail/sp_nullptr_t.hpp" export * }
  module "smart_ptr__detail__yield_k" { header "smart_ptr/detail/yield_k.hpp" export * }
  module "smart_ptr__enable_shared_from_raw" { header "smart_ptr/enable_shared_from_raw.hpp" export * }
  module "smart_ptr__enable_shared_from_this" { header "smart_ptr/enable_shared_from_this.hpp" export * }
  module "smart_ptr" { header "smart_ptr.hpp" export * }
  module "smart_ptr__intrusive_ptr" { header "smart_ptr/intrusive_ptr.hpp" export * }
  module "smart_ptr__intrusive_ref_counter" { header "smart_ptr/intrusive_ref_counter.hpp" export * }
  module "smart_ptr__make_shared_array" { header "smart_ptr/make_shared_array.hpp" export * }
  module "smart_ptr__make_shared" { header "smart_ptr/make_shared.hpp" export * }
  module "smart_ptr__make_shared_object" { header "smart_ptr/make_shared_object.hpp" export * }
  module "smart_ptr__make_unique" { header "smart_ptr/make_unique.hpp" export * }
  module "smart_ptr__owner_less" { header "smart_ptr/owner_less.hpp" export * }
  module "smart_ptr__scoped_array" { header "smart_ptr/scoped_array.hpp" export * }
  module "smart_ptr__scoped_ptr" { header "smart_ptr/scoped_ptr.hpp" export * }
  module "smart_ptr__shared_array" { header "smart_ptr/shared_array.hpp" export * }
  module "smart_ptr__shared_ptr" { header "smart_ptr/shared_ptr.hpp" export * }
  module "smart_ptr__weak_ptr" { header "smart_ptr/weak_ptr.hpp" export * }
}
}


module boost_signals2 {
  export *
  module "signals2__connection" { header "signals2/connection.hpp" export * }
  module "signals2__deconstruct" { header "signals2/deconstruct.hpp" export * }
  module "signals2__deconstruct_ptr" { header "signals2/deconstruct_ptr.hpp" export * }
  module "signals2__detail__auto_buffer" { header "signals2/detail/auto_buffer.hpp" export * }
  module "signals2__detail__foreign_ptr" { header "signals2/detail/foreign_ptr.hpp" export * }
  module "signals2__detail__lwm_nop" { header "signals2/detail/lwm_nop.hpp" export * }
  module "signals2__detail__lwm_pthreads" { header "signals2/detail/lwm_pthreads.hpp" export * }
  module "signals2__detail__null_output_iterator" { header "signals2/detail/null_output_iterator.hpp" export * }
  module "signals2__detail__replace_slot_function" { header "signals2/detail/replace_slot_function.hpp" export * }
  module "signals2__detail__result_type_wrapper" { header "signals2/detail/result_type_wrapper.hpp" export * }
  module "signals2__detail__signals_common" { header "signals2/detail/signals_common.hpp" export * }
  module "signals2__detail__signals_common_macros" { header "signals2/detail/signals_common_macros.hpp" export * }
  module "signals2__detail__slot_call_iterator" { header "signals2/detail/slot_call_iterator.hpp" export * }
  module "signals2__detail__slot_groups" { header "signals2/detail/slot_groups.hpp" export * }
  module "signals2__detail__tracked_objects_visitor" { header "signals2/detail/tracked_objects_visitor.hpp" export * }
  module "signals2__detail__unique_lock" { header "signals2/detail/unique_lock.hpp" export * }
  module "signals2__detail__variadic_arg_type" { header "signals2/detail/variadic_arg_type.hpp" export * }
  module "signals2__dummy_mutex" { header "signals2/dummy_mutex.hpp" export * }
  module "signals2__expired_slot" { header "signals2/expired_slot.hpp" export * }
  module "signals2" { header "signals2.hpp" export * }
  module "signals2__last_value" { header "signals2/last_value.hpp" export * }
  module "signals2__mutex" { header "signals2/mutex.hpp" export * }
  module "signals2__optional_last_value" { header "signals2/optional_last_value.hpp" export * }
  module "signals2__postconstructible" { header "signals2/postconstructible.hpp" export * }
  module "signals2__shared_connection_block" { header "signals2/shared_connection_block.hpp" export * }
  module "signals2__signal_base" { header "signals2/signal_base.hpp" export * }
  module "signals2__signal" { header "signals2/signal.hpp" export * }
  module "signals2__signal_type" { header "signals2/signal_type.hpp" export * }
  module "signals2__slot_base" { header "signals2/slot_base.hpp" export * }
  module "signals2__slot" { header "signals2/slot.hpp" export * }
  module "signals2__trackable" { header "signals2/trackable.hpp" export * }
}
module boost_signals {
  export *
}
module boost_sort {
  export *
  module "sort__sort" { header "sort/sort.hpp" export * }
  module "sort__spreadsort__detail__constants" { header "sort/spreadsort/detail/constants.hpp" export * }
  module "sort__spreadsort__detail__float_sort" { header "sort/spreadsort/detail/float_sort.hpp" export * }
  module "sort__spreadsort__detail__integer_sort" { header "sort/spreadsort/detail/integer_sort.hpp" export * }
  module "sort__spreadsort__detail__spreadsort_common" { header "sort/spreadsort/detail/spreadsort_common.hpp" export * }
  module "sort__spreadsort__detail__string_sort" { header "sort/spreadsort/detail/string_sort.hpp" export * }
  module "sort__spreadsort__float_sort" { header "sort/spreadsort/float_sort.hpp" export * }
  module "sort__spreadsort__integer_sort" { header "sort/spreadsort/integer_sort.hpp" export * }
  module "sort__spreadsort__spreadsort" { header "sort/spreadsort/spreadsort.hpp" export * }
  module "sort__spreadsort__string_sort" { header "sort/spreadsort/string_sort.hpp" export * }
}
module boost_statechart {
  export *
  module "statechart__custom_reaction" { header "statechart/custom_reaction.hpp" export * }
  module "statechart__deep_history" { header "statechart/deep_history.hpp" export * }
  module "statechart__deferral" { header "statechart/deferral.hpp" export * }
  module "statechart__detail__avoid_unused_warning" { header "statechart/detail/avoid_unused_warning.hpp" export * }
  module "statechart__detail__constructor" { header "statechart/detail/constructor.hpp" export * }
  // Textual header, needs BOOST_ASSERT
  /*
  In file included from <module-includes>:6:
  /home/travis/build/Teemperor/boost-compile/inc/boost/statechart/detail/counted_base.hpp:79:7: error:
        use of undeclared identifier 'BOOST_ASSERT'
        BOOST_ASSERT( base_type::count_ > 0 );
        ^
  */
  //module "statechart__detail__counted_base" { header "statechart/detail/counted_base.hpp" export * }
  module "statechart__detail__leaf_state" { header "statechart/detail/leaf_state.hpp" export * }
  module "statechart__detail__memory" { header "statechart/detail/memory.hpp" export * }
  module "statechart__detail__node_state" { header "statechart/detail/node_state.hpp" export * }
  module "statechart__detail__reaction_dispatcher" { header "statechart/detail/reaction_dispatcher.hpp" export * }
  module "statechart__detail__rtti_policy" { header "statechart/detail/rtti_policy.hpp" export * }
  module "statechart__detail__state_base" { header "statechart/detail/state_base.hpp" export * }
  module "statechart__event_base" { header "statechart/event_base.hpp" export * }
  module "statechart__event" { header "statechart/event.hpp" export * }
  module "statechart__event_processor" { header "statechart/event_processor.hpp" export * }
  module "statechart__exception_translator" { header "statechart/exception_translator.hpp" export * }
  module "statechart__history" { header "statechart/history.hpp" export * }
  module "statechart__in_state_reaction" { header "statechart/in_state_reaction.hpp" export * }
  module "statechart__null_exception_translator" { header "statechart/null_exception_translator.hpp" export * }
  module "statechart__processor_container" { header "statechart/processor_container.hpp" export * }
  module "statechart__result" { header "statechart/result.hpp" export * }
  module "statechart__shallow_history" { header "statechart/shallow_history.hpp" export * }
  module "statechart__simple_state" { header "statechart/simple_state.hpp" export * }
  module "statechart__state" { header "statechart/state.hpp" export * }
  module "statechart__state_machine" { header "statechart/state_machine.hpp" export * }
  module "statechart__termination" { header "statechart/termination.hpp" export * }
  module "statechart__transition" { header "statechart/transition.hpp" export * }
}
module boost_static_assert { export * module "static_assert" { header "static_assert.hpp" export * } }
module boost_swap { export * module "swap" { header "swap.hpp" export * } }
module boost_system {
  export *
  module "system__api_config" { header "system/api_config.hpp" export * }
  module "system__config" { header "system/config.hpp" export * }
  module "system__cygwin_error" { header "system/cygwin_error.hpp" export * }
  module "system__windows_error" { header "system/windows_error.hpp" export * }
}
module boost_test {
  export *
  module "test__autounittest" { header "test/auto_unit_test.hpp" export * }
  module "test__data__config" { header "test/data/config.hpp" export * }
  module "test__data__for_each_sample" { header "test/data/for_each_sample.hpp" export * }
  module "test__data__index_sequence" { header "test/data/index_sequence.hpp" export * }
  module "test__data__monomorphic__array" { header "test/data/monomorphic/array.hpp" export * }
  module "test__data__monomorphic__collection" { header "test/data/monomorphic/collection.hpp" export * }
  module "test__data__monomorphic__fwd" { header "test/data/monomorphic/fwd.hpp" export * }
  module "test__data__monomorphic__generators__keywords" { header "test/data/monomorphic/generators/keywords.hpp" export * }
  module "test__data__monomorphic__initializer_list" { header "test/data/monomorphic/initializer_list.hpp" export * }
  module "test__data__monomorphic__sample_merge" { header "test/data/monomorphic/sample_merge.hpp" export * }
  module "test__data__monomorphic__singleton" { header "test/data/monomorphic/singleton.hpp" export * }
  module "test__data__size" { header "test/data/size.hpp" export * }
  module "test__debug_config" { header "test/debug_config.hpp" export * }
  module "test__debug" { header "test/debug.hpp" export * }
  module "test__detail__config" { header "test/detail/config.hpp" export * }
  module "test__detail__enable_warnings" { header "test/detail/enable_warnings.hpp" export * }
  module "test__detail__fwd_decl" { header "test/detail/fwd_decl.hpp" export * }
  module "test__detail__global_typedef" { header "test/detail/global_typedef.hpp" export * }
  module "test__detail__log_level" { header "test/detail/log_level.hpp" export * }
  module "test__detail__pp_variadic" { header "test/detail/pp_variadic.hpp" export * }
  module "test__detail__suppress_warnings" { header "test/detail/suppress_warnings.hpp" export * }
  module "test__detail__throw_exception" { header "test/detail/throw_exception.hpp" export * }
  module "test__execution_monitor" { header "test/execution_monitor.hpp" export * }
  module "test__floating_point_comparison" { header "test/floating_point_comparison.hpp" export * }
  module "test__framework" { header "test/framework.hpp" export * }
  module "test__included__execution_monitor" { header "test/included/execution_monitor.hpp" export * }
  module "test__output__compiler_log_formatter" { header "test/output/compiler_log_formatter.hpp" export * }
  module "test__output__junit_log_formatter" { header "test/output/junit_log_formatter.hpp" export * }
  module "test__output__plain_report_formatter" { header "test/output/plain_report_formatter.hpp" export * }
  module "test__output_test_stream" { header "test/output_test_stream.hpp" export * }
  module "test__output__xml_log_formatter" { header "test/output/xml_log_formatter.hpp" export * }
  module "test__output__xml_report_formatter" { header "test/output/xml_report_formatter.hpp" export * }
  module "test__parameterized_test" { header "test/parameterized_test.hpp" export * }
  module "test__predicate_result" { header "test/predicate_result.hpp" export * }
  module "test__prg_exec_monitor" { header "test/prg_exec_monitor.hpp" export * }
  module "test__results_reporter" { header "test/results_reporter.hpp" export * }
  module "test__tools__assertion" { header "test/tools/assertion.hpp" export * }
  module "test__tools__assertion_result" { header "test/tools/assertion_result.hpp" export * }
  module "test__tools__context" { header "test/tools/context.hpp" export * }
  module "test__tools__cstring_comparison_op" { header "test/tools/cstring_comparison_op.hpp" export * }
  module "test__tools__detail__bitwise_manip" { header "test/tools/detail/bitwise_manip.hpp" export * }
  module "test__tools__detail__fwd" { header "test/tools/detail/fwd.hpp" export * }
  module "test__tools__detail__indirections" { header "test/tools/detail/indirections.hpp" export * }
  module "test__tools__detail__it_pair" { header "test/tools/detail/it_pair.hpp" export * }
  module "test__tools__detail__print_helper" { header "test/tools/detail/print_helper.hpp" export * }
  module "test__tools__detail__tolerance_manip" { header "test/tools/detail/tolerance_manip.hpp" export * }
  module "test__tools__floating_point_comparison" { header "test/tools/floating_point_comparison.hpp" export * }
  module "test__tools__fpc_op" { header "test/tools/fpc_op.hpp" export * }
  module "test__tools__fpc_tolerance" { header "test/tools/fpc_tolerance.hpp" export * }
  module "test__tools__old__interface" { header "test/tools/old/interface.hpp" export * }
  module "test__tools__output_test_stream" { header "test/tools/output_test_stream.hpp" export * }
  module "test__tree__auto_registration" { header "test/tree/auto_registration.hpp" export * }
  module "test__tree__decorator" { header "test/tree/decorator.hpp" export * }
  module "test__tree__fixture" { header "test/tree/fixture.hpp" export * }
  module "test__tree__global_fixture" { header "test/tree/global_fixture.hpp" export * }
  module "test__tree__observer" { header "test/tree/observer.hpp" export * }
  module "test__tree__test_case_counter" { header "test/tree/test_case_counter.hpp" export * }
  module "test__tree__test_unit" { header "test/tree/test_unit.hpp" export * }
  module "test__tree__traverse" { header "test/tree/traverse.hpp" export * }
  module "test__tree__visitor" { header "test/tree/visitor.hpp" export * }
  module "test__unit_test_log_formatter" { header "test/unit_test_log_formatter.hpp" export * }
  module "test__unit_test_parameters" { header "test/unit_test_parameters.hpp" export * }
  module "test__unit_test_suite" { header "test/unit_test_suite.hpp" export * }
  module "test__utils__algorithm" { header "test/utils/algorithm.hpp" export * }
  module "test__utils__assign_op" { header "test/utils/assign_op.hpp" export * }
  module "test__utils__basic_cstring__basic_cstring_fwd" { header "test/utils/basic_cstring/basic_cstring_fwd.hpp" export * }
  module "test__utils__basic_cstring__basic_cstring" { header "test/utils/basic_cstring/basic_cstring.hpp" export * }
  module "test__utils__basic_cstring__bcs_char_traits" { header "test/utils/basic_cstring/bcs_char_traits.hpp" export * }
  module "test__utils__basic_cstring__compare" { header "test/utils/basic_cstring/compare.hpp" export * }
  module "test__utils__basic_cstring__io" { header "test/utils/basic_cstring/io.hpp" export * }
  module "test__utils__class_properties" { header "test/utils/class_properties.hpp" export * }
  module "test__utils__custom_manip" { header "test/utils/custom_manip.hpp" export * }
  module "test__utils__foreach" { header "test/utils/foreach.hpp" export * }
  module "test__utils__is_cstring" { header "test/utils/is_cstring.hpp" export * }
  module "test__utils__is_forward_iterable" { header "test/utils/is_forward_iterable.hpp" export * }
  module "test__utils__iterator__input_iterator_facade" { header "test/utils/iterator/input_iterator_facade.hpp" export * }
  module "test__utils__iterator__token_iterator" { header "test/utils/iterator/token_iterator.hpp" export * }
  module "test__utils__lazy_ostream" { header "test/utils/lazy_ostream.hpp" export * }
  module "test__utils__named_params" { header "test/utils/named_params.hpp" export * }
  module "test__utils__nullstream" { header "test/utils/nullstream.hpp" export * }
  module "test__utils__rtti" { header "test/utils/rtti.hpp" export * }
  module "test__utils__runtime__argument" { header "test/utils/runtime/argument.hpp" export * }
  module "test__utils__runtime__errors" { header "test/utils/runtime/errors.hpp" export * }
  module "test__utils__runtime__fwd" { header "test/utils/runtime/fwd.hpp" export * }
  module "test__utils__setcolor" { header "test/utils/setcolor.hpp" export * }
  module "test__utils__string_cast" { header "test/utils/string_cast.hpp" export * }
  module "test__utils__wrap_stringstream" { header "test/utils/wrap_stringstream.hpp" export * }
}
// So those two modules both define boost::timer as either a namespace or a class
// and it even breaks normal compilation to include them. Let's just seperate
// them and no one shall include them ever at the same time.
module boost_timer2 {
  export *
  module "timer__config" { header "timer/config.hpp" export * }
  module "timer__timer" { header "timer/timer.hpp" export * }
  conflict boost_timer, "redefines boost::timer namespace as a class"
}
module boost_timer { header "timer.hpp" export * }

module boost_token_iterator { export * module "token_iterator" { header "token_iterator.hpp" export * } }
module boost_tokenizer { export * module "tokenizer" { header "tokenizer.hpp" export * } }
module boost_tti {
  export *
  module "tti__detail__dcomp_mem_fun" { header "tti/detail/dcomp_mem_fun.hpp" export * }
  module "tti__detail__ddata" { header "tti/detail/ddata.hpp" export * }
  module "tti__detail__ddeftype" { header "tti/detail/ddeftype.hpp" export * }
  module "tti__detail__dftclass" { header "tti/detail/dftclass.hpp" export * }
  module "tti__detail__dfunction" { header "tti/detail/dfunction.hpp" export * }
  module "tti__detail__dlambda" { header "tti/detail/dlambda.hpp" export * }
  module "tti__detail__dmem_data" { header "tti/detail/dmem_data.hpp" export * }
  module "tti__detail__dmem_fun" { header "tti/detail/dmem_fun.hpp" export * }
  module "tti__detail__dmem_type" { header "tti/detail/dmem_type.hpp" export * }
  module "tti__detail__dmetafunc" { header "tti/detail/dmetafunc.hpp" export * }
  module "tti__detail__dnotype" { header "tti/detail/dnotype.hpp" export * }
  module "tti__detail__dnullptr" { header "tti/detail/dnullptr.hpp" export * }
  module "tti__detail__dplaceholder" { header "tti/detail/dplaceholder.hpp" export * }
  module "tti__detail__dptmf" { header "tti/detail/dptmf.hpp" export * }
  module "tti__detail__dstatic_mem_data" { header "tti/detail/dstatic_mem_data.hpp" export * }
  module "tti__detail__dstatic_mem_fun" { header "tti/detail/dstatic_mem_fun.hpp" export * }
  module "tti__detail__dtclass" { header "tti/detail/dtclass.hpp" export * }
  module "tti__detail__dtemplate" { header "tti/detail/dtemplate.hpp" export * }
  module "tti__detail__dtemplate_params" { header "tti/detail/dtemplate_params.hpp" export * }
  module "tti__detail__dtfunction" { header "tti/detail/dtfunction.hpp" export * }
  module "tti__detail__dtype" { header "tti/detail/dtype.hpp" export * }
  module "tti__detail__dvm_template_params" { header "tti/detail/dvm_template_params.hpp" export * }
  module "tti__gen__has_data_gen" { header "tti/gen/has_data_gen.hpp" export * }
  module "tti__gen__has_function_gen" { header "tti/gen/has_function_gen.hpp" export * }
  module "tti__gen__has_member_data_gen" { header "tti/gen/has_member_data_gen.hpp" export * }
  module "tti__gen__has_member_function_gen" { header "tti/gen/has_member_function_gen.hpp" export * }
  module "tti__gen__has_static_member_data_gen" { header "tti/gen/has_static_member_data_gen.hpp" export * }
  module "tti__gen__has_static_member_function_gen" { header "tti/gen/has_static_member_function_gen.hpp" export * }
  module "tti__gen__has_template_gen" { header "tti/gen/has_template_gen.hpp" export * }
  module "tti__gen__has_type_gen" { header "tti/gen/has_type_gen.hpp" export * }
  module "tti__gen__member_type_gen" { header "tti/gen/member_type_gen.hpp" export * }
  module "tti__gen__namespace_gen" { header "tti/gen/namespace_gen.hpp" export * }
  module "tti__has_data" { header "tti/has_data.hpp" export * }
  module "tti__has_function" { header "tti/has_function.hpp" export * }
  module "tti__has_member_data" { header "tti/has_member_data.hpp" export * }
  module "tti__has_member_function" { header "tti/has_member_function.hpp" export * }
  module "tti__has_static_member_data" { header "tti/has_static_member_data.hpp" export * }
  module "tti__has_static_member_function" { header "tti/has_static_member_function.hpp" export * }
  module "tti__has_template" { header "tti/has_template.hpp" export * }
  module "tti__has_type" { header "tti/has_type.hpp" export * }
  module "tti__member_type" { header "tti/member_type.hpp" export * }
  module "tti__tti" { header "tti/tti.hpp" export * }
}
module boost_type_erasure {
  export *
  module "type_erasure__any_cast" { header "type_erasure/any_cast.hpp" export * }
  module "type_erasure__any" { header "type_erasure/any.hpp" export * }
  module "type_erasure__binding" { header "type_erasure/binding.hpp" export * }
  module "type_erasure__binding_of" { header "type_erasure/binding_of.hpp" export * }
  module "type_erasure__builtin" { header "type_erasure/builtin.hpp" export * }
  module "type_erasure__call" { header "type_erasure/call.hpp" export * }
  module "type_erasure__concept_interface" { header "type_erasure/concept_interface.hpp" export * }
  module "type_erasure__concept_of" { header "type_erasure/concept_of.hpp" export * }
  module "type_erasure__config" { header "type_erasure/config.hpp" export * }
  module "type_erasure__constructible" { header "type_erasure/constructible.hpp" export * }
  module "type_erasure__deduced" { header "type_erasure/deduced.hpp" export * }
  module "type_erasure__derived" { header "type_erasure/derived.hpp" export * }
  module "type_erasure__detail__access" { header "type_erasure/detail/access.hpp" export * }
  module "type_erasure__detail__any_base" { header "type_erasure/detail/any_base.hpp" export * }
  module "type_erasure__detail__auto_link" { header "type_erasure/detail/auto_link.hpp" export * }
  module "type_erasure__detail__check_map" { header "type_erasure/detail/check_map.hpp" export * }
  module "type_erasure__detail__const" { header "type_erasure/detail/const.hpp" export * }
  module "type_erasure__detail__dynamic_vtable" { header "type_erasure/detail/dynamic_vtable.hpp" export * }
  module "type_erasure__detail__extract_concept" { header "type_erasure/detail/extract_concept.hpp" export * }
  module "type_erasure__detail__get_placeholders" { header "type_erasure/detail/get_placeholders.hpp" export * }
  module "type_erasure__detail__get_signature" { header "type_erasure/detail/get_signature.hpp" export * }
  module "type_erasure__detail__instantiate" { header "type_erasure/detail/instantiate.hpp" export * }
  module "type_erasure__detail__macro" { header "type_erasure/detail/macro.hpp" export * }
  module "type_erasure__detail__normalize" { header "type_erasure/detail/normalize.hpp" export * }
  module "type_erasure__detail__null" { header "type_erasure/detail/null.hpp" export * }
  module "type_erasure__detail__rebind_placeholders" { header "type_erasure/detail/rebind_placeholders.hpp" export * }
  module "type_erasure__detail__storage" { header "type_erasure/detail/storage.hpp" export * }
  module "type_erasure__detail__vtable" { header "type_erasure/detail/vtable.hpp" export * }
  module "type_erasure__dynamic_any_cast" { header "type_erasure/dynamic_any_cast.hpp" export * }
  module "type_erasure__dynamic_binding" { header "type_erasure/dynamic_binding.hpp" export * }
  module "type_erasure__exception" { header "type_erasure/exception.hpp" export * }
  module "type_erasure__free" { header "type_erasure/free.hpp" export * }
  module "type_erasure__is_empty" { header "type_erasure/is_empty.hpp" export * }
  module "type_erasure__is_placeholder" { header "type_erasure/is_placeholder.hpp" export * }
  module "type_erasure__is_subconcept" { header "type_erasure/is_subconcept.hpp" export * }
  module "type_erasure__iterator" { header "type_erasure/iterator.hpp" export * }
  module "type_erasure__member" { header "type_erasure/member.hpp" export * }
  module "type_erasure__operators" { header "type_erasure/operators.hpp" export * }
  module "type_erasure__param" { header "type_erasure/param.hpp" export * }
  module "type_erasure__placeholder" { header "type_erasure/placeholder.hpp" export * }
  module "type_erasure__placeholder_of" { header "type_erasure/placeholder_of.hpp" export * }
  module "type_erasure__rebind_any" { header "type_erasure/rebind_any.hpp" export * }
  module "type_erasure__register_binding" { header "type_erasure/register_binding.hpp" export * }
  module "type_erasure__relaxed" { header "type_erasure/relaxed.hpp" export * }
  module "type_erasure__same_type" { header "type_erasure/same_type.hpp" export * }
  module "type_erasure__static_binding" { header "type_erasure/static_binding.hpp" export * }
  module "type_erasure__tuple" { header "type_erasure/tuple.hpp" export * }
  module "type_erasure__typeid_of" { header "type_erasure/typeid_of.hpp" export * }
}
module boost_type { export * module "type" { header "type.hpp" export * } }
module boost_type_index {
  export *
  module "type_index__ctti_type_index" { header "type_index/ctti_type_index.hpp" export * }
  module "type_index__detail__compile_time_type_info" { header "type_index/detail/compile_time_type_info.hpp" export * }
  module "type_index__detail__ctti_register_class" { header "type_index/detail/ctti_register_class.hpp" export * }
  module "type_index__detail__stl_register_class" { header "type_index/detail/stl_register_class.hpp" export * }
  module "type_index" { header "type_index.hpp" export * }
  module "type_index__runtime_cast__boost_shared_ptr_cast" { header "type_index/runtime_cast/boost_shared_ptr_cast.hpp" export * }
  module "type_index__runtime_cast__detail__runtime_cast_impl" { header "type_index/runtime_cast/detail/runtime_cast_impl.hpp" export * }
  module "type_index__runtime_cast" { header "type_index/runtime_cast.hpp" export * }
  module "type_index__runtime_cast__pointer_cast" { header "type_index/runtime_cast/pointer_cast.hpp" export * }
  module "type_index__runtime_cast__reference_cast" { header "type_index/runtime_cast/reference_cast.hpp" export * }
  module "type_index__runtime_cast__register_runtime_class" { header "type_index/runtime_cast/register_runtime_class.hpp" export * }
  module "type_index__runtime_cast__std_shared_ptr_cast" { header "type_index/runtime_cast/std_shared_ptr_cast.hpp" export * }
  module "type_index__stl_type_index" { header "type_index/stl_type_index.hpp" export * }
  module "type_index__type_index_facade" { header "type_index/type_index_facade.hpp" export * }
}
module boost_typeof {
  export *
  module "typeof__encode_decode" { header "typeof/encode_decode.hpp" export * }
  module "typeof__encode_decode_params" { header "typeof/encode_decode_params.hpp" export * }
  module "typeof__incr_registration_group" { header "typeof/incr_registration_group.hpp" export * }
  module "typeof__integral_template_param" { header "typeof/integral_template_param.hpp" export * }
  module "typeof__message" { header "typeof/message.hpp" export * }
  module "typeof__native" { header "typeof/native.hpp" export * }
  module "typeof__register_fundamental" { header "typeof/register_fundamental.hpp" export * }
  module "typeof__std__bitset" { header "typeof/std/bitset.hpp" export * }
  module "typeof__std__complex" { header "typeof/std/complex.hpp" export * }
  module "typeof__std__deque" { header "typeof/std/deque.hpp" export * }
  module "typeof__std__fstream" { header "typeof/std/fstream.hpp" export * }
  module "typeof__std__functional" { header "typeof/std/functional.hpp" export * }
  module "typeof__std__iostream" { header "typeof/std/iostream.hpp" export * }
  module "typeof__std__istream" { header "typeof/std/istream.hpp" export * }
  module "typeof__std__iterator" { header "typeof/std/iterator.hpp" export * }
  module "typeof__std__list" { header "typeof/std/list.hpp" export * }
  module "typeof__std__locale" { header "typeof/std/locale.hpp" export * }
  module "typeof__std__map" { header "typeof/std/map.hpp" export * }
  module "typeof__std__memory" { header "typeof/std/memory.hpp" export * }
  module "typeof__std__ostream" { header "typeof/std/ostream.hpp" export * }
  module "typeof__std__queue" { header "typeof/std/queue.hpp" export * }
  module "typeof__std__set" { header "typeof/std/set.hpp" export * }
  module "typeof__std__sstream" { header "typeof/std/sstream.hpp" export * }
  module "typeof__std__stack" { header "typeof/std/stack.hpp" export * }
  module "typeof__std__streambuf" { header "typeof/std/streambuf.hpp" export * }
  module "typeof__std__string" { header "typeof/std/string.hpp" export * }
  module "typeof__std__utility" { header "typeof/std/utility.hpp" export * }
  module "typeof__std__valarray" { header "typeof/std/valarray.hpp" export * }
  module "typeof__std__vector" { header "typeof/std/vector.hpp" export * }
  module "typeof__type_encoding" { header "typeof/type_encoding.hpp" export * }
  module "typeof__typeof" { header "typeof/typeof.hpp" export * }
  module "typeof__typeof_impl" { header "typeof/typeof_impl.hpp" export * }
  module "typeof__type_template_param" { header "typeof/type_template_param.hpp" export * }
  module "typeof__unsupported" { header "typeof/unsupported.hpp" export * }
  module "typeof__vector" { header "typeof/vector.hpp" export * }
}
module boost_type_traits {
  export *
  module "type_traits__add_const" { header "type_traits/add_const.hpp" export * }
  module "type_traits__add_cv" { header "type_traits/add_cv.hpp" export * }
  module "type_traits__add_lvalue_reference" { header "type_traits/add_lvalue_reference.hpp" export * }
  module "type_traits__add_pointer" { header "type_traits/add_pointer.hpp" export * }
  module "type_traits__add_reference" { header "type_traits/add_reference.hpp" export * }
  module "type_traits__add_rvalue_reference" { header "type_traits/add_rvalue_reference.hpp" export * }
  module "type_traits__add_volatile" { header "type_traits/add_volatile.hpp" export * }
  module "type_traits__aligned_storage" { header "type_traits/aligned_storage.hpp" export * }
  module "type_traits__alignment_of" { header "type_traits/alignment_of.hpp" export * }
  module "type_traits__alignment_traits" { header "type_traits/alignment_traits.hpp" export * }
  module "type_traits__arithmetic_traits" { header "type_traits/arithmetic_traits.hpp" export * }
  module "type_traits__array_traits" { header "type_traits/array_traits.hpp" export * }
  // deprecated: module "type_traits__broken_compiler_spec" { header "type_traits/broken_compiler_spec.hpp" export * }
  module "type_traits__common_type" { header "type_traits/common_type.hpp" export * }
  module "type_traits__composite_traits" { header "type_traits/composite_traits.hpp" export * }
  module "type_traits__conditional" { header "type_traits/conditional.hpp" export * }
  // deprecated: module "type_traits__config" { header "type_traits/config.hpp" export * }
  module "type_traits__conversion_traits" { header "type_traits/conversion_traits.hpp" export * }
  module "type_traits__copy_cv" { header "type_traits/copy_cv.hpp" export * }
  module "type_traits__cv_traits" { header "type_traits/cv_traits.hpp" export * }
  module "type_traits__decay" { header "type_traits/decay.hpp" export * }
  module "type_traits__declval" { header "type_traits/declval.hpp" export * }
  //module "type_traits__detail__bool_trait_def" { header "type_traits/detail/bool_trait_def.hpp" export * }
  //module "type_traits__detail__bool_trait_undef" { header "type_traits/detail/bool_trait_undef.hpp" export * }
  module "type_traits__detail__common_arithmetic_type" { header "type_traits/detail/common_arithmetic_type.hpp" export * }
  // Breaks lookup somehow:
  /*
  In module 'boost_type_traits' imported from /home/teemperor/boost-compile/inc/boost/thread/detail/move.hpp:13:
/home/teemperor/boost-compile/inc/boost/type_traits/common_type.hpp:133:79: error: missing '#include "boost/type_traits/detail/common_type_impl.hpp"'; definition of 'common_type_impl<T, T>'
      must be imported from module 'boost_type_traits.type_traits__detail__common_type_impl' before it is required
template<class T1, class T2> struct common_type_decay_helper<T1, T2, T1, T2>: common_type_impl<T1, T2>
                                                                              ^
  */
  // module "type_traits__detail__common_type_impl" { header "type_traits/detail/common_type_impl.hpp" export * }
  module "type_traits__detail__composite_member_pointer_type" { header "type_traits/detail/composite_member_pointer_type.hpp" export * }
  module "type_traits__detail__composite_pointer_type" { header "type_traits/detail/composite_pointer_type.hpp" export * }
  module "type_traits__detail__config" { header "type_traits/detail/config.hpp" export * }
  // deprecated: module "type_traits__detail__ice_and" { header "type_traits/detail/ice_and.hpp" export * }
  // deprecated: module "type_traits__detail__ice_eq" { header "type_traits/detail/ice_eq.hpp" export * }
  // deprecated: module "type_traits__detail__ice_not" { header "type_traits/detail/ice_not.hpp" export * }
  // deprecated: module "type_traits__detail__ice_or" { header "type_traits/detail/ice_or.hpp" export * }
  module "type_traits__detail__is_mem_fun_pointer_impl" { header "type_traits/detail/is_mem_fun_pointer_impl.hpp" export * }
  module "type_traits__detail__is_mem_fun_pointer_tester" { header "type_traits/detail/is_mem_fun_pointer_tester.hpp" export * }
  module "type_traits__detail__mp_defer" { header "type_traits/detail/mp_defer.hpp" export * }
  // deprecated: module "type_traits__detail__template_arity_spec" { header "type_traits/detail/template_arity_spec.hpp" export * }
  module "type_traits__detail__yes_no_type" { header "type_traits/detail/yes_no_type.hpp" export * }
  module "type_traits__extent" { header "type_traits/extent.hpp" export * }
  module "type_traits__floating_point_promotion" { header "type_traits/floating_point_promotion.hpp" export * }
  module "type_traits__function_traits" { header "type_traits/function_traits.hpp" export * }
  module "type_traits__has_bit_and_assign" { header "type_traits/has_bit_and_assign.hpp" export * }
  module "type_traits__has_bit_and" { header "type_traits/has_bit_and.hpp" export * }
  module "type_traits__has_bit_or_assign" { header "type_traits/has_bit_or_assign.hpp" export * }
  module "type_traits__has_bit_or" { header "type_traits/has_bit_or.hpp" export * }
  module "type_traits__has_bit_xor_assign" { header "type_traits/has_bit_xor_assign.hpp" export * }
  module "type_traits__has_bit_xor" { header "type_traits/has_bit_xor.hpp" export * }
  module "type_traits__has_complement" { header "type_traits/has_complement.hpp" export * }
  module "type_traits__has_dereference" { header "type_traits/has_dereference.hpp" export * }
  module "type_traits__has_divides_assign" { header "type_traits/has_divides_assign.hpp" export * }
  module "type_traits__has_divides" { header "type_traits/has_divides.hpp" export * }
  module "type_traits__has_equal_to" { header "type_traits/has_equal_to.hpp" export * }
  module "type_traits__has_greater_equal" { header "type_traits/has_greater_equal.hpp" export * }
  module "type_traits__has_greater" { header "type_traits/has_greater.hpp" export * }
  module "type_traits__has_left_shift_assign" { header "type_traits/has_left_shift_assign.hpp" export * }
  module "type_traits__has_left_shift" { header "type_traits/has_left_shift.hpp" export * }
  module "type_traits__has_less_equal" { header "type_traits/has_less_equal.hpp" export * }
  module "type_traits__has_less" { header "type_traits/has_less.hpp" export * }
  module "type_traits__has_logical_and" { header "type_traits/has_logical_and.hpp" export * }
  module "type_traits__has_logical_not" { header "type_traits/has_logical_not.hpp" export * }
  module "type_traits__has_logical_or" { header "type_traits/has_logical_or.hpp" export * }
  module "type_traits__has_minus_assign" { header "type_traits/has_minus_assign.hpp" export * }
  module "type_traits__has_minus" { header "type_traits/has_minus.hpp" export * }
  module "type_traits__has_modulus_assign" { header "type_traits/has_modulus_assign.hpp" export * }
  module "type_traits__has_modulus" { header "type_traits/has_modulus.hpp" export * }
  module "type_traits__has_multiplies_assign" { header "type_traits/has_multiplies_assign.hpp" export * }
  module "type_traits__has_multiplies" { header "type_traits/has_multiplies.hpp" export * }
  module "type_traits__has_negate" { header "type_traits/has_negate.hpp" export * }
  module "type_traits__has_new_operator" { header "type_traits/has_new_operator.hpp" export * }
  module "type_traits__has_not_equal_to" { header "type_traits/has_not_equal_to.hpp" export * }
  module "type_traits__has_nothrow_assign" { header "type_traits/has_nothrow_assign.hpp" export * }
  module "type_traits__has_nothrow_constructor" { header "type_traits/has_nothrow_constructor.hpp" export * }
  module "type_traits__has_nothrow_copy" { header "type_traits/has_nothrow_copy.hpp" export * }
  module "type_traits__has_nothrow_destructor" { header "type_traits/has_nothrow_destructor.hpp" export * }
  module "type_traits__has_operator" { header "type_traits/has_operator.hpp" export * }
  module "type_traits__has_plus_assign" { header "type_traits/has_plus_assign.hpp" export * }
  module "type_traits__has_plus" { header "type_traits/has_plus.hpp" export * }
  module "type_traits__has_post_decrement" { header "type_traits/has_post_decrement.hpp" export * }
  module "type_traits__has_post_increment" { header "type_traits/has_post_increment.hpp" export * }
  module "type_traits__has_pre_decrement" { header "type_traits/has_pre_decrement.hpp" export * }
  module "type_traits__has_pre_increment" { header "type_traits/has_pre_increment.hpp" export * }
  module "type_traits__has_right_shift_assign" { header "type_traits/has_right_shift_assign.hpp" export * }
  module "type_traits__has_right_shift" { header "type_traits/has_right_shift.hpp" export * }
  module "type_traits__has_trivial_assign" { header "type_traits/has_trivial_assign.hpp" export * }
  module "type_traits__has_trivial_constructor" { header "type_traits/has_trivial_constructor.hpp" export * }
  module "type_traits__has_trivial_copy" { header "type_traits/has_trivial_copy.hpp" export * }
  module "type_traits__has_trivial_destructor" { header "type_traits/has_trivial_destructor.hpp" export * }
  module "type_traits__has_trivial_move_assign" { header "type_traits/has_trivial_move_assign.hpp" export * }
  module "type_traits__has_trivial_move_constructor" { header "type_traits/has_trivial_move_constructor.hpp" export * }
  module "type_traits__has_unary_minus" { header "type_traits/has_unary_minus.hpp" export * }
  module "type_traits__has_unary_plus" { header "type_traits/has_unary_plus.hpp" export * }
  module "type_traits__has_virtual_destructor" { header "type_traits/has_virtual_destructor.hpp" export * }
  module "type_traits" { header "type_traits.hpp" export * }
  // deprecated: module "type_traits__ice" { header "type_traits/ice.hpp" export * }
  module "type_traits__integral_constant" { header "type_traits/integral_constant.hpp" export * }
  module "type_traits__integral_promotion" { header "type_traits/integral_promotion.hpp" export * }
  module "type_traits__intrinsics" { header "type_traits/intrinsics.hpp" export * }
  module "type_traits__is_abstract" { header "type_traits/is_abstract.hpp" export * }
  module "type_traits__is_arithmetic" { header "type_traits/is_arithmetic.hpp" export * }
  module "type_traits__is_array" { header "type_traits/is_array.hpp" export * }
  module "type_traits__is_assignable" { header "type_traits/is_assignable.hpp" export * }
  module "type_traits__is_base_and_derived" { header "type_traits/is_base_and_derived.hpp" export * }
  module "type_traits__is_base_of" { header "type_traits/is_base_of.hpp" export * }
  module "type_traits__is_base_of_tr1" { header "type_traits/is_base_of_tr1.hpp" export * }
  module "type_traits__is_class" { header "type_traits/is_class.hpp" export * }
  module "type_traits__is_complex" { header "type_traits/is_complex.hpp" export * }
  module "type_traits__is_compound" { header "type_traits/is_compound.hpp" export * }
  module "type_traits__is_const" { header "type_traits/is_const.hpp" export * }
  module "type_traits__is_constructible" { header "type_traits/is_constructible.hpp" export * }
  module "type_traits__is_convertible" { header "type_traits/is_convertible.hpp" export * }
  module "type_traits__is_copy_assignable" { header "type_traits/is_copy_assignable.hpp" export * }
  module "type_traits__is_copy_constructible" { header "type_traits/is_copy_constructible.hpp" export * }
  module "type_traits__is_default_constructible" { header "type_traits/is_default_constructible.hpp" export * }
  module "type_traits__is_destructible" { header "type_traits/is_destructible.hpp" export * }
  module "type_traits__is_empty" { header "type_traits/is_empty.hpp" export * }
  module "type_traits__is_enum" { header "type_traits/is_enum.hpp" export * }
  module "type_traits__is_final" { header "type_traits/is_final.hpp" export * }
  module "type_traits__is_float" { header "type_traits/is_float.hpp" export * }
  module "type_traits__is_floating_point" { header "type_traits/is_floating_point.hpp" export * }
  module "type_traits__is_function" { header "type_traits/is_function.hpp" export * }
  module "type_traits__is_fundamental" { header "type_traits/is_fundamental.hpp" export * }
  module "type_traits__is_integral" { header "type_traits/is_integral.hpp" export * }
  module "type_traits__is_lvalue_reference" { header "type_traits/is_lvalue_reference.hpp" export * }
  module "type_traits__is_member_function_pointer" { header "type_traits/is_member_function_pointer.hpp" export * }
  module "type_traits__is_member_object_pointer" { header "type_traits/is_member_object_pointer.hpp" export * }
  module "type_traits__is_member_pointer" { header "type_traits/is_member_pointer.hpp" export * }
  module "type_traits__is_nothrow_move_assignable" { header "type_traits/is_nothrow_move_assignable.hpp" export * }
  module "type_traits__is_nothrow_move_constructible" { header "type_traits/is_nothrow_move_constructible.hpp" export * }
  module "type_traits__is_object" { header "type_traits/is_object.hpp" export * }
  module "type_traits__is_pod" { header "type_traits/is_pod.hpp" export * }
  module "type_traits__is_pointer" { header "type_traits/is_pointer.hpp" export * }
  module "type_traits__is_polymorphic" { header "type_traits/is_polymorphic.hpp" export * }
  module "type_traits__is_reference" { header "type_traits/is_reference.hpp" export * }
  module "type_traits__is_rvalue_reference" { header "type_traits/is_rvalue_reference.hpp" export * }
  module "type_traits__is_same" { header "type_traits/is_same.hpp" export * }
  module "type_traits__is_scalar" { header "type_traits/is_scalar.hpp" export * }
  module "type_traits__is_signed" { header "type_traits/is_signed.hpp" export * }
  module "type_traits__is_stateless" { header "type_traits/is_stateless.hpp" export * }
  module "type_traits__is_union" { header "type_traits/is_union.hpp" export * }
  module "type_traits__is_unsigned" { header "type_traits/is_unsigned.hpp" export * }
  module "type_traits__is_virtual_base_of" { header "type_traits/is_virtual_base_of.hpp" export * }
  module "type_traits__is_void" { header "type_traits/is_void.hpp" export * }
  module "type_traits__is_volatile" { header "type_traits/is_volatile.hpp" export * }
  module "type_traits__make_signed" { header "type_traits/make_signed.hpp" export * }
  module "type_traits__make_unsigned" { header "type_traits/make_unsigned.hpp" export * }
  module "type_traits__make_void" { header "type_traits/make_void.hpp" export * }
  module "type_traits__object_traits" { header "type_traits/object_traits.hpp" export * }
  module "type_traits__promote" { header "type_traits/promote.hpp" export * }
  module "type_traits__rank" { header "type_traits/rank.hpp" export * }
  module "type_traits__reference_traits" { header "type_traits/reference_traits.hpp" export * }
  module "type_traits__remove_all_extents" { header "type_traits/remove_all_extents.hpp" export * }
  module "type_traits__remove_bounds" { header "type_traits/remove_bounds.hpp" export * }
  module "type_traits__remove_const" { header "type_traits/remove_const.hpp" export * }
  module "type_traits__remove_cv" { header "type_traits/remove_cv.hpp" export * }
  module "type_traits__remove_extent" { header "type_traits/remove_extent.hpp" export * }
  module "type_traits__remove_reference" { header "type_traits/remove_reference.hpp" export * }
  module "type_traits__remove_volatile" { header "type_traits/remove_volatile.hpp" export * }
  module "type_traits__same_traits" { header "type_traits/same_traits.hpp" export * }
  module "type_traits__transform_traits" { header "type_traits/transform_traits.hpp" export * }
  module "type_traits__type_identity" { header "type_traits/type_identity.hpp" export * }
  module "type_traits__type_with_alignment" { header "type_traits/type_with_alignment.hpp" export * }
}
module boost_unordered {
  export *
  module "unordered__detail__fwd" { header "unordered/detail/fwd.hpp" export * }
  module "unordered__detail__implementation" { header "unordered/detail/implementation.hpp" export * }
  module "unordered__unordered_map_fwd" { header "unordered/unordered_map_fwd.hpp" export * }
  module "unordered__unordered_map" { header "unordered/unordered_map.hpp" export * }
  module "unordered__unordered_set_fwd" { header "unordered/unordered_set_fwd.hpp" export * }
  module "unordered__unordered_set" { header "unordered/unordered_set.hpp" export * }
}
module boost_unordered_map { export * module "unordered_map" { header "unordered_map.hpp" export * } }
module boost_unordered_set { export * module "unordered_set" { header "unordered_set.hpp" export * } }
module "boost_utility__addressof" { export * header "utility/addressof.hpp" export * }
module "boost_utility__enable_if" { export * header "utility/enable_if.hpp" export * }
module boost_uuid {
  export *
  // Missing includes:
  exclude header "uuid/detail/random_provider.hpp"
  exclude header "uuid/detail/sha1.hpp"
  umbrella "uuid"
  module * { export * }
}
module boost_version { export * module "version" { header "version.hpp" export * } }
module boost_visit_each { export * module "visit_each" { header "visit_each.hpp" export * } }
module boost_vmd {
  export *
  module "vmd__array" { header "vmd/array.hpp" export * }
  module "vmd__array__to_seq" { header "vmd/array/to_seq.hpp" export * }
  module "vmd__array__to_tuple" { header "vmd/array/to_tuple.hpp" export * }
  module "vmd__assert" { header "vmd/assert.hpp" export * }
  module "vmd__assert_is_array" { header "vmd/assert_is_array.hpp" export * }
  module "vmd__assert_is_empty" { header "vmd/assert_is_empty.hpp" export * }
  module "vmd__assert_is_identifier" { header "vmd/assert_is_identifier.hpp" export * }
  module "vmd__assert_is_list" { header "vmd/assert_is_list.hpp" export * }
  module "vmd__assert_is_number" { header "vmd/assert_is_number.hpp" export * }
  module "vmd__assert_is_seq" { header "vmd/assert_is_seq.hpp" export * }
  module "vmd__assert_is_tuple" { header "vmd/assert_is_tuple.hpp" export * }
  module "vmd__assert_is_type" { header "vmd/assert_is_type.hpp" export * }
  module "vmd__detail__adjust_tuple_type" { header "vmd/detail/adjust_tuple_type.hpp" export * }
  module "vmd__detail__array" { header "vmd/detail/array.hpp" export * }
  module "vmd__detail__assert" { header "vmd/detail/assert.hpp" export * }
  module "vmd__detail__data_equal_common" { header "vmd/detail/data_equal_common.hpp" export * }
  module "vmd__detail__data_equal" { header "vmd/detail/data_equal.hpp" export * }
  module "vmd__detail__empty_result" { header "vmd/detail/empty_result.hpp" export * }
  module "vmd__detail__equal_common" { header "vmd/detail/equal_common.hpp" export * }
  module "vmd__detail__equal" { header "vmd/detail/equal.hpp" export * }
  module "vmd__detail__equal_type" { header "vmd/detail/equal_type.hpp" export * }
  module "vmd__detail__identifier_concat" { header "vmd/detail/identifier_concat.hpp" export * }
  module "vmd__detail__identifier" { header "vmd/detail/identifier.hpp" export * }
  module "vmd__detail__identifier_type" { header "vmd/detail/identifier_type.hpp" export * }
  module "vmd__detail__idprefix" { header "vmd/detail/idprefix.hpp" export * }
  module "vmd__detail__is_array_common" { header "vmd/detail/is_array_common.hpp" export * }
  module "vmd__detail__is_array" { header "vmd/detail/is_array.hpp" export * }
  module "vmd__detail__is_empty_array" { header "vmd/detail/is_empty_array.hpp" export * }
  module "vmd__detail__is_empty" { header "vmd/detail/is_empty.hpp" export * }
  module "vmd__detail__is_empty_tuple" { header "vmd/detail/is_empty_tuple.hpp" export * }
  module "vmd__detail__is_entire" { header "vmd/detail/is_entire.hpp" export * }
  module "vmd__detail__is_identifier" { header "vmd/detail/is_identifier.hpp" export * }
  module "vmd__detail__is_list" { header "vmd/detail/is_list.hpp" export * }
  module "vmd__detail__is_number" { header "vmd/detail/is_number.hpp" export * }
  module "vmd__detail__is_seq" { header "vmd/detail/is_seq.hpp" export * }
  module "vmd__detail__is_tuple" { header "vmd/detail/is_tuple.hpp" export * }
  module "vmd__detail__is_type" { header "vmd/detail/is_type.hpp" export * }
  module "vmd__detail__is_type_type" { header "vmd/detail/is_type_type.hpp" export * }
  module "vmd__detail__list" { header "vmd/detail/list.hpp" export * }
  module "vmd__detail__match_identifier_common" { header "vmd/detail/match_identifier_common.hpp" export * }
  module "vmd__detail__match_identifier" { header "vmd/detail/match_identifier.hpp" export * }
  module "vmd__detail__match_single_identifier" { header "vmd/detail/match_single_identifier.hpp" export * }
  module "vmd__detail__modifiers" { header "vmd/detail/modifiers.hpp" export * }
  module "vmd__detail__mods" { header "vmd/detail/mods.hpp" export * }
  module "vmd__detail__nil_registration" { header "vmd/detail/nil_registration.hpp" export * }
  module "vmd__detail__not_empty" { header "vmd/detail/not_empty.hpp" export * }
  module "vmd__detail__number_registration" { header "vmd/detail/number_registration.hpp" export * }
  module "vmd__detail__only_after" { header "vmd/detail/only_after.hpp" export * }
  module "vmd__detail__parens_common" { header "vmd/detail/parens_common.hpp" export * }
  module "vmd__detail__parens" { header "vmd/detail/parens.hpp" export * }
  module "vmd__detail__parens_split" { header "vmd/detail/parens_split.hpp" export * }
  module "vmd__detail__recurse__data_equal__data_equal_10" { header "vmd/detail/recurse/data_equal/data_equal_10.hpp" export * }
  module "vmd__detail__recurse__data_equal__data_equal_11" { header "vmd/detail/recurse/data_equal/data_equal_11.hpp" export * }
  module "vmd__detail__recurse__data_equal__data_equal_12" { header "vmd/detail/recurse/data_equal/data_equal_12.hpp" export * }
  module "vmd__detail__recurse__data_equal__data_equal_13" { header "vmd/detail/recurse/data_equal/data_equal_13.hpp" export * }
  module "vmd__detail__recurse__data_equal__data_equal_14" { header "vmd/detail/recurse/data_equal/data_equal_14.hpp" export * }
  module "vmd__detail__recurse__data_equal__data_equal_15" { header "vmd/detail/recurse/data_equal/data_equal_15.hpp" export * }
  module "vmd__detail__recurse__data_equal__data_equal_16" { header "vmd/detail/recurse/data_equal/data_equal_16.hpp" export * }
  module "vmd__detail__recurse__data_equal__data_equal_1" { header "vmd/detail/recurse/data_equal/data_equal_1.hpp" export * }
  module "vmd__detail__recurse__data_equal__data_equal_2" { header "vmd/detail/recurse/data_equal/data_equal_2.hpp" export * }
  module "vmd__detail__recurse__data_equal__data_equal_3" { header "vmd/detail/recurse/data_equal/data_equal_3.hpp" export * }
  module "vmd__detail__recurse__data_equal__data_equal_4" { header "vmd/detail/recurse/data_equal/data_equal_4.hpp" export * }
  module "vmd__detail__recurse__data_equal__data_equal_5" { header "vmd/detail/recurse/data_equal/data_equal_5.hpp" export * }
  module "vmd__detail__recurse__data_equal__data_equal_6" { header "vmd/detail/recurse/data_equal/data_equal_6.hpp" export * }
  module "vmd__detail__recurse__data_equal__data_equal_7" { header "vmd/detail/recurse/data_equal/data_equal_7.hpp" export * }
  module "vmd__detail__recurse__data_equal__data_equal_8" { header "vmd/detail/recurse/data_equal/data_equal_8.hpp" export * }
  module "vmd__detail__recurse__data_equal__data_equal_9" { header "vmd/detail/recurse/data_equal/data_equal_9.hpp" export * }
  module "vmd__detail__recurse__data_equal__data_equal_headers" { header "vmd/detail/recurse/data_equal/data_equal_headers.hpp" export * }
  module "vmd__detail__recurse__data_equal__data_equal_specific" { header "vmd/detail/recurse/data_equal/data_equal_specific.hpp" export * }
  module "vmd__detail__recurse__equal__equal_10" { header "vmd/detail/recurse/equal/equal_10.hpp" export * }
  module "vmd__detail__recurse__equal__equal_11" { header "vmd/detail/recurse/equal/equal_11.hpp" export * }
  module "vmd__detail__recurse__equal__equal_12" { header "vmd/detail/recurse/equal/equal_12.hpp" export * }
  module "vmd__detail__recurse__equal__equal_13" { header "vmd/detail/recurse/equal/equal_13.hpp" export * }
  module "vmd__detail__recurse__equal__equal_14" { header "vmd/detail/recurse/equal/equal_14.hpp" export * }
  module "vmd__detail__recurse__equal__equal_15" { header "vmd/detail/recurse/equal/equal_15.hpp" export * }
  module "vmd__detail__recurse__equal__equal_16" { header "vmd/detail/recurse/equal/equal_16.hpp" export * }
  module "vmd__detail__recurse__equal__equal_1" { header "vmd/detail/recurse/equal/equal_1.hpp" export * }
  module "vmd__detail__recurse__equal__equal_2" { header "vmd/detail/recurse/equal/equal_2.hpp" export * }
  module "vmd__detail__recurse__equal__equal_3" { header "vmd/detail/recurse/equal/equal_3.hpp" export * }
  module "vmd__detail__recurse__equal__equal_4" { header "vmd/detail/recurse/equal/equal_4.hpp" export * }
  module "vmd__detail__recurse__equal__equal_5" { header "vmd/detail/recurse/equal/equal_5.hpp" export * }
  module "vmd__detail__recurse__equal__equal_6" { header "vmd/detail/recurse/equal/equal_6.hpp" export * }
  module "vmd__detail__recurse__equal__equal_7" { header "vmd/detail/recurse/equal/equal_7.hpp" export * }
  module "vmd__detail__recurse__equal__equal_8" { header "vmd/detail/recurse/equal/equal_8.hpp" export * }
  module "vmd__detail__recurse__equal__equal_9" { header "vmd/detail/recurse/equal/equal_9.hpp" export * }
  module "vmd__detail__recurse__equal__equal_headers" { header "vmd/detail/recurse/equal/equal_headers.hpp" export * }
  module "vmd__detail__seq" { header "vmd/detail/seq.hpp" export * }
  module "vmd__detail__sequence_arity" { header "vmd/detail/sequence_arity.hpp" export * }
  module "vmd__detail__sequence_common" { header "vmd/detail/sequence_common.hpp" export * }
  module "vmd__detail__sequence_elem" { header "vmd/detail/sequence_elem.hpp" export * }
  module "vmd__detail__sequence_enum" { header "vmd/detail/sequence_enum.hpp" export * }
  module "vmd__detail__sequence_size" { header "vmd/detail/sequence_size.hpp" export * }
  module "vmd__detail__sequence_to_array" { header "vmd/detail/sequence_to_array.hpp" export * }
  module "vmd__detail__sequence_to_list" { header "vmd/detail/sequence_to_list.hpp" export * }
  module "vmd__detail__sequence_to_seq" { header "vmd/detail/sequence_to_seq.hpp" export * }
  module "vmd__detail__sequence_to_tuple" { header "vmd/detail/sequence_to_tuple.hpp" export * }
  module "vmd__detail__sequence_type" { header "vmd/detail/sequence_type.hpp" export * }
  module "vmd__detail__setup" { header "vmd/detail/setup.hpp" export * }
  module "vmd__detail__tuple" { header "vmd/detail/tuple.hpp" export * }
  module "vmd__detail__type_registration" { header "vmd/detail/type_registration.hpp" export * }
  module "vmd__detail__variadic_pop_front" { header "vmd/detail/variadic_pop_front.hpp" export * }
  module "vmd__elem" { header "vmd/elem.hpp" export * }
  module "vmd__empty" { header "vmd/empty.hpp" export * }
  module "vmd__enum" { header "vmd/enum.hpp" export * }
  module "vmd__equal" { header "vmd/equal.hpp" export * }
  module "vmd__get_type" { header "vmd/get_type.hpp" export * }
  module "vmd__identity" { header "vmd/identity.hpp" export * }
  module "vmd__is_array" { header "vmd/is_array.hpp" export * }
  module "vmd__is_empty_array" { header "vmd/is_empty_array.hpp" export * }
  module "vmd__is_empty" { header "vmd/is_empty.hpp" export * }
  module "vmd__is_empty_list" { header "vmd/is_empty_list.hpp" export * }
  module "vmd__is_identifier" { header "vmd/is_identifier.hpp" export * }
  module "vmd__is_list" { header "vmd/is_list.hpp" export * }
  module "vmd__is_multi" { header "vmd/is_multi.hpp" export * }
  module "vmd__is_number" { header "vmd/is_number.hpp" export * }
  module "vmd__is_parens_empty" { header "vmd/is_parens_empty.hpp" export * }
  module "vmd__is_seq" { header "vmd/is_seq.hpp" export * }
  module "vmd__is_tuple" { header "vmd/is_tuple.hpp" export * }
  module "vmd__is_type" { header "vmd/is_type.hpp" export * }
  module "vmd__is_unary" { header "vmd/is_unary.hpp" export * }
  module "vmd__list" { header "vmd/list.hpp" export * }
  module "vmd__list__to_seq" { header "vmd/list/to_seq.hpp" export * }
  module "vmd__list__to_tuple" { header "vmd/list/to_tuple.hpp" export * }
  module "vmd__not_equal" { header "vmd/not_equal.hpp" export * }
  module "vmd__seq" { header "vmd/seq.hpp" export * }
  module "vmd__seq__is_vmd_seq" { header "vmd/seq/is_vmd_seq.hpp" export * }
  module "vmd__seq__pop_back" { header "vmd/seq/pop_back.hpp" export * }
  module "vmd__seq__pop_front" { header "vmd/seq/pop_front.hpp" export * }
  module "vmd__seq__push_back" { header "vmd/seq/push_back.hpp" export * }
  module "vmd__seq__push_front" { header "vmd/seq/push_front.hpp" export * }
  module "vmd__seq__remove" { header "vmd/seq/remove.hpp" export * }
  module "vmd__seq__size" { header "vmd/seq/size.hpp" export * }
  module "vmd__seq__to_array" { header "vmd/seq/to_array.hpp" export * }
  module "vmd__seq__to_list" { header "vmd/seq/to_list.hpp" export * }
  module "vmd__seq__to_tuple" { header "vmd/seq/to_tuple.hpp" export * }
  module "vmd__size" { header "vmd/size.hpp" export * }
  module "vmd__to_array" { header "vmd/to_array.hpp" export * }
  module "vmd__to_list" { header "vmd/to_list.hpp" export * }
  module "vmd__to_seq" { header "vmd/to_seq.hpp" export * }
  module "vmd__to_tuple" { header "vmd/to_tuple.hpp" export * }
  module "vmd__tuple" { header "vmd/tuple.hpp" export * }
  module "vmd__tuple__is_vmd_tuple" { header "vmd/tuple/is_vmd_tuple.hpp" export * }
  module "vmd__tuple__pop_back" { header "vmd/tuple/pop_back.hpp" export * }
  module "vmd__tuple__pop_front" { header "vmd/tuple/pop_front.hpp" export * }
  module "vmd__tuple__push_back" { header "vmd/tuple/push_back.hpp" export * }
  module "vmd__tuple__push_front" { header "vmd/tuple/push_front.hpp" export * }
  module "vmd__tuple__remove" { header "vmd/tuple/remove.hpp" export * }
  module "vmd__tuple__size" { header "vmd/tuple/size.hpp" export * }
  module "vmd__tuple__to_array" { header "vmd/tuple/to_array.hpp" export * }
  module "vmd__tuple__to_list" { header "vmd/tuple/to_list.hpp" export * }
  module "vmd__tuple__to_seq" { header "vmd/tuple/to_seq.hpp" export * }
  module "vmd__vmd" { header "vmd/vmd.hpp" export * }
}
module boost_wave {
  export *
  module "wave__cpp_exceptions" { header "wave/cpp_exceptions.hpp" export * }
  module "wave__cpp_iteration_context" { header "wave/cpp_iteration_context.hpp" export * }
  module "wave__cpplexer__convert_trigraphs" { header "wave/cpplexer/convert_trigraphs.hpp" export * }
  module "wave__cpplexer__cpplexer_exceptions" { header "wave/cpplexer/cpplexer_exceptions.hpp" export * }
  module "wave__cpplexer__cpp_lex_interface_generator" { header "wave/cpplexer/cpp_lex_interface_generator.hpp" export * }
  module "wave__cpplexer__cpp_lex_interface" { header "wave/cpplexer/cpp_lex_interface.hpp" export * }
  module "wave__cpplexer__cpp_lex_iterator" { header "wave/cpplexer/cpp_lex_iterator.hpp" export * }
  module "wave__cpplexer__cpp_lex_token" { header "wave/cpplexer/cpp_lex_token.hpp" export * }
  module "wave__cpplexer__detect_include_guards" { header "wave/cpplexer/detect_include_guards.hpp" export * }
  module "wave__cpplexer__re2clex__aq" { header "wave/cpplexer/re2clex/aq.hpp" export * }
  module "wave__cpplexer__re2clex__cpp_re2c_lexer" { header "wave/cpplexer/re2clex/cpp_re2c_lexer.hpp" export * }
  module "wave__cpplexer__re2clex__cpp_re" { header "wave/cpplexer/re2clex/cpp_re.hpp" export * }
  module "wave__cpplexer__re2clex__scanner" { header "wave/cpplexer/re2clex/scanner.hpp" export * }
  module "wave__cpplexer__token_cache" { header "wave/cpplexer/token_cache.hpp" export * }
  module "wave__cpplexer__validate_universal_char" { header "wave/cpplexer/validate_universal_char.hpp" export * }
  module "wave__cpp_throw" { header "wave/cpp_throw.hpp" export * }
  module "wave__grammars__cpp_defined_grammar_gen" { header "wave/grammars/cpp_defined_grammar_gen.hpp" export * }
  module "wave__grammars__cpp_expression_grammar_gen" { header "wave/grammars/cpp_expression_grammar_gen.hpp" export * }
  module "wave__grammars__cpp_expression_value" { header "wave/grammars/cpp_expression_value.hpp" export * }
  module "wave__grammars__cpp_grammar" { header "wave/grammars/cpp_grammar.hpp" export * }
  module "wave__grammars__cpp_literal_grammar_gen" { header "wave/grammars/cpp_literal_grammar_gen.hpp" export * }
  module "wave__grammars__cpp_predef_macros_gen" { header "wave/grammars/cpp_predef_macros_gen.hpp" export * }
  module "wave__grammars__cpp_predef_macros_grammar" { header "wave/grammars/cpp_predef_macros_grammar.hpp" export * }
  module "wave__grammars__cpp_value_error" { header "wave/grammars/cpp_value_error.hpp" export * }
  module "wave__language_support" { header "wave/language_support.hpp" export * }
  module "wave__token_ids" { header "wave/token_ids.hpp" export * }
  module "wave__util__cpp_ifblock" { header "wave/util/cpp_ifblock.hpp" export * }
  module "wave__util__cpp_macromap_utils" { header "wave/util/cpp_macromap_utils.hpp" export * }
  module "wave__util__file_position" { header "wave/util/file_position.hpp" export * }
  module "wave__util__flex_string" { header "wave/util/flex_string.hpp" export * }
  module "wave__util__functor_input" { header "wave/util/functor_input.hpp" export * }
  module "wave__util__insert_whitespace_detection" { header "wave/util/insert_whitespace_detection.hpp" export * }
  module "wave__util__interpret_pragma" { header "wave/util/interpret_pragma.hpp" export * }
  module "wave__util__iteration_context" { header "wave/util/iteration_context.hpp" export * }
  module "wave__util__macro_definition" { header "wave/util/macro_definition.hpp" export * }
  module "wave__util__macro_helpers" { header "wave/util/macro_helpers.hpp" export * }
  module "wave__util__pattern_parser" { header "wave/util/pattern_parser.hpp" export * }
  module "wave__util__symbol_table" { header "wave/util/symbol_table.hpp" export * }
  module "wave__util__transform_iterator" { header "wave/util/transform_iterator.hpp" export * }
  module "wave__util__unput_queue_iterator" { header "wave/util/unput_queue_iterator.hpp" export * }
  module "wave__wave_config_constant" { header "wave/wave_config_constant.hpp" export * }
  module "wave__wave_config" { header "wave/wave_config.hpp" export * }
  module "wave__wave_version" { header "wave/wave_version.hpp" export * }
}
module boost_xpressive {
  export *
  module "xpressive__basic_regex" { header "xpressive/basic_regex.hpp" export * }
  module "xpressive__detail__core__access" { header "xpressive/detail/core/access.hpp" export * }
  module "xpressive__detail__core__action" { header "xpressive/detail/core/action.hpp" export * }
  module "xpressive__detail__core__adaptor" { header "xpressive/detail/core/adaptor.hpp" export * }
  module "xpressive__detail__core__finder" { header "xpressive/detail/core/finder.hpp" export * }
  module "xpressive__detail__core__flow_control" { header "xpressive/detail/core/flow_control.hpp" export * }
  module "xpressive__detail__core__icase" { header "xpressive/detail/core/icase.hpp" export * }
  module "xpressive__detail__core__linker" { header "xpressive/detail/core/linker.hpp" export * }
  module "xpressive__detail__core__list" { header "xpressive/detail/core/list.hpp" export * }
  module "xpressive__detail__core__matcher__action_matcher" { header "xpressive/detail/core/matcher/action_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__alternate_end_matcher" { header "xpressive/detail/core/matcher/alternate_end_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__alternate_matcher" { header "xpressive/detail/core/matcher/alternate_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__any_matcher" { header "xpressive/detail/core/matcher/any_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__assert_bol_matcher" { header "xpressive/detail/core/matcher/assert_bol_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__assert_bos_matcher" { header "xpressive/detail/core/matcher/assert_bos_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__assert_eol_matcher" { header "xpressive/detail/core/matcher/assert_eol_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__assert_eos_matcher" { header "xpressive/detail/core/matcher/assert_eos_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__assert_line_base" { header "xpressive/detail/core/matcher/assert_line_base.hpp" export * }
  module "xpressive__detail__core__matcher__assert_word_matcher" { header "xpressive/detail/core/matcher/assert_word_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__attr_begin_matcher" { header "xpressive/detail/core/matcher/attr_begin_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__attr_end_matcher" { header "xpressive/detail/core/matcher/attr_end_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__attr_matcher" { header "xpressive/detail/core/matcher/attr_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__charset_matcher" { header "xpressive/detail/core/matcher/charset_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__end_matcher" { header "xpressive/detail/core/matcher/end_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__epsilon_matcher" { header "xpressive/detail/core/matcher/epsilon_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__keeper_matcher" { header "xpressive/detail/core/matcher/keeper_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__literal_matcher" { header "xpressive/detail/core/matcher/literal_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__logical_newline_matcher" { header "xpressive/detail/core/matcher/logical_newline_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__lookahead_matcher" { header "xpressive/detail/core/matcher/lookahead_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__lookbehind_matcher" { header "xpressive/detail/core/matcher/lookbehind_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__mark_begin_matcher" { header "xpressive/detail/core/matcher/mark_begin_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__mark_end_matcher" { header "xpressive/detail/core/matcher/mark_end_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__mark_matcher" { header "xpressive/detail/core/matcher/mark_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__optional_matcher" { header "xpressive/detail/core/matcher/optional_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__posix_charset_matcher" { header "xpressive/detail/core/matcher/posix_charset_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__predicate_matcher" { header "xpressive/detail/core/matcher/predicate_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__range_matcher" { header "xpressive/detail/core/matcher/range_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__regex_byref_matcher" { header "xpressive/detail/core/matcher/regex_byref_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__regex_matcher" { header "xpressive/detail/core/matcher/regex_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__repeat_begin_matcher" { header "xpressive/detail/core/matcher/repeat_begin_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__repeat_end_matcher" { header "xpressive/detail/core/matcher/repeat_end_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__set_matcher" { header "xpressive/detail/core/matcher/set_matcher.hpp" export * }
  module "xpressive__detail__core__matchers" { header "xpressive/detail/core/matchers.hpp" export * }
  module "xpressive__detail__core__matcher__simple_repeat_matcher" { header "xpressive/detail/core/matcher/simple_repeat_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__string_matcher" { header "xpressive/detail/core/matcher/string_matcher.hpp" export * }
  module "xpressive__detail__core__matcher__true_matcher" { header "xpressive/detail/core/matcher/true_matcher.hpp" export * }
  module "xpressive__detail__core__optimize" { header "xpressive/detail/core/optimize.hpp" export * }
  module "xpressive__detail__core__peeker" { header "xpressive/detail/core/peeker.hpp" export * }
  module "xpressive__detail__core__quant_style" { header "xpressive/detail/core/quant_style.hpp" export * }
  module "xpressive__detail__core__regex_domain" { header "xpressive/detail/core/regex_domain.hpp" export * }
  module "xpressive__detail__core__regex_impl" { header "xpressive/detail/core/regex_impl.hpp" export * }
  module "xpressive__detail__core__results_cache" { header "xpressive/detail/core/results_cache.hpp" export * }
  module "xpressive__detail__core__state" { header "xpressive/detail/core/state.hpp" export * }
  module "xpressive__detail__core__sub_match_impl" { header "xpressive/detail/core/sub_match_impl.hpp" export * }
  module "xpressive__detail__core__sub_match_vector" { header "xpressive/detail/core/sub_match_vector.hpp" export * }
  module "xpressive__detail__detail_fwd" { header "xpressive/detail/detail_fwd.hpp" export * }
  module "xpressive__detail__dynamic__dynamic" { header "xpressive/detail/dynamic/dynamic.hpp" export * }
  module "xpressive__detail__dynamic__matchable" { header "xpressive/detail/dynamic/matchable.hpp" export * }
  module "xpressive__detail__dynamic__parser_enum" { header "xpressive/detail/dynamic/parser_enum.hpp" export * }
  module "xpressive__detail__dynamic__parser" { header "xpressive/detail/dynamic/parser.hpp" export * }
  module "xpressive__detail__dynamic__parser_traits" { header "xpressive/detail/dynamic/parser_traits.hpp" export * }
  module "xpressive__detail__static__compile" { header "xpressive/detail/static/compile.hpp" export * }
  module "xpressive__detail__static__modifier" { header "xpressive/detail/static/modifier.hpp" export * }
  module "xpressive__detail__static__placeholders" { header "xpressive/detail/static/placeholders.hpp" export * }
  module "xpressive__detail__static__transforms__as_alternate" { header "xpressive/detail/static/transforms/as_alternate.hpp" export * }
  module "xpressive__detail__static__transforms__as_set" { header "xpressive/detail/static/transforms/as_set.hpp" export * }
  module "xpressive__detail__static__transmogrify" { header "xpressive/detail/static/transmogrify.hpp" export * }
  module "xpressive__detail__static__type_traits" { header "xpressive/detail/static/type_traits.hpp" export * }
  module "xpressive__detail__static__visitor" { header "xpressive/detail/static/visitor.hpp" export * }
  module "xpressive__detail__utility__algorithm" { header "xpressive/detail/utility/algorithm.hpp" export * }
  module "xpressive__detail__utility__any" { header "xpressive/detail/utility/any.hpp" export * }
  module "xpressive__detail__utility__boyer_moore" { header "xpressive/detail/utility/boyer_moore.hpp" export * }
/* Textual hedaer that goes togeter with it's .ipp clone. Fixes:
In file included from /home/travis/build/Teemperor/boost-compile/inc/boost/xpressive/detail/utility/hash_peek_bitset.hpp:21:
/home/travis/build/Teemperor/boost-compile/inc/boost/xpressive/detail/utility/chset/basic_chset.ipp:204:8: error:
      no template named 'basic_chset_8bit'; did you mean 'basic_chset'?
inline basic_chset_8bit<Char>::basic_chset_8bit()
       ^~~~~~~~~~~~~~~~
       basic_chset
/home/travis/build/Teemperor/boost-compile/inc/boost/xpressive/detail/utility/chset/basic_chset.hpp:27:8: note:
      'basic_chset' declared here
struct basic_chset
       ^
While building module 'bo
*/
  //module "xpressive__detail__utility__chset__basic_chset" { header "xpressive/detail/utility/chset/basic_chset.hpp" export * }
  module "xpressive__detail__utility__chset__chset" { header "xpressive/detail/utility/chset/chset.hpp" export * }
  module "xpressive__detail__utility__chset__range_run" { header "xpressive/detail/utility/chset/range_run.hpp" export * }
  module "xpressive__detail__utility__cons" { header "xpressive/detail/utility/cons.hpp" export * }
  module "xpressive__detail__utility__counted_base" { header "xpressive/detail/utility/counted_base.hpp" export * }
  module "xpressive__detail__utility__dont_care" { header "xpressive/detail/utility/dont_care.hpp" export * }
  module "xpressive__detail__utility__ignore_unused" { header "xpressive/detail/utility/ignore_unused.hpp" export * }
  module "xpressive__detail__utility__literals" { header "xpressive/detail/utility/literals.hpp" export * }
  module "xpressive__detail__utility__never_true" { header "xpressive/detail/utility/never_true.hpp" export * }
  module "xpressive__detail__utility__save_restore" { header "xpressive/detail/utility/save_restore.hpp" export * }
  module "xpressive__detail__utility__sequence_stack" { header "xpressive/detail/utility/sequence_stack.hpp" export * }
  module "xpressive__detail__utility__symbols" { header "xpressive/detail/utility/symbols.hpp" export * }
  module "xpressive__detail__utility__tracking_ptr" { header "xpressive/detail/utility/tracking_ptr.hpp" export * }
  module "xpressive__detail__utility__traits_utils" { header "xpressive/detail/utility/traits_utils.hpp" export * }
  module "xpressive__detail__utility__width" { header "xpressive/detail/utility/width.hpp" export * }
  module "xpressive__match_results" { header "xpressive/match_results.hpp" export * }
  module "xpressive__regex_actions" { header "xpressive/regex_actions.hpp" export * }
  module "xpressive__regex_algorithms" { header "xpressive/regex_algorithms.hpp" export * }
  module "xpressive__regex_compiler" { header "xpressive/regex_compiler.hpp" export * }
  module "xpressive__regex_constants" { header "xpressive/regex_constants.hpp" export * }
  module "xpressive__regex_error" { header "xpressive/regex_error.hpp" export * }
  module "xpressive__regex_iterator" { header "xpressive/regex_iterator.hpp" export * }
  module "xpressive__regex_primitives" { header "xpressive/regex_primitives.hpp" export * }
  module "xpressive__regex_token_iterator" { header "xpressive/regex_token_iterator.hpp" export * }
  module "xpressive__regex_traits" { header "xpressive/regex_traits.hpp" export * }
  module "xpressive__sub_match" { header "xpressive/sub_match.hpp" export * }
  module "xpressive__traits__cpp_regex_traits" { header "xpressive/traits/cpp_regex_traits.hpp" export * }
  module "xpressive__traits__detail__c_ctype" { header "xpressive/traits/detail/c_ctype.hpp" export * }
  module "xpressive__traits__null_regex_traits" { header "xpressive/traits/null_regex_traits.hpp" export * }
  module "xpressive__xpressive_dynamic" { header "xpressive/xpressive_dynamic.hpp" export * }
  module "xpressive__xpressive_fwd" { header "xpressive/xpressive_fwd.hpp" export * }
  module "xpressive__xpressive" { header "xpressive/xpressive.hpp" export * }
  module "xpressive__xpressive_static" { header "xpressive/xpressive_static.hpp" export * }
  module "xpressive__xpressive_typeof" { header "xpressive/xpressive_typeof.hpp" export * }
}
