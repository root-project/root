name: 'ROOT Python wheels'

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'The branch for which the Python wheel has to be generated'
        type: string
        required: true
        default: "experimental-pip-install-root"
  pull_request:
    branches: master
  push:
    branches: experimental-pip-install-root

jobs:
  python_wheel:
    runs-on: ubuntu-latest
    env:
      WORKDIR: /home/runner/work/root
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Install Kerberos utilities
        run: sudo apt-get install -y krb5-user

      - name: Install XRootD client
        run: sudo apt-get -y install xrootd-client

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.0.1
        with:
          output-dir: ${{ env.WORKDIR }}/wheelhouse

      - name: Upload wheel to github
        uses: actions/upload-artifact@v4
        working-directory: ${{ env.WORKDIR }}
        with:
          name: cibw-wheels-test
          path: wheelhouse/*.whl

      - name: Upload wheel to EOS
        env:
          RWEBEOS_KT: ${{ secrets.RWEBEOS_KT }}
          KT_FILE_NAME: /tmp/decoded.keytab
          EOS_PATH: /eos/project/r/root-eos/www/experimental-python-wheels
          EOS_ENDPOINT: root://eosproject-r.cern.ch
          KRB5CCNAME: /tmp/krb5cc
        working-directory: ${{ env.WORKDIR }}
        run: |
          echo +++ Content
          ls
          echo +++ Retrieving the secret
          echo ${RWEBEOS_KT} | base64 -d > ${KT_FILE_NAME}
          echo +++ Creating the token
          kinit  -p ${{ secrets.KRB5USER }}@${{ secrets.KRB5REALM }} -kt ${KT_FILE_NAME}
          echo +++ Running the copy
          xrdcp -rf wheelhouse ${EOS_ENDPOINT}/${EOS_PATH}/
