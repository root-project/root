(function(a){var b=require.toUrl("./NetworkDesigner.js");b=b.substr(0,b.lastIndexOf("/")+1);require.config({paths:{"jquery-connections":b+"jquery.connections.min","jquery-timing":b+"jquery-timing.min",d3:"/static/scripts/d3.min"},shim:{"jquery-ui":{exports:"jquery.ui",deps:["jquery"]},"jquery-connections":{deps:["jquery"]},"jquery-timing":{deps:["jquery"]}}});define(["jquery","d3","jquery-ui","jquery-connections","jquery-timing"],function(d,c){return a({},d,c)})})(function(f,y,G){var l;var o={H:false,V:false,VerbosityLevel:"Default",VarTransform:"Normalize",ErrorStrategy:"CROSSENTROPY",WeightInitialization:"XAVIER",CreateMVAPdfs:false,IgnoreNegWeightsInTraining:false,SignalWeightsSum:1000,BackgroundWeightsSum:1000};var C=Array();var r;var H={ReLU:"layer_relu",TANH:"layer_tanh",SYMMReLU:"layer_symmrelu",SOFTSIGN:"layer_SOFTSIGN",Sigmoid:"layer_sigmoid",LINEAR:"layer_linear",GAUSS:"layer_gauss"};var J=[];var g=[];var D={layer:{input:"#00A000",output:"#F6BD00",hidden:["steelblue","red"]}};var z=G.scale.linear().domain([0,100]).range(D.layer.hidden).interpolate(G.interpolateRgb);var d=function(L){for(var K in H){if(L==H[K]){return K}}};var j=function(M,O){if(y("#drawConnectionHelper")[0]!==undefined){y("#drawConnectionHelper").remove()}J=[];y("#"+l).append("<div id='drawConnectionHelper'>div_"+O+"</div>");var L=y("#drawConnectionHelper");var N=y("#"+l).offset();L.css({top:(M.pageY-N.top)+"px",left:(M.pageX-N.left)+"px"});L.draggable();var K=0;L.on("click",function(){if(K==2){J.push(y(this).text());y(this).remove();K=0}else{K++}});y("#div_"+O).connections({to:"#drawConnectionHelper"})};var n=function(K,L){C[K]={type:L,neurons:0,connected:{before:null,after:null},trainingStrategy:{LearningRate:0.00001,Momentum:0.3,Repetitions:3,ConvergenceSteps:100,BatchSize:30,TestRepetitions:7,WeightDecay:0,Regularization:"NONE",DropConfig:"",DropRepetitions:3,Multithreading:true}};if(L.toLowerCase().indexOf("output")!=-1){C[K]["func"]}};var p=function(M){var L;if(J.length!=1){var K=y("#drawConnectionHelper");L=String(K.text());K.remove()}else{L=String(J.pop())}y("#"+L).connections({to:"#"+M});F(L,false,false,M)};var F=function(Q,P,O,N){var L=Q.split("_");var K=Number(L[L.length-1]);if(P){C[K].neurons=P}if(O){L=O.split("_");var M=Number(L[L.length-1]);C[K].connected.before=M;C[M].connected.after=K}if(N){L=N.split("_");var M=Number(L[L.length-1]);C[M].connected.before=K;C[K].connected.after=M}};var m=function(L,R,T,O,S){var P=L+"_"+r++;y("#"+l).append("<div class='layer_box' id='div_"+P+"'></div>");var N=y("#div_"+P);var Q=L.indexOf("input")!=-1?D.layer.input:L.indexOf("output")!=-1?D.layer.output:D.layer.hidden[0];N.css({position:"relative",top:"100px",left:"100px","z-index":90,"background-color":Q});N.draggable();if(R){N.html("<input type='button' id='button_"+P+"' style='display: none;' value='0' /><input type='button' id='options_"+P+"' class='button_layer' value='Options' / ><span>"+d(L)+"</span>");N.on("click","#options_"+P,function(){y("#neuronnum_layer_dialog").data("buttonID",P);y("#neuronnum_layer_dialog").dialog("open")})}if(T){var K=0;N.on("click",function(U){if(K>=2){j(U,P);K=0}else{K+=1}})}if(O){N.droppable({drop:function(){p("div_"+P)}})}if(S){N.append(S);if(S.toLowerCase().indexOf("output")!=-1){N.append("<input type='button' id='options_"+P+"' class='button_layer_output' value='Options' / >");N.on("click","#options_"+P,function(){y("#output_layer_dialog").data("buttonID",P);y("#output_layer_dialog").dialog("open")})}}var M=P.split("_");n(Number(M[M.length-1]),M[M.length-2])};var s=function(){y("#"+l).append("<div id='neuronnum_layer_dialog' title='Add neurons' style='display: none'>            <form>            <label>Number of neurons: </label><input type='text'>            </form>            <div id='ts_link'><input id='training_strategy_button' type='button' class='ui-button' value='Training Strategy' /></div>            </div>");y("#neuronnum_layer_dialog").dialog({autoOpen:false,show:{effect:"fade",duration:500},hide:{effect:"fade",duration:500},open:function(){y("#neuronnum_layer_dialog form input").val(y("#button_"+y(this).data("buttonID")).val())},buttons:{OK:function(){var L=y("#neuronnum_layer_dialog form input").val();var K=y("#button_"+y(this).data("buttonID"));L=Number(L);K.val(L);K.parent().css({background:z(L)});F(y(this).data("buttonID"),L);y(this).dialog("close")},Close:function(){y(this).dialog("close")}}}).data("buttonID","-1");y("#neuronnum_layer_dialog").on("click","#training_strategy_button",function(){var K=y("#trainingstrategy_dialog");K.data("formID",y("#neuronnum_layer_dialog").data("buttonID"));K.dialog("open")});y("#neuronnum_layer_dialog form input").on("keypress keydown keyup",function(K){K.stopPropagation()})};var q=function(){var L="<select id='output_layer_type'>";for(var K in H){L+="<option value='"+K+"'>"+K+"</option>"}L+="</select>";y("#"+l).append("<div id='output_layer_dialog' title='Layer type' style='display: none'>            <form><label>Type of layer: </label>"+L+"</form>            <div id='ts_link'><input id='training_strategy_button' type='button' class='ui-button' value='Training Strategy' /></div>            </div>");y("#output_layer_dialog").dialog({autoOpen:false,show:{effect:"fade",duration:500},hide:{effect:"fade",duration:500},open:function(){var M=y(this).data("buttonID").split("_");M=Number(M[M.length-1]);if(C[M].func!==undefined){y("#output_layer_type").val(C[M].func)}},buttons:{OK:function(){var M=y(this).data("buttonID").split("_");M=Number(M[M.length-1]);C[M]["func"]=y("#output_layer_type").val();y(this).dialog("close")},Close:function(){y(this).dialog("close")}}}).data("buttonID","-1");y("#output_layer_dialog").on("click","#training_strategy_button",function(){var M=y("#trainingstrategy_dialog");M.data("formID",y("#output_layer_dialog").data("buttonID"));M.dialog("open")})};var c=function(M,L){var K="<table>";L.forEach(function(O,P){K+="<tr>";if("title" in O){K+="<td><label>"+O.title+"</label></td>"}else{K+="<td><label>"+P+"</label></td>"}K+="<td>";if(O.type=="select"){K+='<select id="'+M+"_"+P+'">';for(var N=0;N<O.options.length;N++){K+='<option value="'+O.options[N]+'">'+O.options[N]+"</option>"}K+="</select>"}else{K+='<input type="'+O.type+'" id="'+M+"_"+P+'" />'}K+="</td>";K+="</tr>"});K+="</table>";return K};var u=function(N,M,K){for(var L in K){if(K[L]===true||K[L]===false){y("#"+N+"_"+L).prop("checked",K[L]);y("#"+N+"_"+L).change(function(){y(this).attr("value",this.checked?1:0)});if(K[L]==true){y("#"+N+"_"+L).val(1)}else{y("#"+N+"_"+L).val(0)}}else{y("#"+N+"_"+L).val(K[L])}}};var B=function(){var K=new Map();K.set("LearningRate",{type:"text"});K.set("Momentum",{type:"text"});K.set("Repetitions",{type:"text"});K.set("ConvergenceSteps",{type:"text"});K.set("BatchSize",{type:"text"});K.set("TestRepetitions",{type:"text"});K.set("WeightDecay",{type:"text"});K.set("Regularization",{type:"select",options:["NONE","L1","L2","L1MAX"]});K.set("DropConfig",{type:"text"});K.set("DropRepetitions",{type:"text"});K.set("Multithreading",{type:"checkbox"});y("#"+l).append("<div id='trainingstrategy_dialog' title='Training Strategy' style='display: none'>"+c("trainingstrategy",K)+"</div>");y("#trainingstrategy_dialog").dialog({autoOpen:false,width:400,show:{effect:"fade",duration:500},hide:{effect:"fade",duration:500},open:function(){var L=y(this).data("formID").split("_");var M=Number(L[L.length-1]);u("trainingstrategy",K,C[M].trainingStrategy)},buttons:{OK:function(){var M=y(this).data("formID").split("_");var L=Number(M[M.length-1]);M=y("#trainingstrategy_dialog input, #trainingstrategy_dialog select");var O;for(var N=0;N<M.length;N++){O=M[N].id.split("_")[1];if(K.get(O)["type"]=="checkbox"){if(Number(M[N].value)==1){C[L].trainingStrategy[O]=true}else{C[L].trainingStrategy[O]=false}}else{C[L].trainingStrategy[O]=M[N].value}}y(this).dialog("close")},Close:function(){y(this).dialog("close")}}}).data("formID","-1");y("#trainingstrategy_dialog input").on("keypress keydown keyup",function(L){L.stopPropagation()})};var b=function(){var K=new Map();K.set("V",{type:"checkbox",title:"Verbose"});K.set("VerbosityLevel",{type:"select",options:["Default","Debug","Verbose","Info","Warning","Error","Fatal"]});K.set("H",{type:"checkbox",title:"Help messages"});K.set("VarTransform",{type:"text"});K.set("CreateMVAPdfs",{type:"checkbox"});K.set("IgnoreNegWeightsInTraining",{type:"checkbox"});K.set("ErrorStrategy",{type:"select",options:["CROSSENTROPY","SUMOFSQUARES","MUTUALEXCLUSIVE","CHECKGRADIENTS"]});K.set("WeightInitialization",{type:"select",options:["XAVIER","XAVIERUNIFORM","LAYERSIZE"]});K.set("SignalWeightsSum",{type:"text"});K.set("BackgroundWeightsSum",{type:"text"});y("#"+l).append("<div id='globopts_dialog' title='Global options' style='display: none'>"+c("globopts",K)+"</div>");y("#globopts_dialog").dialog({autoOpen:false,width:440,show:{effect:"fade",duration:500},hide:{effect:"fade",duration:500},open:function(){u("globopts",K,o)},buttons:{OK:function(){var L=y("#globopts_dialog input, #globopts_dialog select");var N;for(var M=0;M<L.length;M++){N=L[M].id.split("_")[1];if(K.get(N)["type"]=="checkbox"){if(Number(L[M].value)==1){o[N]=true}else{o[N]=false}}else{o[N]=L[M].value}}y(this).dialog("close")},Close:function(){y(this).dialog("close")}}});y("#globopts_dialog input").on("keypress keydown keyup",function(L){L.stopPropagation()})};var v=function(M,L,K){y("#"+l).append("<div id='"+M+"_dialog' title='"+L+"' style='display: none'>            <p>"+K+"</p></div>");y("#"+M+"_dialog").dialog({autoOpen:false,show:{effect:"puff",duration:700},hide:{effect:"puff",duration:700},buttons:{Close:function(){y(this).dialog("close")}}});this.getID=function(){return M};this.show=function(){y("#"+M+"_dialog").dialog("open")};this.openOnClick=function(){y("#"+M).on("click",function(){y("#"+M+"_dialog").dialog("open")})};this.menuEntry=function(){return"<li class='nd_menu_element' id='"+M+"'><div>"+L+"</div></li>"}};var E=function(L){for(var K=0;K<g.length;K++){if(g[K].getID()==L){return g[K]}}};var k=function(){var L="";L+="<div id='nd_menu_div'><ul id='nd_menu'>";L+="<li class='nd_menu_element'><div id='globopts_menu'>Global options</div></li>";L+="<li class='nd_menu_dropdown'><div>Add layer</div><ul class='nd_menu_dropdown_content'>";for(var K in H){L+="<li id='"+H[K]+"'><div>"+d(H[K])+"</div></li>"}L+="</ul></li>";for(var K in g){if(g[K].getID().indexOf("warning")!=-1){continue}L+=g[K].menuEntry()}L+="<li class='nd_menu_element' id='scale_layer_color'><div>Scale colors</div></li>";L+="<li class='nd_menu_element' id='save_net'><div>Save network</div></li>";L+="</ul></div>";y("#"+l).append(L)};var i=function(){var M=y(".layer_box");var O=100000000000000000000,L=-100000000000000000000;var P;for(var N=0;N<C.length;N++){P=Number(C[N].neurons);if(P<O){O=P}if(P>L){L=P}}z.domain([O,L]);for(var N=0;N<M.length;N++){if(M[N].id.indexOf("input")!=-1){continue}if(M[N].id.indexOf("output")!=-1){continue}var K=M[N].getElementsByClassName("button_layer")[0].id.split("_");K=Number(K[K.length-1]);M[N].style["background-color"]=z(C[K].neurons)}};var e=function(){if(C[0].type=="input"){return C[0]}for(var K=0;K<C.length;K++){if(C[K].type=="input"){return C[K]}}console.log("Something went wrong in NetworkDesigner.getInputLayer...");return null};var a=function(K){if(K===undefined||K.type===undefined){return""}if(K.type=="output"){return K.func}if(K.type=="input"){return""+a(C[K.connected.after])}if(K.type!="input"&&K.type!="output"){return(K.type.toUpperCase()+"|"+K.neurons)+","+a(C[K.connected.after])}};var A=function(K){var M="";for(var L in K){if(String(K[L]).length<1){continue}M+=L+"="+String(K[L])+","}return M.substr(0,M.length-1)};var x=function(K){if(K===undefined||K.type===undefined){return""}if(K.type=="output"){return A(K.trainingStrategy)}if(K.type=="input"){return""+x(C[K.connected.after])}if(K.type!="input"&&K.type!="output"){return A(K.trainingStrategy)+"|"+x(C[K.connected.after])}};var I=function(){var L="";for(var K in o){if(typeof(o[K])=="boolean"){if(o[K]==true){L+=K+":"}else{L+="!"+K+":"}}else{L+=K+"="+o[K]+":"}}var O=e();var M=a(O);var N=x(O);if(M.length<2||N.length<2){E("warning_nonet").show();console.log("Layout="+M);console.log("TrainingStrategy="+N);return""}if(M[M.length-1]==","){M=M.substr(0,M.length-1)}if(N[N.length-1]=="|"){N=N.substr(0,N.length-1)}L+="Layout="+M+":TrainingStrategy="+N;return L};var h=function(K){y("<div>"+K.content.data["text/html"]+"</div>").insertAfter("#"+l)};var w=function(){var N=IPython.notebook.kernel;var K=I();if(K.length<1){return}console.log(K);var M={iopub:{output:h}};var L="from JsMVA.Factory import __BookDNNHelper";N.execute(L);L='__BookDNNHelper("'+K+'")';N.execute(L,M);L="del __BookDNNHelper";N.execute(L);return};var t=function(){for(var L in H){y("#"+H[L]).on("click",function(){m(y(this)[0].id,true,true,true)})}for(var K in g){g[K].openOnClick()}y("#globopts_menu").on("click",function(){y("#globopts_dialog").dialog("open")});y("#scale_layer_color").on("click",i);y("#save_net").on("click",w);y.repeat().add("connection").each(y).connections("update").wait(0)};f.draw=function(K){l=K;r=0;y("#"+l).css({"z-index":90,position:"relative"});J=[];g=[];C=Array();g.push(new v("connect_layer","Connect layers","To connect two layer double click on first layer, grab the arrow and move inside the other layer."));g.push(new v("warning_nonet","No network","You didn't build a network or it's not valid. The first layer needs to connect to input layer and the last to output layer!"));k();t();m("layer_input",false,true,false,"<center>Input layer</center>");m("layer_output",false,false,true,"<center>Output layer</center>");s();B();b();q()};return f});